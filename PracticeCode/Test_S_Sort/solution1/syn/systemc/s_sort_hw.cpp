// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "s_sort_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic s_sort_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic s_sort_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<17> s_sort_hw::ap_ST_fsm_state1 = "1";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state2 = "10";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state3 = "100";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state4 = "1000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state5 = "10000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state6 = "100000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state7 = "1000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state8 = "10000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state9 = "100000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state10 = "1000000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state11 = "10000000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state12 = "100000000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_pp1_stage0 = "1000000000000000";
const sc_lv<17> s_sort_hw::ap_ST_fsm_state19 = "10000000000000000";
const bool s_sort_hw::ap_const_boolean_1 = true;
const sc_lv<1> s_sort_hw::ap_const_lv1_0 = "0";
const sc_lv<1> s_sort_hw::ap_const_lv1_1 = "1";
const sc_lv<2> s_sort_hw::ap_const_lv2_0 = "00";
const sc_lv<2> s_sort_hw::ap_const_lv2_2 = "10";
const sc_lv<2> s_sort_hw::ap_const_lv2_3 = "11";
const sc_lv<2> s_sort_hw::ap_const_lv2_1 = "1";
const sc_lv<32> s_sort_hw::ap_const_lv32_1 = "1";
const sc_lv<32> s_sort_hw::ap_const_lv32_F = "1111";
const bool s_sort_hw::ap_const_boolean_0 = false;
const sc_lv<32> s_sort_hw::ap_const_lv32_3 = "11";
const sc_lv<32> s_sort_hw::ap_const_lv32_4 = "100";
const sc_lv<32> s_sort_hw::ap_const_lv32_5 = "101";
const sc_lv<32> s_sort_hw::ap_const_lv32_6 = "110";
const sc_lv<32> s_sort_hw::ap_const_lv32_7 = "111";
const sc_lv<32> s_sort_hw::ap_const_lv32_8 = "1000";
const sc_lv<4> s_sort_hw::ap_const_lv4_0 = "0000";
const sc_lv<32> s_sort_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> s_sort_hw::ap_const_lv32_2 = "10";
const sc_lv<32> s_sort_hw::ap_const_lv32_E = "1110";
const sc_lv<4> s_sort_hw::ap_const_lv4_1 = "1";
const sc_lv<4> s_sort_hw::ap_const_lv4_2 = "10";
const sc_lv<4> s_sort_hw::ap_const_lv4_3 = "11";
const sc_lv<4> s_sort_hw::ap_const_lv4_4 = "100";
const sc_lv<4> s_sort_hw::ap_const_lv4_5 = "101";
const sc_lv<4> s_sort_hw::ap_const_lv4_6 = "110";
const sc_lv<4> s_sort_hw::ap_const_lv4_7 = "111";
const sc_lv<4> s_sort_hw::ap_const_lv4_8 = "1000";
const sc_lv<32> s_sort_hw::ap_const_lv32_9 = "1001";
const sc_lv<4> s_sort_hw::ap_const_lv4_A = "1010";
const sc_lv<32> s_sort_hw::ap_const_lv32_17 = "10111";
const sc_lv<32> s_sort_hw::ap_const_lv32_1E = "11110";
const sc_lv<8> s_sort_hw::ap_const_lv8_FF = "11111111";
const sc_lv<23> s_sort_hw::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<32> s_sort_hw::ap_const_lv32_1F = "11111";
const sc_lv<9> s_sort_hw::ap_const_lv9_181 = "110000001";
const sc_lv<8> s_sort_hw::ap_const_lv8_7F = "1111111";
const sc_lv<32> s_sort_hw::ap_const_lv32_18 = "11000";
const sc_lv<32> s_sort_hw::ap_const_lv32_37 = "110111";
const sc_lv<4> s_sort_hw::ap_const_lv4_9 = "1001";
const sc_lv<5> s_sort_hw::ap_const_lv5_2 = "10";
const sc_lv<32> s_sort_hw::ap_const_lv32_10 = "10000";

s_sort_hw::s_sort_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    result_U = new s_sort_hw_result("result_U");
    result_U->clk(ap_clk);
    result_U->reset(ap_rst_n_inv);
    result_U->address0(result_address0);
    result_U->ce0(result_ce0);
    result_U->we0(result_we0);
    result_U->d0(result_d0);
    result_U->q0(result_q0);
    result_U->address1(result_address1);
    result_U->ce1(result_ce1);
    result_U->we1(result_we1);
    result_U->d1(result_load_1_reg_816);
    result_U->q1(result_q1);
    s_sort_hw_sitofp_bkb_U1 = new s_sort_hw_sitofp_bkb<1,6,32,32>("s_sort_hw_sitofp_bkb_U1");
    s_sort_hw_sitofp_bkb_U1->clk(ap_clk);
    s_sort_hw_sitofp_bkb_U1->reset(ap_rst_n_inv);
    s_sort_hw_sitofp_bkb_U1->din0(p_Val2_6_reg_838);
    s_sort_hw_sitofp_bkb_U1->ce(ap_var_for_const0);
    s_sort_hw_sitofp_bkb_U1->dout(grp_fu_261_p1);
    s_sort_hw_fcmp_32cud_U2 = new s_sort_hw_fcmp_32cud<1,2,32,32,1>("s_sort_hw_fcmp_32cud_U2");
    s_sort_hw_fcmp_32cud_U2->clk(ap_clk);
    s_sort_hw_fcmp_32cud_U2->reset(ap_rst_n_inv);
    s_sort_hw_fcmp_32cud_U2->din0(result_q0);
    s_sort_hw_fcmp_32cud_U2->din1(result_q1);
    s_sort_hw_fcmp_32cud_U2->ce(ap_var_for_const0);
    s_sort_hw_fcmp_32cud_U2->opcode(ap_var_for_const1);
    s_sort_hw_fcmp_32cud_U2->dout(grp_fu_265_p2);
    s_sort_hw_mux_104dEe_U3 = new s_sort_hw_mux_104dEe<1,1,32,32,32,32,32,32,32,32,32,32,4,32>("s_sort_hw_mux_104dEe_U3");
    s_sort_hw_mux_104dEe_U3->din0(tmp_data_fu_116);
    s_sort_hw_mux_104dEe_U3->din1(tmp_data_1_fu_120);
    s_sort_hw_mux_104dEe_U3->din2(tmp_data_3_fu_124);
    s_sort_hw_mux_104dEe_U3->din3(tmp_data_4_fu_128);
    s_sort_hw_mux_104dEe_U3->din4(tmp_data_5_fu_132);
    s_sort_hw_mux_104dEe_U3->din5(tmp_data_6_fu_136);
    s_sort_hw_mux_104dEe_U3->din6(tmp_data_7_fu_140);
    s_sort_hw_mux_104dEe_U3->din7(tmp_data_8_fu_144);
    s_sort_hw_mux_104dEe_U3->din8(tmp_data_9_fu_148);
    s_sort_hw_mux_104dEe_U3->din9(tmp_data_10_fu_152);
    s_sort_hw_mux_104dEe_U3->din10(i1_0_reg_218);
    s_sort_hw_mux_104dEe_U3->dout(tmp_1_fu_384_p12);
    s_sort_hw_mux_104dEe_U4 = new s_sort_hw_mux_104dEe<1,1,32,32,32,32,32,32,32,32,32,32,4,32>("s_sort_hw_mux_104dEe_U4");
    s_sort_hw_mux_104dEe_U4->din0(tmp_data_fu_116);
    s_sort_hw_mux_104dEe_U4->din1(tmp_data_1_fu_120);
    s_sort_hw_mux_104dEe_U4->din2(tmp_data_3_fu_124);
    s_sort_hw_mux_104dEe_U4->din3(tmp_data_4_fu_128);
    s_sort_hw_mux_104dEe_U4->din4(tmp_data_5_fu_132);
    s_sort_hw_mux_104dEe_U4->din5(tmp_data_6_fu_136);
    s_sort_hw_mux_104dEe_U4->din6(tmp_data_7_fu_140);
    s_sort_hw_mux_104dEe_U4->din7(tmp_data_8_fu_144);
    s_sort_hw_mux_104dEe_U4->din8(tmp_data_9_fu_148);
    s_sort_hw_mux_104dEe_U4->din9(tmp_data_10_fu_152);
    s_sort_hw_mux_104dEe_U4->din10(i_1_reg_249);
    s_sort_hw_mux_104dEe_U4->dout(tmp_data_2_fu_666_p12);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln339_fu_557_p2);
    sensitive << ( zext_ln339_fu_553_p1 );

    SC_METHOD(thread_and_ln35_1_fu_525_p2);
    sensitive << ( and_ln35_fu_519_p2 );
    sensitive << ( grp_fu_265_p2 );

    SC_METHOD(thread_and_ln35_fu_519_p2);
    sensitive << ( or_ln35_fu_495_p2 );
    sensitive << ( or_ln35_1_fu_513_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state17_io );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state17_io );
    sensitive << ( ap_block_state18_io );

    SC_METHOD(thread_ap_block_state16_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state17_io);
    sensitive << ( output_V_data_1_ack_in );
    sensitive << ( icmp_ln44_reg_843 );

    SC_METHOD(thread_ap_block_state17_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state18_io);
    sensitive << ( output_V_data_1_ack_in );
    sensitive << ( icmp_ln44_reg_843_pp1_iter1_reg );

    SC_METHOD(thread_ap_block_state18_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state19);
    sensitive << ( output_r_TREADY );
    sensitive << ( output_V_data_1_state );
    sensitive << ( output_V_last_V_1_state );

    SC_METHOD(thread_ap_block_state2);
    sensitive << ( input_V_data_0_vld_out );
    sensitive << ( icmp_ln19_fu_301_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state16);
    sensitive << ( icmp_ln44_fu_654_p2 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_211_p4);
    sensitive << ( i_0_reg_207 );

    SC_METHOD(thread_ap_phi_mux_i_1_phi_fu_253_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln44_reg_843 );
    sensitive << ( i_1_reg_249 );
    sensitive << ( i_5_reg_847 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bitcast_ln35_1_fu_466_p1);
    sensitive << ( result_load_1_reg_816 );

    SC_METHOD(thread_i_2_fu_307_p2);
    sensitive << ( i_0_reg_207 );

    SC_METHOD(thread_i_4_fu_421_p2);
    sensitive << ( i2_0_reg_229 );

    SC_METHOD(thread_i_5_fu_660_p2);
    sensitive << ( ap_phi_mux_i_1_phi_fu_253_p4 );

    SC_METHOD(thread_i_fu_373_p2);
    sensitive << ( i1_0_reg_218 );

    SC_METHOD(thread_icmp_ln19_fu_301_p2);
    sensitive << ( input_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_301_p2 );
    sensitive << ( i_0_reg_207 );

    SC_METHOD(thread_icmp_ln29_fu_367_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i1_0_reg_218 );

    SC_METHOD(thread_icmp_ln33_fu_415_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( i2_0_reg_229 );

    SC_METHOD(thread_icmp_ln34_fu_438_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( j_0_in_reg_240 );

    SC_METHOD(thread_icmp_ln35_1_fu_489_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_V_1_fu_462_p1 );

    SC_METHOD(thread_icmp_ln35_2_fu_501_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_6_fu_469_p4 );

    SC_METHOD(thread_icmp_ln35_3_fu_507_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( trunc_ln35_1_fu_479_p1 );

    SC_METHOD(thread_icmp_ln35_fu_483_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_V_fu_452_p4 );

    SC_METHOD(thread_icmp_ln44_fu_654_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_i_1_phi_fu_253_p4 );

    SC_METHOD(thread_input_V_data_0_ack_in);
    sensitive << ( input_V_data_0_state );

    SC_METHOD(thread_input_V_data_0_ack_out);
    sensitive << ( input_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_301_p2 );

    SC_METHOD(thread_input_V_data_0_data_out);
    sensitive << ( input_V_data_0_payload_A );
    sensitive << ( input_V_data_0_payload_B );
    sensitive << ( input_V_data_0_sel );

    SC_METHOD(thread_input_V_data_0_load_A);
    sensitive << ( input_V_data_0_sel_wr );
    sensitive << ( input_V_data_0_state_cmp_full );

    SC_METHOD(thread_input_V_data_0_load_B);
    sensitive << ( input_V_data_0_sel_wr );
    sensitive << ( input_V_data_0_state_cmp_full );

    SC_METHOD(thread_input_V_data_0_sel);
    sensitive << ( input_V_data_0_sel_rd );

    SC_METHOD(thread_input_V_data_0_state_cmp_full);
    sensitive << ( input_V_data_0_state );

    SC_METHOD(thread_input_V_data_0_vld_in);
    sensitive << ( input_r_TVALID );

    SC_METHOD(thread_input_V_data_0_vld_out);
    sensitive << ( input_V_data_0_state );

    SC_METHOD(thread_input_V_last_V_0_ack_out);
    sensitive << ( input_V_data_0_vld_out );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_301_p2 );

    SC_METHOD(thread_input_V_last_V_0_vld_in);
    sensitive << ( input_r_TVALID );

    SC_METHOD(thread_input_r_TDATA_blk_n);
    sensitive << ( input_V_data_0_state );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_301_p2 );

    SC_METHOD(thread_input_r_TREADY);
    sensitive << ( input_V_last_V_0_state );

    SC_METHOD(thread_isNeg_fu_563_p3);
    sensitive << ( add_ln339_fu_557_p2 );

    SC_METHOD(thread_j_fu_432_p2);
    sensitive << ( j_0_in_reg_240 );

    SC_METHOD(thread_mantissa_V_fu_539_p4);
    sensitive << ( tmp_V_1_fu_462_p1 );

    SC_METHOD(thread_or_ln35_1_fu_513_p2);
    sensitive << ( icmp_ln35_3_fu_507_p2 );
    sensitive << ( icmp_ln35_2_fu_501_p2 );

    SC_METHOD(thread_or_ln35_fu_495_p2);
    sensitive << ( icmp_ln35_1_fu_489_p2 );
    sensitive << ( icmp_ln35_fu_483_p2 );

    SC_METHOD(thread_output_V_data_1_ack_in);
    sensitive << ( output_V_data_1_state );

    SC_METHOD(thread_output_V_data_1_ack_out);
    sensitive << ( output_r_TREADY );

    SC_METHOD(thread_output_V_data_1_data_out);
    sensitive << ( output_V_data_1_payload_A );
    sensitive << ( output_V_data_1_payload_B );
    sensitive << ( output_V_data_1_sel );

    SC_METHOD(thread_output_V_data_1_load_A);
    sensitive << ( output_V_data_1_sel_wr );
    sensitive << ( output_V_data_1_state_cmp_full );

    SC_METHOD(thread_output_V_data_1_load_B);
    sensitive << ( output_V_data_1_sel_wr );
    sensitive << ( output_V_data_1_state_cmp_full );

    SC_METHOD(thread_output_V_data_1_sel);
    sensitive << ( output_V_data_1_sel_rd );

    SC_METHOD(thread_output_V_data_1_state_cmp_full);
    sensitive << ( output_V_data_1_state );

    SC_METHOD(thread_output_V_data_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln44_reg_843 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_output_V_data_1_vld_out);
    sensitive << ( output_V_data_1_state );

    SC_METHOD(thread_output_V_last_V_1_ack_in);
    sensitive << ( output_V_last_V_1_state );

    SC_METHOD(thread_output_V_last_V_1_ack_out);
    sensitive << ( output_r_TREADY );

    SC_METHOD(thread_output_V_last_V_1_data_out);
    sensitive << ( output_V_last_V_1_payload_A );
    sensitive << ( output_V_last_V_1_payload_B );
    sensitive << ( output_V_last_V_1_sel );

    SC_METHOD(thread_output_V_last_V_1_load_A);
    sensitive << ( output_V_last_V_1_sel_wr );
    sensitive << ( output_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_V_last_V_1_load_B);
    sensitive << ( output_V_last_V_1_sel_wr );
    sensitive << ( output_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_V_last_V_1_sel);
    sensitive << ( output_V_last_V_1_sel_rd );

    SC_METHOD(thread_output_V_last_V_1_state_cmp_full);
    sensitive << ( output_V_last_V_1_state );

    SC_METHOD(thread_output_V_last_V_1_vld_in);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln44_reg_843 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_output_V_last_V_1_vld_out);
    sensitive << ( output_V_last_V_1_state );

    SC_METHOD(thread_output_r_TDATA);
    sensitive << ( output_V_data_1_data_out );

    SC_METHOD(thread_output_r_TDATA_blk_n);
    sensitive << ( output_V_data_1_state );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln44_reg_843 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( icmp_ln44_reg_843_pp1_iter1_reg );

    SC_METHOD(thread_output_r_TLAST);
    sensitive << ( output_V_last_V_1_data_out );

    SC_METHOD(thread_output_r_TVALID);
    sensitive << ( output_V_last_V_1_state );

    SC_METHOD(thread_p_Val2_5_fu_635_p3);
    sensitive << ( isNeg_fu_563_p3 );
    sensitive << ( zext_ln662_fu_621_p1 );
    sensitive << ( tmp_5_fu_625_p4 );

    SC_METHOD(thread_p_Val2_6_fu_648_p3);
    sensitive << ( p_Result_s_reg_827 );
    sensitive << ( p_Val2_5_reg_832 );
    sensitive << ( result_V_1_fu_643_p2 );

    SC_METHOD(thread_p_Val2_s_fu_449_p1);
    sensitive << ( result_load_reg_810 );

    SC_METHOD(thread_r_V_1_fu_607_p2);
    sensitive << ( zext_ln682_fu_549_p1 );
    sensitive << ( zext_ln1287_fu_597_p1 );

    SC_METHOD(thread_r_V_fu_601_p2);
    sensitive << ( mantissa_V_fu_539_p4 );
    sensitive << ( sext_ln1311_2_fu_593_p1 );

    SC_METHOD(thread_result_V_1_fu_643_p2);
    sensitive << ( p_Val2_5_reg_832 );

    SC_METHOD(thread_result_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( result_addr_1_reg_790 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( result_addr_2_reg_804 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( zext_ln30_fu_379_p1 );

    SC_METHOD(thread_result_address1);
    sensitive << ( result_addr_1_reg_790 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( sext_ln35_fu_444_p1 );

    SC_METHOD(thread_result_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_result_ce1);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_result_d0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( tmp_1_fu_384_p12 );
    sensitive << ( grp_fu_261_p1 );

    SC_METHOD(thread_result_we0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( and_ln35_1_reg_823 );
    sensitive << ( icmp_ln29_fu_367_p2 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_result_we1);
    sensitive << ( and_ln35_1_fu_525_p2 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_sext_ln1311_1_fu_589_p1);
    sensitive << ( ush_fu_581_p3 );

    SC_METHOD(thread_sext_ln1311_2_fu_593_p1);
    sensitive << ( ush_fu_581_p3 );

    SC_METHOD(thread_sext_ln1311_fu_577_p1);
    sensitive << ( sub_ln1311_fu_571_p2 );

    SC_METHOD(thread_sext_ln35_fu_444_p1);
    sensitive << ( j_fu_432_p2 );

    SC_METHOD(thread_sub_ln1311_fu_571_p2);
    sensitive << ( tmp_V_fu_452_p4 );

    SC_METHOD(thread_tmp_5_fu_625_p4);
    sensitive << ( r_V_1_fu_607_p2 );

    SC_METHOD(thread_tmp_6_fu_469_p4);
    sensitive << ( bitcast_ln35_1_fu_466_p1 );

    SC_METHOD(thread_tmp_9_fu_613_p3);
    sensitive << ( r_V_fu_601_p2 );

    SC_METHOD(thread_tmp_V_1_fu_462_p1);
    sensitive << ( p_Val2_s_fu_449_p1 );

    SC_METHOD(thread_tmp_V_fu_452_p4);
    sensitive << ( p_Val2_s_fu_449_p1 );

    SC_METHOD(thread_tmp_last_V_fu_693_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln44_reg_843 );
    sensitive << ( i_1_reg_249 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_trunc_ln35_1_fu_479_p1);
    sensitive << ( bitcast_ln35_1_fu_466_p1 );

    SC_METHOD(thread_ush_fu_581_p3);
    sensitive << ( add_ln339_fu_557_p2 );
    sensitive << ( isNeg_fu_563_p3 );
    sensitive << ( sext_ln1311_fu_577_p1 );

    SC_METHOD(thread_zext_ln1287_fu_597_p1);
    sensitive << ( sext_ln1311_1_fu_589_p1 );

    SC_METHOD(thread_zext_ln30_fu_379_p1);
    sensitive << ( i1_0_reg_218 );

    SC_METHOD(thread_zext_ln339_fu_553_p1);
    sensitive << ( tmp_V_fu_452_p4 );

    SC_METHOD(thread_zext_ln33_fu_411_p1);
    sensitive << ( i2_0_reg_229 );

    SC_METHOD(thread_zext_ln35_fu_427_p1);
    sensitive << ( i2_0_reg_229 );

    SC_METHOD(thread_zext_ln662_fu_621_p1);
    sensitive << ( tmp_9_fu_613_p3 );

    SC_METHOD(thread_zext_ln682_fu_549_p1);
    sensitive << ( mantissa_V_fu_539_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( input_V_data_0_vld_out );
    sensitive << ( output_r_TREADY );
    sensitive << ( output_V_data_1_state );
    sensitive << ( output_V_last_V_1_state );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln19_fu_301_p2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln33_fu_415_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln34_fu_438_p2 );
    sensitive << ( and_ln35_1_fu_525_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln44_fu_654_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( icmp_ln29_fu_367_p2 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    input_V_data_0_sel_rd = SC_LOGIC_0;
    input_V_data_0_sel_wr = SC_LOGIC_0;
    input_V_data_0_state = "00";
    input_V_last_V_0_state = "00";
    output_V_data_1_sel_rd = SC_LOGIC_0;
    output_V_data_1_sel_wr = SC_LOGIC_0;
    output_V_data_1_state = "00";
    output_V_last_V_1_sel_rd = SC_LOGIC_0;
    output_V_last_V_1_sel_wr = SC_LOGIC_0;
    output_V_last_V_1_state = "00";
    ap_CS_fsm = "00000000000000001";
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "s_sort_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_r_TDATA, "(port)input_r_TDATA");
    sc_trace(mVcdFile, input_r_TVALID, "(port)input_r_TVALID");
    sc_trace(mVcdFile, input_r_TREADY, "(port)input_r_TREADY");
    sc_trace(mVcdFile, input_r_TLAST, "(port)input_r_TLAST");
    sc_trace(mVcdFile, output_r_TDATA, "(port)output_r_TDATA");
    sc_trace(mVcdFile, output_r_TVALID, "(port)output_r_TVALID");
    sc_trace(mVcdFile, output_r_TREADY, "(port)output_r_TREADY");
    sc_trace(mVcdFile, output_r_TLAST, "(port)output_r_TLAST");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, input_V_data_0_data_out, "input_V_data_0_data_out");
    sc_trace(mVcdFile, input_V_data_0_vld_in, "input_V_data_0_vld_in");
    sc_trace(mVcdFile, input_V_data_0_vld_out, "input_V_data_0_vld_out");
    sc_trace(mVcdFile, input_V_data_0_ack_in, "input_V_data_0_ack_in");
    sc_trace(mVcdFile, input_V_data_0_ack_out, "input_V_data_0_ack_out");
    sc_trace(mVcdFile, input_V_data_0_payload_A, "input_V_data_0_payload_A");
    sc_trace(mVcdFile, input_V_data_0_payload_B, "input_V_data_0_payload_B");
    sc_trace(mVcdFile, input_V_data_0_sel_rd, "input_V_data_0_sel_rd");
    sc_trace(mVcdFile, input_V_data_0_sel_wr, "input_V_data_0_sel_wr");
    sc_trace(mVcdFile, input_V_data_0_sel, "input_V_data_0_sel");
    sc_trace(mVcdFile, input_V_data_0_load_A, "input_V_data_0_load_A");
    sc_trace(mVcdFile, input_V_data_0_load_B, "input_V_data_0_load_B");
    sc_trace(mVcdFile, input_V_data_0_state, "input_V_data_0_state");
    sc_trace(mVcdFile, input_V_data_0_state_cmp_full, "input_V_data_0_state_cmp_full");
    sc_trace(mVcdFile, input_V_last_V_0_vld_in, "input_V_last_V_0_vld_in");
    sc_trace(mVcdFile, input_V_last_V_0_ack_out, "input_V_last_V_0_ack_out");
    sc_trace(mVcdFile, input_V_last_V_0_state, "input_V_last_V_0_state");
    sc_trace(mVcdFile, output_V_data_1_data_out, "output_V_data_1_data_out");
    sc_trace(mVcdFile, output_V_data_1_vld_in, "output_V_data_1_vld_in");
    sc_trace(mVcdFile, output_V_data_1_vld_out, "output_V_data_1_vld_out");
    sc_trace(mVcdFile, output_V_data_1_ack_in, "output_V_data_1_ack_in");
    sc_trace(mVcdFile, output_V_data_1_ack_out, "output_V_data_1_ack_out");
    sc_trace(mVcdFile, output_V_data_1_payload_A, "output_V_data_1_payload_A");
    sc_trace(mVcdFile, output_V_data_1_payload_B, "output_V_data_1_payload_B");
    sc_trace(mVcdFile, output_V_data_1_sel_rd, "output_V_data_1_sel_rd");
    sc_trace(mVcdFile, output_V_data_1_sel_wr, "output_V_data_1_sel_wr");
    sc_trace(mVcdFile, output_V_data_1_sel, "output_V_data_1_sel");
    sc_trace(mVcdFile, output_V_data_1_load_A, "output_V_data_1_load_A");
    sc_trace(mVcdFile, output_V_data_1_load_B, "output_V_data_1_load_B");
    sc_trace(mVcdFile, output_V_data_1_state, "output_V_data_1_state");
    sc_trace(mVcdFile, output_V_data_1_state_cmp_full, "output_V_data_1_state_cmp_full");
    sc_trace(mVcdFile, output_V_last_V_1_data_out, "output_V_last_V_1_data_out");
    sc_trace(mVcdFile, output_V_last_V_1_vld_in, "output_V_last_V_1_vld_in");
    sc_trace(mVcdFile, output_V_last_V_1_vld_out, "output_V_last_V_1_vld_out");
    sc_trace(mVcdFile, output_V_last_V_1_ack_in, "output_V_last_V_1_ack_in");
    sc_trace(mVcdFile, output_V_last_V_1_ack_out, "output_V_last_V_1_ack_out");
    sc_trace(mVcdFile, output_V_last_V_1_payload_A, "output_V_last_V_1_payload_A");
    sc_trace(mVcdFile, output_V_last_V_1_payload_B, "output_V_last_V_1_payload_B");
    sc_trace(mVcdFile, output_V_last_V_1_sel_rd, "output_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, output_V_last_V_1_sel_wr, "output_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, output_V_last_V_1_sel, "output_V_last_V_1_sel");
    sc_trace(mVcdFile, output_V_last_V_1_load_A, "output_V_last_V_1_load_A");
    sc_trace(mVcdFile, output_V_last_V_1_load_B, "output_V_last_V_1_load_B");
    sc_trace(mVcdFile, output_V_last_V_1_state, "output_V_last_V_1_state");
    sc_trace(mVcdFile, output_V_last_V_1_state_cmp_full, "output_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, input_r_TDATA_blk_n, "input_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln19_fu_301_p2, "icmp_ln19_fu_301_p2");
    sc_trace(mVcdFile, output_r_TDATA_blk_n, "output_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln44_reg_843, "icmp_ln44_reg_843");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, icmp_ln44_reg_843_pp1_iter1_reg, "icmp_ln44_reg_843_pp1_iter1_reg");
    sc_trace(mVcdFile, i_1_reg_249, "i_1_reg_249");
    sc_trace(mVcdFile, i_2_fu_307_p2, "i_2_fu_307_p2");
    sc_trace(mVcdFile, ap_block_state2, "ap_block_state2");
    sc_trace(mVcdFile, i_fu_373_p2, "i_fu_373_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, zext_ln33_fu_411_p1, "zext_ln33_fu_411_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln33_fu_415_p2, "icmp_ln33_fu_415_p2");
    sc_trace(mVcdFile, i_4_fu_421_p2, "i_4_fu_421_p2");
    sc_trace(mVcdFile, i_4_reg_785, "i_4_reg_785");
    sc_trace(mVcdFile, result_addr_1_reg_790, "result_addr_1_reg_790");
    sc_trace(mVcdFile, j_fu_432_p2, "j_fu_432_p2");
    sc_trace(mVcdFile, j_reg_796, "j_reg_796");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, result_addr_2_reg_804, "result_addr_2_reg_804");
    sc_trace(mVcdFile, icmp_ln34_fu_438_p2, "icmp_ln34_fu_438_p2");
    sc_trace(mVcdFile, result_q0, "result_q0");
    sc_trace(mVcdFile, result_load_reg_810, "result_load_reg_810");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, result_q1, "result_q1");
    sc_trace(mVcdFile, result_load_1_reg_816, "result_load_1_reg_816");
    sc_trace(mVcdFile, and_ln35_1_fu_525_p2, "and_ln35_1_fu_525_p2");
    sc_trace(mVcdFile, and_ln35_1_reg_823, "and_ln35_1_reg_823");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, p_Result_s_reg_827, "p_Result_s_reg_827");
    sc_trace(mVcdFile, p_Val2_5_fu_635_p3, "p_Val2_5_fu_635_p3");
    sc_trace(mVcdFile, p_Val2_5_reg_832, "p_Val2_5_reg_832");
    sc_trace(mVcdFile, p_Val2_6_fu_648_p3, "p_Val2_6_fu_648_p3");
    sc_trace(mVcdFile, p_Val2_6_reg_838, "p_Val2_6_reg_838");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln44_fu_654_p2, "icmp_ln44_fu_654_p2");
    sc_trace(mVcdFile, ap_block_state16_pp1_stage0_iter0, "ap_block_state16_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state17_pp1_stage0_iter1, "ap_block_state17_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state17_io, "ap_block_state17_io");
    sc_trace(mVcdFile, ap_block_state18_pp1_stage0_iter2, "ap_block_state18_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state18_io, "ap_block_state18_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_5_fu_660_p2, "i_5_fu_660_p2");
    sc_trace(mVcdFile, i_5_reg_847, "i_5_reg_847");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_data_2_fu_666_p12, "tmp_data_2_fu_666_p12");
    sc_trace(mVcdFile, tmp_last_V_fu_693_p2, "tmp_last_V_fu_693_p2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state16, "ap_condition_pp1_exit_iter0_state16");
    sc_trace(mVcdFile, result_address0, "result_address0");
    sc_trace(mVcdFile, result_ce0, "result_ce0");
    sc_trace(mVcdFile, result_we0, "result_we0");
    sc_trace(mVcdFile, result_d0, "result_d0");
    sc_trace(mVcdFile, result_address1, "result_address1");
    sc_trace(mVcdFile, result_ce1, "result_ce1");
    sc_trace(mVcdFile, result_we1, "result_we1");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_211_p4, "ap_phi_mux_i_0_phi_fu_211_p4");
    sc_trace(mVcdFile, i_0_reg_207, "i_0_reg_207");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i1_0_reg_218, "i1_0_reg_218");
    sc_trace(mVcdFile, icmp_ln29_fu_367_p2, "icmp_ln29_fu_367_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i2_0_reg_229, "i2_0_reg_229");
    sc_trace(mVcdFile, j_0_in_reg_240, "j_0_in_reg_240");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_phi_mux_i_1_phi_fu_253_p4, "ap_phi_mux_i_1_phi_fu_253_p4");
    sc_trace(mVcdFile, zext_ln30_fu_379_p1, "zext_ln30_fu_379_p1");
    sc_trace(mVcdFile, zext_ln35_fu_427_p1, "zext_ln35_fu_427_p1");
    sc_trace(mVcdFile, sext_ln35_fu_444_p1, "sext_ln35_fu_444_p1");
    sc_trace(mVcdFile, tmp_data_fu_116, "tmp_data_fu_116");
    sc_trace(mVcdFile, tmp_data_1_fu_120, "tmp_data_1_fu_120");
    sc_trace(mVcdFile, tmp_data_3_fu_124, "tmp_data_3_fu_124");
    sc_trace(mVcdFile, tmp_data_4_fu_128, "tmp_data_4_fu_128");
    sc_trace(mVcdFile, tmp_data_5_fu_132, "tmp_data_5_fu_132");
    sc_trace(mVcdFile, tmp_data_6_fu_136, "tmp_data_6_fu_136");
    sc_trace(mVcdFile, tmp_data_7_fu_140, "tmp_data_7_fu_140");
    sc_trace(mVcdFile, tmp_data_8_fu_144, "tmp_data_8_fu_144");
    sc_trace(mVcdFile, tmp_data_9_fu_148, "tmp_data_9_fu_148");
    sc_trace(mVcdFile, tmp_data_10_fu_152, "tmp_data_10_fu_152");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, tmp_1_fu_384_p12, "tmp_1_fu_384_p12");
    sc_trace(mVcdFile, grp_fu_261_p1, "grp_fu_261_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, p_Val2_s_fu_449_p1, "p_Val2_s_fu_449_p1");
    sc_trace(mVcdFile, bitcast_ln35_1_fu_466_p1, "bitcast_ln35_1_fu_466_p1");
    sc_trace(mVcdFile, tmp_V_fu_452_p4, "tmp_V_fu_452_p4");
    sc_trace(mVcdFile, tmp_V_1_fu_462_p1, "tmp_V_1_fu_462_p1");
    sc_trace(mVcdFile, icmp_ln35_1_fu_489_p2, "icmp_ln35_1_fu_489_p2");
    sc_trace(mVcdFile, icmp_ln35_fu_483_p2, "icmp_ln35_fu_483_p2");
    sc_trace(mVcdFile, tmp_6_fu_469_p4, "tmp_6_fu_469_p4");
    sc_trace(mVcdFile, trunc_ln35_1_fu_479_p1, "trunc_ln35_1_fu_479_p1");
    sc_trace(mVcdFile, icmp_ln35_3_fu_507_p2, "icmp_ln35_3_fu_507_p2");
    sc_trace(mVcdFile, icmp_ln35_2_fu_501_p2, "icmp_ln35_2_fu_501_p2");
    sc_trace(mVcdFile, or_ln35_fu_495_p2, "or_ln35_fu_495_p2");
    sc_trace(mVcdFile, or_ln35_1_fu_513_p2, "or_ln35_1_fu_513_p2");
    sc_trace(mVcdFile, and_ln35_fu_519_p2, "and_ln35_fu_519_p2");
    sc_trace(mVcdFile, grp_fu_265_p2, "grp_fu_265_p2");
    sc_trace(mVcdFile, mantissa_V_fu_539_p4, "mantissa_V_fu_539_p4");
    sc_trace(mVcdFile, zext_ln339_fu_553_p1, "zext_ln339_fu_553_p1");
    sc_trace(mVcdFile, add_ln339_fu_557_p2, "add_ln339_fu_557_p2");
    sc_trace(mVcdFile, sub_ln1311_fu_571_p2, "sub_ln1311_fu_571_p2");
    sc_trace(mVcdFile, isNeg_fu_563_p3, "isNeg_fu_563_p3");
    sc_trace(mVcdFile, sext_ln1311_fu_577_p1, "sext_ln1311_fu_577_p1");
    sc_trace(mVcdFile, ush_fu_581_p3, "ush_fu_581_p3");
    sc_trace(mVcdFile, sext_ln1311_1_fu_589_p1, "sext_ln1311_1_fu_589_p1");
    sc_trace(mVcdFile, sext_ln1311_2_fu_593_p1, "sext_ln1311_2_fu_593_p1");
    sc_trace(mVcdFile, zext_ln682_fu_549_p1, "zext_ln682_fu_549_p1");
    sc_trace(mVcdFile, zext_ln1287_fu_597_p1, "zext_ln1287_fu_597_p1");
    sc_trace(mVcdFile, r_V_fu_601_p2, "r_V_fu_601_p2");
    sc_trace(mVcdFile, tmp_9_fu_613_p3, "tmp_9_fu_613_p3");
    sc_trace(mVcdFile, r_V_1_fu_607_p2, "r_V_1_fu_607_p2");
    sc_trace(mVcdFile, zext_ln662_fu_621_p1, "zext_ln662_fu_621_p1");
    sc_trace(mVcdFile, tmp_5_fu_625_p4, "tmp_5_fu_625_p4");
    sc_trace(mVcdFile, result_V_1_fu_643_p2, "result_V_1_fu_643_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_block_state19, "ap_block_state19");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
    mHdltvinHandle.open("s_sort_hw.hdltvin.dat");
    mHdltvoutHandle.open("s_sort_hw.hdltvout.dat");
}

s_sort_hw::~s_sort_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete result_U;
    delete s_sort_hw_sitofp_bkb_U1;
    delete s_sort_hw_fcmp_32cud_U2;
    delete s_sort_hw_mux_104dEe_U3;
    delete s_sort_hw_mux_104dEe_U4;
}

void s_sort_hw::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void s_sort_hw::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv5_2;
}

void s_sort_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state16.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln33_fu_415_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state16.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state16.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln33_fu_415_p2.read()))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i1_0_reg_218 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_367_p2.read()))) {
        i1_0_reg_218 = i_fu_373_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_367_p2.read()))) {
        i2_0_reg_229 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_438_p2.read()))) {
        i2_0_reg_229 = i_4_reg_785.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())))) {
        i_0_reg_207 = i_2_fu_307_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        i_0_reg_207 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln33_fu_415_p2.read()))) {
        i_1_reg_249 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        i_1_reg_249 = i_5_reg_847.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_V_data_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_vld_out.read()))) {
            input_V_data_0_sel_rd =  (sc_logic) (~input_V_data_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_V_data_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_ack_in.read()))) {
            input_V_data_0_sel_wr =  (sc_logic) (~input_V_data_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_V_data_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_ack_out.read()) && 
              esl_seteq<1,2,2>(input_V_data_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_in.read()) && 
              esl_seteq<1,2,2>(input_V_data_0_state.read(), ap_const_lv2_2)))) {
            input_V_data_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_V_data_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_V_data_0_state.read(), ap_const_lv2_1)))) {
            input_V_data_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(input_V_data_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_V_data_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(input_V_data_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_ack_out.read()))))) {
            input_V_data_0_state = ap_const_lv2_3;
        } else {
            input_V_data_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_V_last_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_V_last_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_V_last_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_V_last_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_V_last_V_0_state.read())))) {
            input_V_last_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_V_last_V_0_state.read())))) {
            input_V_last_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_V_last_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_V_last_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_V_last_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_V_last_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_V_last_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_last_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_V_last_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_V_last_V_0_ack_out.read()))))) {
            input_V_last_V_0_state = ap_const_lv2_3;
        } else {
            input_V_last_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_415_p2.read()))) {
        j_0_in_reg_240 = zext_ln33_fu_411_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        j_0_in_reg_240 = j_reg_796.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_V_data_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_vld_out.read()))) {
            output_V_data_1_sel_rd =  (sc_logic) (~output_V_data_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_V_data_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_ack_in.read()))) {
            output_V_data_1_sel_wr =  (sc_logic) (~output_V_data_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_V_data_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_V_data_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_V_data_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_V_data_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_V_data_1_state.read())))) {
            output_V_data_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_V_data_1_state.read())))) {
            output_V_data_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_V_data_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_V_data_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_V_data_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_V_data_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_ack_out.read()))))) {
            output_V_data_1_state = ap_const_lv2_3;
        } else {
            output_V_data_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_vld_out.read()))) {
            output_V_last_V_1_sel_rd =  (sc_logic) (~output_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_ack_in.read()))) {
            output_V_last_V_1_sel_wr =  (sc_logic) (~output_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_V_last_V_1_state.read())))) {
            output_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_V_last_V_1_state.read())))) {
            output_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_ack_out.read()))))) {
            output_V_last_V_1_state = ap_const_lv2_3;
        } else {
            output_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        and_ln35_1_reg_823 = and_ln35_1_fu_525_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_4_reg_785 = i_4_fu_421_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        i_5_reg_847 = i_5_fu_660_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln44_reg_843 = icmp_ln44_fu_654_p2.read();
        icmp_ln44_reg_843_pp1_iter1_reg = icmp_ln44_reg_843.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_load_A.read())) {
        input_V_data_0_payload_A = input_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_load_B.read())) {
        input_V_data_0_payload_B = input_r_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_reg_796 = j_fu_432_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_load_A.read())) {
        output_V_data_1_payload_A = tmp_data_2_fu_666_p12.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_load_B.read())) {
        output_V_data_1_payload_B = tmp_data_2_fu_666_p12.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_load_A.read())) {
        output_V_last_V_1_payload_A = tmp_last_V_fu_693_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_load_B.read())) {
        output_V_last_V_1_payload_B = tmp_last_V_fu_693_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln35_1_fu_525_p2.read()))) {
        p_Result_s_reg_827 = p_Val2_s_fu_449_p1.read().range(31, 31);
        p_Val2_5_reg_832 = p_Val2_5_fu_635_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        p_Val2_6_reg_838 = p_Val2_6_fu_648_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_fu_415_p2.read()))) {
        result_addr_1_reg_790 =  (sc_lv<4>) (zext_ln35_fu_427_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln34_fu_438_p2.read()))) {
        result_addr_2_reg_804 =  (sc_lv<4>) (sext_ln35_fu_444_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        result_load_1_reg_816 = result_q1.read();
        result_load_reg_810 = result_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && !esl_seteq<1,4,4>(ap_const_lv4_0, ap_phi_mux_i_0_phi_fu_211_p4.read()) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_1) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_2) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_3) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_4) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_5) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_6) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_7) && !esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_8))) {
        tmp_data_10_fu_152 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_1))) {
        tmp_data_1_fu_120 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_2))) {
        tmp_data_3_fu_124 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_3))) {
        tmp_data_4_fu_128 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_4))) {
        tmp_data_5_fu_132 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_5))) {
        tmp_data_6_fu_136 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_6))) {
        tmp_data_7_fu_140 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_7))) {
        tmp_data_8_fu_144 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_phi_mux_i_0_phi_fu_211_p4.read(), ap_const_lv4_8))) {
        tmp_data_9_fu_148 = input_V_data_0_data_out.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,4,4>(ap_const_lv4_0, ap_phi_mux_i_0_phi_fu_211_p4.read()))) {
        tmp_data_fu_116 = input_V_data_0_data_out.read();
    }
}

void s_sort_hw::thread_add_ln339_fu_557_p2() {
    add_ln339_fu_557_p2 = (!zext_ln339_fu_553_p1.read().is_01() || !ap_const_lv9_181.is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln339_fu_553_p1.read()) + sc_bigint<9>(ap_const_lv9_181));
}

void s_sort_hw::thread_and_ln35_1_fu_525_p2() {
    and_ln35_1_fu_525_p2 = (and_ln35_fu_519_p2.read() & grp_fu_265_p2.read());
}

void s_sort_hw::thread_and_ln35_fu_519_p2() {
    and_ln35_fu_519_p2 = (or_ln35_fu_495_p2.read() & or_ln35_1_fu_513_p2.read());
}

void s_sort_hw::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[15];
}

void s_sort_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void s_sort_hw::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void s_sort_hw::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void s_sort_hw::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[16];
}

void s_sort_hw::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void s_sort_hw::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void s_sort_hw::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void s_sort_hw::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void s_sort_hw::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void s_sort_hw::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void s_sort_hw::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void s_sort_hw::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void s_sort_hw::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void s_sort_hw::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void s_sort_hw::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state17_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())));
}

void s_sort_hw::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state17_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state18_io.read())));
}

void s_sort_hw::thread_ap_block_state16_pp1_stage0_iter0() {
    ap_block_state16_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void s_sort_hw::thread_ap_block_state17_io() {
    ap_block_state17_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_V_data_1_ack_in.read()));
}

void s_sort_hw::thread_ap_block_state17_pp1_stage0_iter1() {
    ap_block_state17_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void s_sort_hw::thread_ap_block_state18_io() {
    ap_block_state18_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_V_data_1_ack_in.read()));
}

void s_sort_hw::thread_ap_block_state18_pp1_stage0_iter2() {
    ap_block_state18_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void s_sort_hw::thread_ap_block_state19() {
    ap_block_state19 = (esl_seteq<1,2,2>(ap_const_lv2_1, output_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_V_last_V_1_state.read())));
}

void s_sort_hw::thread_ap_block_state2() {
    ap_block_state2 = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read()));
}

void s_sort_hw::thread_ap_condition_pp1_exit_iter0_state16() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_654_p2.read())) {
        ap_condition_pp1_exit_iter0_state16 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state16 = ap_const_logic_0;
    }
}

void s_sort_hw::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void s_sort_hw::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void s_sort_hw::thread_ap_phi_mux_i_0_phi_fu_211_p4() {
    ap_phi_mux_i_0_phi_fu_211_p4 = i_0_reg_207.read();
}

void s_sort_hw::thread_ap_phi_mux_i_1_phi_fu_253_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843.read()))) {
        ap_phi_mux_i_1_phi_fu_253_p4 = i_5_reg_847.read();
    } else {
        ap_phi_mux_i_1_phi_fu_253_p4 = i_1_reg_249.read();
    }
}

void s_sort_hw::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void s_sort_hw::thread_bitcast_ln35_1_fu_466_p1() {
    bitcast_ln35_1_fu_466_p1 = result_load_1_reg_816.read();
}

void s_sort_hw::thread_i_2_fu_307_p2() {
    i_2_fu_307_p2 = (!i_0_reg_207.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_207.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void s_sort_hw::thread_i_4_fu_421_p2() {
    i_4_fu_421_p2 = (!i2_0_reg_229.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i2_0_reg_229.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void s_sort_hw::thread_i_5_fu_660_p2() {
    i_5_fu_660_p2 = (!ap_phi_mux_i_1_phi_fu_253_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i_1_phi_fu_253_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void s_sort_hw::thread_i_fu_373_p2() {
    i_fu_373_p2 = (!i1_0_reg_218.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i1_0_reg_218.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void s_sort_hw::thread_icmp_ln19_fu_301_p2() {
    icmp_ln19_fu_301_p2 = (!i_0_reg_207.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_207.read() == ap_const_lv4_A);
}

void s_sort_hw::thread_icmp_ln29_fu_367_p2() {
    icmp_ln29_fu_367_p2 = (!i1_0_reg_218.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_218.read() == ap_const_lv4_A);
}

void s_sort_hw::thread_icmp_ln33_fu_415_p2() {
    icmp_ln33_fu_415_p2 = (!i2_0_reg_229.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_229.read() == ap_const_lv4_A);
}

void s_sort_hw::thread_icmp_ln34_fu_438_p2() {
    icmp_ln34_fu_438_p2 = (!j_0_in_reg_240.read().is_01() || !ap_const_lv32_9.is_01())? sc_lv<1>(): sc_lv<1>(j_0_in_reg_240.read() == ap_const_lv32_9);
}

void s_sort_hw::thread_icmp_ln35_1_fu_489_p2() {
    icmp_ln35_1_fu_489_p2 = (!tmp_V_1_fu_462_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_1_fu_462_p1.read() == ap_const_lv23_0);
}

void s_sort_hw::thread_icmp_ln35_2_fu_501_p2() {
    icmp_ln35_2_fu_501_p2 = (!tmp_6_fu_469_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_6_fu_469_p4.read() != ap_const_lv8_FF);
}

void s_sort_hw::thread_icmp_ln35_3_fu_507_p2() {
    icmp_ln35_3_fu_507_p2 = (!trunc_ln35_1_fu_479_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln35_1_fu_479_p1.read() == ap_const_lv23_0);
}

void s_sort_hw::thread_icmp_ln35_fu_483_p2() {
    icmp_ln35_fu_483_p2 = (!tmp_V_fu_452_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_fu_452_p4.read() != ap_const_lv8_FF);
}

void s_sort_hw::thread_icmp_ln44_fu_654_p2() {
    icmp_ln44_fu_654_p2 = (!ap_phi_mux_i_1_phi_fu_253_p4.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_1_phi_fu_253_p4.read() == ap_const_lv4_A);
}

void s_sort_hw::thread_input_V_data_0_ack_in() {
    input_V_data_0_ack_in = input_V_data_0_state.read()[1];
}

void s_sort_hw::thread_input_V_data_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())))) {
        input_V_data_0_ack_out = ap_const_logic_1;
    } else {
        input_V_data_0_ack_out = ap_const_logic_0;
    }
}

void s_sort_hw::thread_input_V_data_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_V_data_0_sel.read())) {
        input_V_data_0_data_out = input_V_data_0_payload_B.read();
    } else {
        input_V_data_0_data_out = input_V_data_0_payload_A.read();
    }
}

void s_sort_hw::thread_input_V_data_0_load_A() {
    input_V_data_0_load_A = (input_V_data_0_state_cmp_full.read() & ~input_V_data_0_sel_wr.read());
}

void s_sort_hw::thread_input_V_data_0_load_B() {
    input_V_data_0_load_B = (input_V_data_0_sel_wr.read() & input_V_data_0_state_cmp_full.read());
}

void s_sort_hw::thread_input_V_data_0_sel() {
    input_V_data_0_sel = input_V_data_0_sel_rd.read();
}

void s_sort_hw::thread_input_V_data_0_state_cmp_full() {
    input_V_data_0_state_cmp_full =  (sc_logic) ((!input_V_data_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_V_data_0_state.read() != ap_const_lv2_1))[0];
}

void s_sort_hw::thread_input_V_data_0_vld_in() {
    input_V_data_0_vld_in = input_r_TVALID.read();
}

void s_sort_hw::thread_input_V_data_0_vld_out() {
    input_V_data_0_vld_out = input_V_data_0_state.read()[0];
}

void s_sort_hw::thread_input_V_last_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())))) {
        input_V_last_V_0_ack_out = ap_const_logic_1;
    } else {
        input_V_last_V_0_ack_out = ap_const_logic_0;
    }
}

void s_sort_hw::thread_input_V_last_V_0_vld_in() {
    input_V_last_V_0_vld_in = input_r_TVALID.read();
}

void s_sort_hw::thread_input_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()))) {
        input_r_TDATA_blk_n = input_V_data_0_state.read()[0];
    } else {
        input_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void s_sort_hw::thread_input_r_TREADY() {
    input_r_TREADY = input_V_last_V_0_state.read()[1];
}

void s_sort_hw::thread_isNeg_fu_563_p3() {
    isNeg_fu_563_p3 = add_ln339_fu_557_p2.read().range(8, 8);
}

void s_sort_hw::thread_j_fu_432_p2() {
    j_fu_432_p2 = (!j_0_in_reg_240.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j_0_in_reg_240.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void s_sort_hw::thread_mantissa_V_fu_539_p4() {
    mantissa_V_fu_539_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, tmp_V_1_fu_462_p1.read()), ap_const_lv1_0);
}

void s_sort_hw::thread_or_ln35_1_fu_513_p2() {
    or_ln35_1_fu_513_p2 = (icmp_ln35_3_fu_507_p2.read() | icmp_ln35_2_fu_501_p2.read());
}

void s_sort_hw::thread_or_ln35_fu_495_p2() {
    or_ln35_fu_495_p2 = (icmp_ln35_1_fu_489_p2.read() | icmp_ln35_fu_483_p2.read());
}

void s_sort_hw::thread_output_V_data_1_ack_in() {
    output_V_data_1_ack_in = output_V_data_1_state.read()[1];
}

void s_sort_hw::thread_output_V_data_1_ack_out() {
    output_V_data_1_ack_out = output_r_TREADY.read();
}

void s_sort_hw::thread_output_V_data_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_V_data_1_sel.read())) {
        output_V_data_1_data_out = output_V_data_1_payload_B.read();
    } else {
        output_V_data_1_data_out = output_V_data_1_payload_A.read();
    }
}

void s_sort_hw::thread_output_V_data_1_load_A() {
    output_V_data_1_load_A = (output_V_data_1_state_cmp_full.read() & ~output_V_data_1_sel_wr.read());
}

void s_sort_hw::thread_output_V_data_1_load_B() {
    output_V_data_1_load_B = (output_V_data_1_sel_wr.read() & output_V_data_1_state_cmp_full.read());
}

void s_sort_hw::thread_output_V_data_1_sel() {
    output_V_data_1_sel = output_V_data_1_sel_rd.read();
}

void s_sort_hw::thread_output_V_data_1_state_cmp_full() {
    output_V_data_1_state_cmp_full =  (sc_logic) ((!output_V_data_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_V_data_1_state.read() != ap_const_lv2_1))[0];
}

void s_sort_hw::thread_output_V_data_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        output_V_data_1_vld_in = ap_const_logic_1;
    } else {
        output_V_data_1_vld_in = ap_const_logic_0;
    }
}

void s_sort_hw::thread_output_V_data_1_vld_out() {
    output_V_data_1_vld_out = output_V_data_1_state.read()[0];
}

void s_sort_hw::thread_output_V_last_V_1_ack_in() {
    output_V_last_V_1_ack_in = output_V_last_V_1_state.read()[1];
}

void s_sort_hw::thread_output_V_last_V_1_ack_out() {
    output_V_last_V_1_ack_out = output_r_TREADY.read();
}

void s_sort_hw::thread_output_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_V_last_V_1_sel.read())) {
        output_V_last_V_1_data_out = output_V_last_V_1_payload_B.read();
    } else {
        output_V_last_V_1_data_out = output_V_last_V_1_payload_A.read();
    }
}

void s_sort_hw::thread_output_V_last_V_1_load_A() {
    output_V_last_V_1_load_A = (output_V_last_V_1_state_cmp_full.read() & ~output_V_last_V_1_sel_wr.read());
}

void s_sort_hw::thread_output_V_last_V_1_load_B() {
    output_V_last_V_1_load_B = (output_V_last_V_1_sel_wr.read() & output_V_last_V_1_state_cmp_full.read());
}

void s_sort_hw::thread_output_V_last_V_1_sel() {
    output_V_last_V_1_sel = output_V_last_V_1_sel_rd.read();
}

void s_sort_hw::thread_output_V_last_V_1_state_cmp_full() {
    output_V_last_V_1_state_cmp_full =  (sc_logic) ((!output_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void s_sort_hw::thread_output_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        output_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        output_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void s_sort_hw::thread_output_V_last_V_1_vld_out() {
    output_V_last_V_1_vld_out = output_V_last_V_1_state.read()[0];
}

void s_sort_hw::thread_output_r_TDATA() {
    output_r_TDATA = output_V_data_1_data_out.read();
}

void s_sort_hw::thread_output_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln44_reg_843_pp1_iter1_reg.read())))) {
        output_r_TDATA_blk_n = output_V_data_1_state.read()[1];
    } else {
        output_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void s_sort_hw::thread_output_r_TLAST() {
    output_r_TLAST = output_V_last_V_1_data_out.read();
}

void s_sort_hw::thread_output_r_TVALID() {
    output_r_TVALID = output_V_last_V_1_state.read()[0];
}

void s_sort_hw::thread_p_Val2_5_fu_635_p3() {
    p_Val2_5_fu_635_p3 = (!isNeg_fu_563_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_563_p3.read()[0].to_bool())? zext_ln662_fu_621_p1.read(): tmp_5_fu_625_p4.read());
}

void s_sort_hw::thread_p_Val2_6_fu_648_p3() {
    p_Val2_6_fu_648_p3 = (!p_Result_s_reg_827.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_827.read()[0].to_bool())? result_V_1_fu_643_p2.read(): p_Val2_5_reg_832.read());
}

void s_sort_hw::thread_p_Val2_s_fu_449_p1() {
    p_Val2_s_fu_449_p1 = result_load_reg_810.read();
}

void s_sort_hw::thread_r_V_1_fu_607_p2() {
    r_V_1_fu_607_p2 = (!zext_ln1287_fu_597_p1.read().is_01())? sc_lv<79>(): zext_ln682_fu_549_p1.read() << (unsigned short)zext_ln1287_fu_597_p1.read().to_uint();
}

void s_sort_hw::thread_r_V_fu_601_p2() {
    r_V_fu_601_p2 = (!sext_ln1311_2_fu_593_p1.read().is_01())? sc_lv<25>(): mantissa_V_fu_539_p4.read() >> (unsigned short)sext_ln1311_2_fu_593_p1.read().to_uint();
}

void s_sort_hw::thread_result_V_1_fu_643_p2() {
    result_V_1_fu_643_p2 = (!ap_const_lv32_0.is_01() || !p_Val2_5_reg_832.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(p_Val2_5_reg_832.read()));
}

void s_sort_hw::thread_result_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        result_address0 = result_addr_2_reg_804.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        result_address0 = result_addr_1_reg_790.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        result_address0 =  (sc_lv<4>) (zext_ln30_fu_379_p1.read());
    } else {
        result_address0 = "XXXX";
    }
}

void s_sort_hw::thread_result_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        result_address1 = result_addr_1_reg_790.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        result_address1 =  (sc_lv<4>) (sext_ln35_fu_444_p1.read());
    } else {
        result_address1 = "XXXX";
    }
}

void s_sort_hw::thread_result_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()))) {
        result_ce0 = ap_const_logic_1;
    } else {
        result_ce0 = ap_const_logic_0;
    }
}

void s_sort_hw::thread_result_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        result_ce1 = ap_const_logic_1;
    } else {
        result_ce1 = ap_const_logic_0;
    }
}

void s_sort_hw::thread_result_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        result_d0 = grp_fu_261_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        result_d0 = tmp_1_fu_384_p12.read();
    } else {
        result_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void s_sort_hw::thread_result_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln29_fu_367_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln35_1_reg_823.read())))) {
        result_we0 = ap_const_logic_1;
    } else {
        result_we0 = ap_const_logic_0;
    }
}

void s_sort_hw::thread_result_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln35_1_fu_525_p2.read()))) {
        result_we1 = ap_const_logic_1;
    } else {
        result_we1 = ap_const_logic_0;
    }
}

void s_sort_hw::thread_sext_ln1311_1_fu_589_p1() {
    sext_ln1311_1_fu_589_p1 = esl_sext<32,9>(ush_fu_581_p3.read());
}

void s_sort_hw::thread_sext_ln1311_2_fu_593_p1() {
    sext_ln1311_2_fu_593_p1 = esl_sext<25,9>(ush_fu_581_p3.read());
}

void s_sort_hw::thread_sext_ln1311_fu_577_p1() {
    sext_ln1311_fu_577_p1 = esl_sext<9,8>(sub_ln1311_fu_571_p2.read());
}

void s_sort_hw::thread_sext_ln35_fu_444_p1() {
    sext_ln35_fu_444_p1 = esl_sext<64,32>(j_fu_432_p2.read());
}

void s_sort_hw::thread_sub_ln1311_fu_571_p2() {
    sub_ln1311_fu_571_p2 = (!ap_const_lv8_7F.is_01() || !tmp_V_fu_452_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_V_fu_452_p4.read()));
}

void s_sort_hw::thread_tmp_5_fu_625_p4() {
    tmp_5_fu_625_p4 = r_V_1_fu_607_p2.read().range(55, 24);
}

void s_sort_hw::thread_tmp_6_fu_469_p4() {
    tmp_6_fu_469_p4 = bitcast_ln35_1_fu_466_p1.read().range(30, 23);
}

void s_sort_hw::thread_tmp_9_fu_613_p3() {
    tmp_9_fu_613_p3 = r_V_fu_601_p2.read().range(24, 24);
}

void s_sort_hw::thread_tmp_V_1_fu_462_p1() {
    tmp_V_1_fu_462_p1 = p_Val2_s_fu_449_p1.read().range(23-1, 0);
}

void s_sort_hw::thread_tmp_V_fu_452_p4() {
    tmp_V_fu_452_p4 = p_Val2_s_fu_449_p1.read().range(30, 23);
}

void s_sort_hw::thread_tmp_last_V_fu_693_p2() {
    tmp_last_V_fu_693_p2 = (!i_1_reg_249.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_249.read() == ap_const_lv4_9);
}

void s_sort_hw::thread_trunc_ln35_1_fu_479_p1() {
    trunc_ln35_1_fu_479_p1 = bitcast_ln35_1_fu_466_p1.read().range(23-1, 0);
}

void s_sort_hw::thread_ush_fu_581_p3() {
    ush_fu_581_p3 = (!isNeg_fu_563_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_563_p3.read()[0].to_bool())? sext_ln1311_fu_577_p1.read(): add_ln339_fu_557_p2.read());
}

void s_sort_hw::thread_zext_ln1287_fu_597_p1() {
    zext_ln1287_fu_597_p1 = esl_zext<79,32>(sext_ln1311_1_fu_589_p1.read());
}

void s_sort_hw::thread_zext_ln30_fu_379_p1() {
    zext_ln30_fu_379_p1 = esl_zext<64,4>(i1_0_reg_218.read());
}

void s_sort_hw::thread_zext_ln339_fu_553_p1() {
    zext_ln339_fu_553_p1 = esl_zext<9,8>(tmp_V_fu_452_p4.read());
}

void s_sort_hw::thread_zext_ln33_fu_411_p1() {
    zext_ln33_fu_411_p1 = esl_zext<32,4>(i2_0_reg_229.read());
}

void s_sort_hw::thread_zext_ln35_fu_427_p1() {
    zext_ln35_fu_427_p1 = esl_zext<64,4>(i2_0_reg_229.read());
}

void s_sort_hw::thread_zext_ln662_fu_621_p1() {
    zext_ln662_fu_621_p1 = esl_zext<32,1>(tmp_9_fu_613_p3.read());
}

void s_sort_hw::thread_zext_ln682_fu_549_p1() {
    zext_ln682_fu_549_p1 = esl_zext<79,25>(mantissa_V_fu_539_p4.read());
}

void s_sort_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln19_fu_301_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_V_data_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln19_fu_301_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln29_fu_367_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln33_fu_415_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln34_fu_438_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, and_ln35_1_fu_525_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state15;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32768 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_654_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln44_fu_654_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 65536 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) && !(esl_seteq<1,2,2>(ap_const_lv2_1, output_V_data_1_state.read()) || esl_seteq<1,2,2>(ap_const_lv2_1, output_V_last_V_1_state.read()) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_V_data_1_state.read())) || (esl_seteq<1,1,1>(ap_const_logic_0, output_r_TREADY.read()) && 
  esl_seteq<1,2,2>(ap_const_lv2_3, output_V_last_V_1_state.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state19;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<17>) ("XXXXXXXXXXXXXXXXX");
            break;
    }
}

void s_sort_hw::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_TDATA\" :  \"" << input_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_TVALID\" :  \"" << input_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_r_TREADY\" :  \"" << input_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_r_TLAST\" :  \"" << input_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_TDATA\" :  \"" << output_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_TVALID\" :  \"" << output_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_r_TREADY\" :  \"" << output_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_r_TLAST\" :  \"" << output_r_TLAST.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

