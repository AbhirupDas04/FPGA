-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pow_generic_double_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    exp : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of pow_generic_double_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_7FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0111111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv52_0 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv122_B17217F7D1CF79ABC : STD_LOGIC_VECTOR (121 downto 0) := "00000000000000000000000000000000000000000000000000000010110001011100100001011111110111110100011100111101111001101010111100";
    constant ap_const_lv12_C01 : STD_LOGIC_VECTOR (11 downto 0) := "110000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_3FF : STD_LOGIC_VECTOR (10 downto 0) := "01111111111";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_81 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000001";
    constant ap_const_lv32_72 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv83_58B90BFBE8E7BCD5E4 : STD_LOGIC_VECTOR (82 downto 0) := "00000000000010110001011100100001011111110111110100011100111101111001101010111100100";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_5C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv59_10 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv49_0 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_6B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101011";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv13_1C02 : STD_LOGIC_VECTOR (12 downto 0) := "1110000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_79 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111001";
    constant ap_const_lv31_5C55 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000101110001010101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal pow_reduce_anonymo_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymo_2_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_2_q0 : STD_LOGIC_VECTOR (57 downto 0);
    signal pow_reduce_anonymo_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymo_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_q0 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymo_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymo_ce1 : STD_LOGIC;
    signal pow_reduce_anonymo_q1 : STD_LOGIC_VECTOR (25 downto 0);
    signal pow_reduce_anonymo_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pow_reduce_anonymo_3_ce0 : STD_LOGIC;
    signal pow_reduce_anonymo_3_q0 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_V_fu_330_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_reg_1145 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_reg_1145_pp0_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_reg_1145_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_reg_1145_pp0_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_reg_1145_pp0_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_V_reg_1145_pp0_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln833_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_reg_1151_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_fu_388_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln415_reg_1155_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_fu_420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln460_reg_1159_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln467_reg_1163_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal e_frac_V_2_fu_454_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_2_reg_1167 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_465_p2 : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177 : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter6_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter7_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter8_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter9_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter10_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter11_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter12_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter13_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter14_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter15_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter16_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter17_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter18_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter19_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter20_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter21_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter22_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_frac_l_V_reg_1177_pp0_iter23_reg : STD_LOGIC_VECTOR (121 downto 0);
    signal m_exp_fu_474_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal m_exp_reg_1186 : STD_LOGIC_VECTOR (11 downto 0);
    signal isNeg_fu_483_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1192 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_1_fu_491_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ush_1_reg_1197 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1311_2_fu_508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1311_2_reg_1202 : STD_LOGIC_VECTOR (31 downto 0);
    signal m_fix_l_V_fu_539_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal m_fix_l_V_reg_1207 : STD_LOGIC_VECTOR (129 downto 0);
    signal m_fix_V_reg_1214 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_V_reg_1214_pp0_iter8_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_V_reg_1214_pp0_iter9_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_V_reg_1214_pp0_iter10_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_V_reg_1214_pp0_iter11_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_V_reg_1214_pp0_iter12_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_V_reg_1214_pp0_iter13_reg : STD_LOGIC_VECTOR (70 downto 0);
    signal m_fix_hi_V_reg_1219 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_16_reg_1224 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_reg_1229_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln657_1_reg_1233_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal r_exp_V_3_fu_692_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238 : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter9_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter10_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter11_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter12_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter13_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter14_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter15_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter16_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter17_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter18_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter19_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter20_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter21_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter22_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal r_exp_V_3_reg_1238_pp0_iter23_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal m_fix_a_V_reg_1250 : STD_LOGIC_VECTOR (70 downto 0);
    signal m_diff_hi_V_reg_1255 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1255_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1255_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1255_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1255_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal m_diff_hi_V_reg_1255_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1260 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1260_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1260_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1260_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1260_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1260_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z2_V_reg_1260_pp0_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_fu_751_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1267 : STD_LOGIC_VECTOR (7 downto 0);
    signal Z3_V_reg_1267_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal Z4_V_fu_761_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal Z4_V_reg_1272 : STD_LOGIC_VECTOR (34 downto 0);
    signal ret_V_4_fu_802_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_4_reg_1287 : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_4_reg_1287_pp0_iter16_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal ret_V_4_reg_1287_pp0_iter17_reg : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_18_reg_1293 : STD_LOGIC_VECTOR (25 downto 0);
    signal tmp_i_fu_808_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_i_reg_1298 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_i_reg_1298_pp0_iter17_reg : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_reg_1313 : STD_LOGIC_VECTOR (19 downto 0);
    signal exp_Z2P_m_1_V_fu_858_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1323 : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1323_pp0_iter19_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal exp_Z2P_m_1_V_reg_1323_pp0_iter20_reg : STD_LOGIC_VECTOR (43 downto 0);
    signal tmp_s_reg_1329 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_s_reg_1329_pp0_iter19_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_s_reg_1329_pp0_iter20_reg : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_2_reg_1350 : STD_LOGIC_VECTOR (35 downto 0);
    signal exp_Z1_V_reg_1355 : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1_V_reg_1355_pp0_iter22_reg : STD_LOGIC_VECTOR (57 downto 0);
    signal exp_Z1P_m_1_V_reg_1360 : STD_LOGIC_VECTOR (49 downto 0);
    signal exp_Z1_hi_V_reg_1365 : STD_LOGIC_VECTOR (49 downto 0);
    signal ret_V_6_fu_976_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal ret_V_6_reg_1380 : STD_LOGIC_VECTOR (58 downto 0);
    signal grp_fu_967_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_18_reg_1385 : STD_LOGIC_VECTOR (99 downto 0);
    signal trunc_ln1146_fu_982_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln1146_reg_1391 : STD_LOGIC_VECTOR (57 downto 0);
    signal grp_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln849_1_reg_1396 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln657_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln657_reg_1400 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln853_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln853_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_1_reg_1408 : STD_LOGIC_VECTOR (51 downto 0);
    signal trunc_ln168_fu_1096_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln168_reg_1413 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln658_fu_1107_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_p_01254_phi_fu_274_p12 : STD_LOGIC_VECTOR (63 downto 0);
    signal bitcast_ln512_fu_1129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter25_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter3_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter4_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter5_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter6_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter7_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter8_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter9_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter10_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter11_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter12_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter13_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter14_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter15_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter16_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter17_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter18_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter19_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter20_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter21_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter22_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter23_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter24_p_01254_reg_267 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_UnifiedRetVal_phi_fu_296_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter2_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter3_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter4_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter5_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter6_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter7_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter8_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter9_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter10_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter11_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter12_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter13_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter14_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter15_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter18_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter19_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter20_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter21_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter22_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter23_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter24_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter25_UnifiedRetVal_reg_293 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_2_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_3_fu_839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln498_1_fu_895_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_exp_V_2_fu_1067_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_303_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_s_fu_318_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_36_fu_340_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal icmp_ln833_1_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln833_2_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln837_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_1_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln415_1_fu_380_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln18_fu_362_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln936_fu_394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_is_pinf_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln460_2_fu_412_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal y_is_ninf_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln467_2_fu_426_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_15_fu_440_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal e_frac_V_fu_448_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal grp_fu_465_p0 : STD_LOGIC_VECTOR (68 downto 0);
    signal zext_ln502_fu_471_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1311_1_fu_496_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ush_fu_500_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1287_1_fu_516_p1 : STD_LOGIC_VECTOR (121 downto 0);
    signal sext_ln657_2_fu_480_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal zext_ln1287_fu_512_p1 : STD_LOGIC_VECTOR (130 downto 0);
    signal r_V_fu_520_p2 : STD_LOGIC_VECTOR (121 downto 0);
    signal r_V_1_fu_525_p2 : STD_LOGIC_VECTOR (130 downto 0);
    signal sext_ln1312_fu_531_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal trunc_ln1312_fu_535_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal zext_ln1253_fu_553_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_2_fu_556_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_3_fu_561_p2 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln1311_fu_550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1285_fu_580_p1 : STD_LOGIC_VECTOR (121 downto 0);
    signal r_V_5_fu_584_p2 : STD_LOGIC_VECTOR (121 downto 0);
    signal tmp_4_fu_573_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln581_fu_589_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal select_ln581_fu_593_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal r_V_13_fu_566_p3 : STD_LOGIC_VECTOR (129 downto 0);
    signal sext_ln657_1_fu_547_p1 : STD_LOGIC_VECTOR (129 downto 0);
    signal rhs_V_fu_642_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_1134_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln805_fu_669_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_1_fu_653_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln805_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln805_fu_678_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_Result_8_fu_662_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln805_fu_684_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_703_p0 : STD_LOGIC_VECTOR (71 downto 0);
    signal grp_fu_703_p2 : STD_LOGIC_VECTOR (82 downto 0);
    signal lhs_V_fu_719_p1 : STD_LOGIC_VECTOR (71 downto 0);
    signal rhs_V_1_fu_722_p1 : STD_LOGIC_VECTOR (71 downto 0);
    signal ret_V_3_fu_725_p2 : STD_LOGIC_VECTOR (71 downto 0);
    signal Z4_ind_V_fu_765_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal f_Z4_V_fu_785_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_1_fu_795_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal rhs_V_2_fu_798_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_823_p0 : STD_LOGIC_VECTOR (42 downto 0);
    signal grp_fu_823_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal grp_fu_823_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln657_fu_846_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal add_ln657_fu_849_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal zext_ln657_1_fu_854_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal ret_V_5_fu_843_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lshr_ln662_6_fu_874_p4 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_889_p0 : STD_LOGIC_VECTOR (48 downto 0);
    signal grp_fu_889_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal grp_fu_889_p2 : STD_LOGIC_VECTOR (92 downto 0);
    signal lhs_V_2_fu_909_p5 : STD_LOGIC_VECTOR (50 downto 0);
    signal zext_ln657_2_fu_923_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal add_ln657_2_fu_926_p2 : STD_LOGIC_VECTOR (43 downto 0);
    signal zext_ln657_3_fu_931_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal zext_ln682_fu_919_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal exp_Z1P_m_1_l_V_fu_935_p2 : STD_LOGIC_VECTOR (51 downto 0);
    signal grp_fu_967_p0 : STD_LOGIC_VECTOR (49 downto 0);
    signal grp_fu_967_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal lhs_V_3_fu_973_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal lhs_V_4_fu_986_p3 : STD_LOGIC_VECTOR (107 downto 0);
    signal zext_ln657_5_fu_993_p1 : STD_LOGIC_VECTOR (107 downto 0);
    signal zext_ln1146_fu_996_p1 : STD_LOGIC_VECTOR (106 downto 0);
    signal trunc_ln2_fu_999_p3 : STD_LOGIC_VECTOR (106 downto 0);
    signal ret_V_7_fu_1006_p2 : STD_LOGIC_VECTOR (107 downto 0);
    signal add_ln1146_1_fu_1012_p2 : STD_LOGIC_VECTOR (106 downto 0);
    signal tmp_3_fu_1036_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_7_fu_1028_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln3_fu_1018_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal and_ln_fu_1046_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal r_exp_V_fu_1054_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln656_fu_1059_p3 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_10_fu_1100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_exp_V_fu_1115_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_17_fu_1120_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_1134_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to24 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_823_p00 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_823_p10 : STD_LOGIC_VECTOR (78 downto 0);
    signal grp_fu_889_p00 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_889_p10 : STD_LOGIC_VECTOR (92 downto 0);
    signal grp_fu_967_p00 : STD_LOGIC_VECTOR (99 downto 0);
    signal grp_fu_967_p10 : STD_LOGIC_VECTOR (99 downto 0);
    signal ap_condition_711 : BOOLEAN;
    signal ap_condition_803 : BOOLEAN;
    signal ap_condition_794 : BOOLEAN;
    signal ap_condition_139 : BOOLEAN;
    signal ap_condition_682 : BOOLEAN;
    signal ap_condition_798 : BOOLEAN;
    signal ap_condition_721 : BOOLEAN;

    component chacha_hw_mul_69neOg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (68 downto 0);
        din1 : IN STD_LOGIC_VECTOR (53 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (121 downto 0) );
    end component;


    component chacha_hw_mul_72nfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (71 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (82 downto 0) );
    end component;


    component chacha_hw_mul_43ng8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (42 downto 0);
        din1 : IN STD_LOGIC_VECTOR (35 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (78 downto 0) );
    end component;


    component chacha_hw_mul_49nhbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (48 downto 0);
        din1 : IN STD_LOGIC_VECTOR (43 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (92 downto 0) );
    end component;


    component chacha_hw_mul_50nibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (49 downto 0);
        din1 : IN STD_LOGIC_VECTOR (49 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component chacha_hw_mac_muljbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component pow_generic_doublbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (57 downto 0) );
    end component;


    component pow_generic_doublcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (25 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component pow_generic_doubldEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;



begin
    pow_reduce_anonymo_2_U : component pow_generic_doublbkb
    generic map (
        DataWidth => 58,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_2_address0,
        ce0 => pow_reduce_anonymo_2_ce0,
        q0 => pow_reduce_anonymo_2_q0);

    pow_reduce_anonymo_U : component pow_generic_doublcud
    generic map (
        DataWidth => 26,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_address0,
        ce0 => pow_reduce_anonymo_ce0,
        q0 => pow_reduce_anonymo_q0,
        address1 => pow_reduce_anonymo_address1,
        ce1 => pow_reduce_anonymo_ce1,
        q1 => pow_reduce_anonymo_q1);

    pow_reduce_anonymo_3_U : component pow_generic_doubldEe
    generic map (
        DataWidth => 42,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pow_reduce_anonymo_3_address0,
        ce0 => pow_reduce_anonymo_3_ce0,
        q0 => pow_reduce_anonymo_3_q0);

    chacha_hw_mul_69neOg_U1 : component chacha_hw_mul_69neOg
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 69,
        din1_WIDTH => 54,
        dout_WIDTH => 122)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_465_p0,
        din1 => e_frac_V_2_reg_1167,
        ce => ap_const_logic_1,
        dout => grp_fu_465_p2);

    chacha_hw_mul_72nfYi_U2 : component chacha_hw_mul_72nfYi
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 72,
        din1_WIDTH => 13,
        dout_WIDTH => 83)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_703_p0,
        din1 => r_exp_V_3_reg_1238,
        ce => ap_const_logic_1,
        dout => grp_fu_703_p2);

    chacha_hw_mul_43ng8j_U3 : component chacha_hw_mul_43ng8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 43,
        din1_WIDTH => 36,
        dout_WIDTH => 79)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_823_p0,
        din1 => grp_fu_823_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_823_p2);

    chacha_hw_mul_49nhbi_U4 : component chacha_hw_mul_49nhbi
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 49,
        din1_WIDTH => 44,
        dout_WIDTH => 93)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_889_p0,
        din1 => grp_fu_889_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_889_p2);

    chacha_hw_mul_50nibs_U5 : component chacha_hw_mul_50nibs
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 50,
        din1_WIDTH => 50,
        dout_WIDTH => 100)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_967_p0,
        din1 => grp_fu_967_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_967_p2);

    chacha_hw_mac_muljbC_U6 : component chacha_hw_mac_muljbC
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 19,
        dout_WIDTH => 31)
    port map (
        din0 => grp_fu_1134_p0,
        din1 => m_fix_hi_V_reg_1219,
        din2 => rhs_V_fu_642_p3,
        dout => grp_fu_1134_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_01254_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_139)) then
                if ((ap_const_boolean_1 = ap_condition_794)) then 
                    ap_phi_reg_pp0_iter1_p_01254_reg_267 <= ap_const_lv64_7FF0000000000000;
                elsif (((icmp_ln415_fu_388_p2 = ap_const_lv1_0) and (icmp_ln833_fu_344_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_p_01254_reg_267 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
                elsif ((icmp_ln833_fu_344_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_01254_reg_267 <= ap_const_lv64_3FF0000000000000;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_01254_reg_267 <= ap_phi_reg_pp0_iter0_p_01254_reg_267;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter25_UnifiedRetVal_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_682)) then 
                    ap_phi_reg_pp0_iter25_UnifiedRetVal_reg_293 <= select_ln658_fu_1107_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter25_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter24_UnifiedRetVal_reg_293;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter2_p_01254_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_721)) then
                if ((ap_const_boolean_1 = ap_condition_798)) then 
                    ap_phi_reg_pp0_iter2_p_01254_reg_267 <= ap_const_lv64_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter2_p_01254_reg_267 <= ap_phi_reg_pp0_iter1_p_01254_reg_267;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter13_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter13_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter13_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter13_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                Z2_V_reg_1260 <= ret_V_3_fu_725_p2(50 downto 43);
                Z3_V_reg_1267 <= ret_V_3_fu_725_p2(42 downto 35);
                Z4_V_reg_1272 <= Z4_V_fu_761_p1;
                m_diff_hi_V_reg_1255 <= ret_V_3_fu_725_p2(58 downto 51);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                Z2_V_reg_1260_pp0_iter15_reg <= Z2_V_reg_1260;
                Z2_V_reg_1260_pp0_iter16_reg <= Z2_V_reg_1260_pp0_iter15_reg;
                Z2_V_reg_1260_pp0_iter17_reg <= Z2_V_reg_1260_pp0_iter16_reg;
                Z2_V_reg_1260_pp0_iter18_reg <= Z2_V_reg_1260_pp0_iter17_reg;
                Z2_V_reg_1260_pp0_iter19_reg <= Z2_V_reg_1260_pp0_iter18_reg;
                Z2_V_reg_1260_pp0_iter20_reg <= Z2_V_reg_1260_pp0_iter19_reg;
                Z3_V_reg_1267_pp0_iter15_reg <= Z3_V_reg_1267;
                exp_Z1_V_reg_1355_pp0_iter22_reg <= exp_Z1_V_reg_1355;
                exp_Z2P_m_1_V_reg_1323_pp0_iter19_reg <= exp_Z2P_m_1_V_reg_1323;
                exp_Z2P_m_1_V_reg_1323_pp0_iter20_reg <= exp_Z2P_m_1_V_reg_1323_pp0_iter19_reg;
                icmp_ln415_reg_1155_pp0_iter10_reg <= icmp_ln415_reg_1155_pp0_iter9_reg;
                icmp_ln415_reg_1155_pp0_iter11_reg <= icmp_ln415_reg_1155_pp0_iter10_reg;
                icmp_ln415_reg_1155_pp0_iter12_reg <= icmp_ln415_reg_1155_pp0_iter11_reg;
                icmp_ln415_reg_1155_pp0_iter13_reg <= icmp_ln415_reg_1155_pp0_iter12_reg;
                icmp_ln415_reg_1155_pp0_iter14_reg <= icmp_ln415_reg_1155_pp0_iter13_reg;
                icmp_ln415_reg_1155_pp0_iter15_reg <= icmp_ln415_reg_1155_pp0_iter14_reg;
                icmp_ln415_reg_1155_pp0_iter16_reg <= icmp_ln415_reg_1155_pp0_iter15_reg;
                icmp_ln415_reg_1155_pp0_iter17_reg <= icmp_ln415_reg_1155_pp0_iter16_reg;
                icmp_ln415_reg_1155_pp0_iter18_reg <= icmp_ln415_reg_1155_pp0_iter17_reg;
                icmp_ln415_reg_1155_pp0_iter19_reg <= icmp_ln415_reg_1155_pp0_iter18_reg;
                icmp_ln415_reg_1155_pp0_iter20_reg <= icmp_ln415_reg_1155_pp0_iter19_reg;
                icmp_ln415_reg_1155_pp0_iter21_reg <= icmp_ln415_reg_1155_pp0_iter20_reg;
                icmp_ln415_reg_1155_pp0_iter22_reg <= icmp_ln415_reg_1155_pp0_iter21_reg;
                icmp_ln415_reg_1155_pp0_iter23_reg <= icmp_ln415_reg_1155_pp0_iter22_reg;
                icmp_ln415_reg_1155_pp0_iter24_reg <= icmp_ln415_reg_1155_pp0_iter23_reg;
                icmp_ln415_reg_1155_pp0_iter2_reg <= icmp_ln415_reg_1155_pp0_iter1_reg;
                icmp_ln415_reg_1155_pp0_iter3_reg <= icmp_ln415_reg_1155_pp0_iter2_reg;
                icmp_ln415_reg_1155_pp0_iter4_reg <= icmp_ln415_reg_1155_pp0_iter3_reg;
                icmp_ln415_reg_1155_pp0_iter5_reg <= icmp_ln415_reg_1155_pp0_iter4_reg;
                icmp_ln415_reg_1155_pp0_iter6_reg <= icmp_ln415_reg_1155_pp0_iter5_reg;
                icmp_ln415_reg_1155_pp0_iter7_reg <= icmp_ln415_reg_1155_pp0_iter6_reg;
                icmp_ln415_reg_1155_pp0_iter8_reg <= icmp_ln415_reg_1155_pp0_iter7_reg;
                icmp_ln415_reg_1155_pp0_iter9_reg <= icmp_ln415_reg_1155_pp0_iter8_reg;
                icmp_ln460_reg_1159_pp0_iter10_reg <= icmp_ln460_reg_1159_pp0_iter9_reg;
                icmp_ln460_reg_1159_pp0_iter11_reg <= icmp_ln460_reg_1159_pp0_iter10_reg;
                icmp_ln460_reg_1159_pp0_iter12_reg <= icmp_ln460_reg_1159_pp0_iter11_reg;
                icmp_ln460_reg_1159_pp0_iter13_reg <= icmp_ln460_reg_1159_pp0_iter12_reg;
                icmp_ln460_reg_1159_pp0_iter14_reg <= icmp_ln460_reg_1159_pp0_iter13_reg;
                icmp_ln460_reg_1159_pp0_iter15_reg <= icmp_ln460_reg_1159_pp0_iter14_reg;
                icmp_ln460_reg_1159_pp0_iter16_reg <= icmp_ln460_reg_1159_pp0_iter15_reg;
                icmp_ln460_reg_1159_pp0_iter17_reg <= icmp_ln460_reg_1159_pp0_iter16_reg;
                icmp_ln460_reg_1159_pp0_iter18_reg <= icmp_ln460_reg_1159_pp0_iter17_reg;
                icmp_ln460_reg_1159_pp0_iter19_reg <= icmp_ln460_reg_1159_pp0_iter18_reg;
                icmp_ln460_reg_1159_pp0_iter20_reg <= icmp_ln460_reg_1159_pp0_iter19_reg;
                icmp_ln460_reg_1159_pp0_iter21_reg <= icmp_ln460_reg_1159_pp0_iter20_reg;
                icmp_ln460_reg_1159_pp0_iter22_reg <= icmp_ln460_reg_1159_pp0_iter21_reg;
                icmp_ln460_reg_1159_pp0_iter23_reg <= icmp_ln460_reg_1159_pp0_iter22_reg;
                icmp_ln460_reg_1159_pp0_iter24_reg <= icmp_ln460_reg_1159_pp0_iter23_reg;
                icmp_ln460_reg_1159_pp0_iter2_reg <= icmp_ln460_reg_1159_pp0_iter1_reg;
                icmp_ln460_reg_1159_pp0_iter3_reg <= icmp_ln460_reg_1159_pp0_iter2_reg;
                icmp_ln460_reg_1159_pp0_iter4_reg <= icmp_ln460_reg_1159_pp0_iter3_reg;
                icmp_ln460_reg_1159_pp0_iter5_reg <= icmp_ln460_reg_1159_pp0_iter4_reg;
                icmp_ln460_reg_1159_pp0_iter6_reg <= icmp_ln460_reg_1159_pp0_iter5_reg;
                icmp_ln460_reg_1159_pp0_iter7_reg <= icmp_ln460_reg_1159_pp0_iter6_reg;
                icmp_ln460_reg_1159_pp0_iter8_reg <= icmp_ln460_reg_1159_pp0_iter7_reg;
                icmp_ln460_reg_1159_pp0_iter9_reg <= icmp_ln460_reg_1159_pp0_iter8_reg;
                icmp_ln467_reg_1163_pp0_iter10_reg <= icmp_ln467_reg_1163_pp0_iter9_reg;
                icmp_ln467_reg_1163_pp0_iter11_reg <= icmp_ln467_reg_1163_pp0_iter10_reg;
                icmp_ln467_reg_1163_pp0_iter12_reg <= icmp_ln467_reg_1163_pp0_iter11_reg;
                icmp_ln467_reg_1163_pp0_iter13_reg <= icmp_ln467_reg_1163_pp0_iter12_reg;
                icmp_ln467_reg_1163_pp0_iter14_reg <= icmp_ln467_reg_1163_pp0_iter13_reg;
                icmp_ln467_reg_1163_pp0_iter15_reg <= icmp_ln467_reg_1163_pp0_iter14_reg;
                icmp_ln467_reg_1163_pp0_iter16_reg <= icmp_ln467_reg_1163_pp0_iter15_reg;
                icmp_ln467_reg_1163_pp0_iter17_reg <= icmp_ln467_reg_1163_pp0_iter16_reg;
                icmp_ln467_reg_1163_pp0_iter18_reg <= icmp_ln467_reg_1163_pp0_iter17_reg;
                icmp_ln467_reg_1163_pp0_iter19_reg <= icmp_ln467_reg_1163_pp0_iter18_reg;
                icmp_ln467_reg_1163_pp0_iter20_reg <= icmp_ln467_reg_1163_pp0_iter19_reg;
                icmp_ln467_reg_1163_pp0_iter21_reg <= icmp_ln467_reg_1163_pp0_iter20_reg;
                icmp_ln467_reg_1163_pp0_iter22_reg <= icmp_ln467_reg_1163_pp0_iter21_reg;
                icmp_ln467_reg_1163_pp0_iter23_reg <= icmp_ln467_reg_1163_pp0_iter22_reg;
                icmp_ln467_reg_1163_pp0_iter24_reg <= icmp_ln467_reg_1163_pp0_iter23_reg;
                icmp_ln467_reg_1163_pp0_iter2_reg <= icmp_ln467_reg_1163_pp0_iter1_reg;
                icmp_ln467_reg_1163_pp0_iter3_reg <= icmp_ln467_reg_1163_pp0_iter2_reg;
                icmp_ln467_reg_1163_pp0_iter4_reg <= icmp_ln467_reg_1163_pp0_iter3_reg;
                icmp_ln467_reg_1163_pp0_iter5_reg <= icmp_ln467_reg_1163_pp0_iter4_reg;
                icmp_ln467_reg_1163_pp0_iter6_reg <= icmp_ln467_reg_1163_pp0_iter5_reg;
                icmp_ln467_reg_1163_pp0_iter7_reg <= icmp_ln467_reg_1163_pp0_iter6_reg;
                icmp_ln467_reg_1163_pp0_iter8_reg <= icmp_ln467_reg_1163_pp0_iter7_reg;
                icmp_ln467_reg_1163_pp0_iter9_reg <= icmp_ln467_reg_1163_pp0_iter8_reg;
                icmp_ln657_1_reg_1233_pp0_iter10_reg <= icmp_ln657_1_reg_1233_pp0_iter9_reg;
                icmp_ln657_1_reg_1233_pp0_iter11_reg <= icmp_ln657_1_reg_1233_pp0_iter10_reg;
                icmp_ln657_1_reg_1233_pp0_iter12_reg <= icmp_ln657_1_reg_1233_pp0_iter11_reg;
                icmp_ln657_1_reg_1233_pp0_iter13_reg <= icmp_ln657_1_reg_1233_pp0_iter12_reg;
                icmp_ln657_1_reg_1233_pp0_iter14_reg <= icmp_ln657_1_reg_1233_pp0_iter13_reg;
                icmp_ln657_1_reg_1233_pp0_iter15_reg <= icmp_ln657_1_reg_1233_pp0_iter14_reg;
                icmp_ln657_1_reg_1233_pp0_iter16_reg <= icmp_ln657_1_reg_1233_pp0_iter15_reg;
                icmp_ln657_1_reg_1233_pp0_iter17_reg <= icmp_ln657_1_reg_1233_pp0_iter16_reg;
                icmp_ln657_1_reg_1233_pp0_iter18_reg <= icmp_ln657_1_reg_1233_pp0_iter17_reg;
                icmp_ln657_1_reg_1233_pp0_iter19_reg <= icmp_ln657_1_reg_1233_pp0_iter18_reg;
                icmp_ln657_1_reg_1233_pp0_iter20_reg <= icmp_ln657_1_reg_1233_pp0_iter19_reg;
                icmp_ln657_1_reg_1233_pp0_iter21_reg <= icmp_ln657_1_reg_1233_pp0_iter20_reg;
                icmp_ln657_1_reg_1233_pp0_iter22_reg <= icmp_ln657_1_reg_1233_pp0_iter21_reg;
                icmp_ln657_1_reg_1233_pp0_iter23_reg <= icmp_ln657_1_reg_1233_pp0_iter22_reg;
                icmp_ln657_1_reg_1233_pp0_iter8_reg <= icmp_ln657_1_reg_1233;
                icmp_ln657_1_reg_1233_pp0_iter9_reg <= icmp_ln657_1_reg_1233_pp0_iter8_reg;
                icmp_ln657_reg_1229_pp0_iter10_reg <= icmp_ln657_reg_1229_pp0_iter9_reg;
                icmp_ln657_reg_1229_pp0_iter11_reg <= icmp_ln657_reg_1229_pp0_iter10_reg;
                icmp_ln657_reg_1229_pp0_iter12_reg <= icmp_ln657_reg_1229_pp0_iter11_reg;
                icmp_ln657_reg_1229_pp0_iter13_reg <= icmp_ln657_reg_1229_pp0_iter12_reg;
                icmp_ln657_reg_1229_pp0_iter14_reg <= icmp_ln657_reg_1229_pp0_iter13_reg;
                icmp_ln657_reg_1229_pp0_iter15_reg <= icmp_ln657_reg_1229_pp0_iter14_reg;
                icmp_ln657_reg_1229_pp0_iter16_reg <= icmp_ln657_reg_1229_pp0_iter15_reg;
                icmp_ln657_reg_1229_pp0_iter17_reg <= icmp_ln657_reg_1229_pp0_iter16_reg;
                icmp_ln657_reg_1229_pp0_iter18_reg <= icmp_ln657_reg_1229_pp0_iter17_reg;
                icmp_ln657_reg_1229_pp0_iter19_reg <= icmp_ln657_reg_1229_pp0_iter18_reg;
                icmp_ln657_reg_1229_pp0_iter20_reg <= icmp_ln657_reg_1229_pp0_iter19_reg;
                icmp_ln657_reg_1229_pp0_iter21_reg <= icmp_ln657_reg_1229_pp0_iter20_reg;
                icmp_ln657_reg_1229_pp0_iter22_reg <= icmp_ln657_reg_1229_pp0_iter21_reg;
                icmp_ln657_reg_1229_pp0_iter23_reg <= icmp_ln657_reg_1229_pp0_iter22_reg;
                icmp_ln657_reg_1229_pp0_iter24_reg <= icmp_ln657_reg_1229_pp0_iter23_reg;
                icmp_ln657_reg_1229_pp0_iter8_reg <= icmp_ln657_reg_1229;
                icmp_ln657_reg_1229_pp0_iter9_reg <= icmp_ln657_reg_1229_pp0_iter8_reg;
                icmp_ln833_reg_1151_pp0_iter10_reg <= icmp_ln833_reg_1151_pp0_iter9_reg;
                icmp_ln833_reg_1151_pp0_iter11_reg <= icmp_ln833_reg_1151_pp0_iter10_reg;
                icmp_ln833_reg_1151_pp0_iter12_reg <= icmp_ln833_reg_1151_pp0_iter11_reg;
                icmp_ln833_reg_1151_pp0_iter13_reg <= icmp_ln833_reg_1151_pp0_iter12_reg;
                icmp_ln833_reg_1151_pp0_iter14_reg <= icmp_ln833_reg_1151_pp0_iter13_reg;
                icmp_ln833_reg_1151_pp0_iter15_reg <= icmp_ln833_reg_1151_pp0_iter14_reg;
                icmp_ln833_reg_1151_pp0_iter16_reg <= icmp_ln833_reg_1151_pp0_iter15_reg;
                icmp_ln833_reg_1151_pp0_iter17_reg <= icmp_ln833_reg_1151_pp0_iter16_reg;
                icmp_ln833_reg_1151_pp0_iter18_reg <= icmp_ln833_reg_1151_pp0_iter17_reg;
                icmp_ln833_reg_1151_pp0_iter19_reg <= icmp_ln833_reg_1151_pp0_iter18_reg;
                icmp_ln833_reg_1151_pp0_iter20_reg <= icmp_ln833_reg_1151_pp0_iter19_reg;
                icmp_ln833_reg_1151_pp0_iter21_reg <= icmp_ln833_reg_1151_pp0_iter20_reg;
                icmp_ln833_reg_1151_pp0_iter22_reg <= icmp_ln833_reg_1151_pp0_iter21_reg;
                icmp_ln833_reg_1151_pp0_iter23_reg <= icmp_ln833_reg_1151_pp0_iter22_reg;
                icmp_ln833_reg_1151_pp0_iter24_reg <= icmp_ln833_reg_1151_pp0_iter23_reg;
                icmp_ln833_reg_1151_pp0_iter2_reg <= icmp_ln833_reg_1151_pp0_iter1_reg;
                icmp_ln833_reg_1151_pp0_iter3_reg <= icmp_ln833_reg_1151_pp0_iter2_reg;
                icmp_ln833_reg_1151_pp0_iter4_reg <= icmp_ln833_reg_1151_pp0_iter3_reg;
                icmp_ln833_reg_1151_pp0_iter5_reg <= icmp_ln833_reg_1151_pp0_iter4_reg;
                icmp_ln833_reg_1151_pp0_iter6_reg <= icmp_ln833_reg_1151_pp0_iter5_reg;
                icmp_ln833_reg_1151_pp0_iter7_reg <= icmp_ln833_reg_1151_pp0_iter6_reg;
                icmp_ln833_reg_1151_pp0_iter8_reg <= icmp_ln833_reg_1151_pp0_iter7_reg;
                icmp_ln833_reg_1151_pp0_iter9_reg <= icmp_ln833_reg_1151_pp0_iter8_reg;
                m_diff_hi_V_reg_1255_pp0_iter15_reg <= m_diff_hi_V_reg_1255;
                m_diff_hi_V_reg_1255_pp0_iter16_reg <= m_diff_hi_V_reg_1255_pp0_iter15_reg;
                m_diff_hi_V_reg_1255_pp0_iter17_reg <= m_diff_hi_V_reg_1255_pp0_iter16_reg;
                m_diff_hi_V_reg_1255_pp0_iter18_reg <= m_diff_hi_V_reg_1255_pp0_iter17_reg;
                m_diff_hi_V_reg_1255_pp0_iter19_reg <= m_diff_hi_V_reg_1255_pp0_iter18_reg;
                m_exp_reg_1186 <= m_exp_fu_474_p2;
                m_fix_V_reg_1214_pp0_iter10_reg <= m_fix_V_reg_1214_pp0_iter9_reg;
                m_fix_V_reg_1214_pp0_iter11_reg <= m_fix_V_reg_1214_pp0_iter10_reg;
                m_fix_V_reg_1214_pp0_iter12_reg <= m_fix_V_reg_1214_pp0_iter11_reg;
                m_fix_V_reg_1214_pp0_iter13_reg <= m_fix_V_reg_1214_pp0_iter12_reg;
                m_fix_V_reg_1214_pp0_iter8_reg <= m_fix_V_reg_1214;
                m_fix_V_reg_1214_pp0_iter9_reg <= m_fix_V_reg_1214_pp0_iter8_reg;
                m_frac_l_V_reg_1177_pp0_iter10_reg <= m_frac_l_V_reg_1177_pp0_iter9_reg;
                m_frac_l_V_reg_1177_pp0_iter11_reg <= m_frac_l_V_reg_1177_pp0_iter10_reg;
                m_frac_l_V_reg_1177_pp0_iter12_reg <= m_frac_l_V_reg_1177_pp0_iter11_reg;
                m_frac_l_V_reg_1177_pp0_iter13_reg <= m_frac_l_V_reg_1177_pp0_iter12_reg;
                m_frac_l_V_reg_1177_pp0_iter14_reg <= m_frac_l_V_reg_1177_pp0_iter13_reg;
                m_frac_l_V_reg_1177_pp0_iter15_reg <= m_frac_l_V_reg_1177_pp0_iter14_reg;
                m_frac_l_V_reg_1177_pp0_iter16_reg <= m_frac_l_V_reg_1177_pp0_iter15_reg;
                m_frac_l_V_reg_1177_pp0_iter17_reg <= m_frac_l_V_reg_1177_pp0_iter16_reg;
                m_frac_l_V_reg_1177_pp0_iter18_reg <= m_frac_l_V_reg_1177_pp0_iter17_reg;
                m_frac_l_V_reg_1177_pp0_iter19_reg <= m_frac_l_V_reg_1177_pp0_iter18_reg;
                m_frac_l_V_reg_1177_pp0_iter20_reg <= m_frac_l_V_reg_1177_pp0_iter19_reg;
                m_frac_l_V_reg_1177_pp0_iter21_reg <= m_frac_l_V_reg_1177_pp0_iter20_reg;
                m_frac_l_V_reg_1177_pp0_iter22_reg <= m_frac_l_V_reg_1177_pp0_iter21_reg;
                m_frac_l_V_reg_1177_pp0_iter23_reg <= m_frac_l_V_reg_1177_pp0_iter22_reg;
                m_frac_l_V_reg_1177_pp0_iter6_reg <= m_frac_l_V_reg_1177;
                m_frac_l_V_reg_1177_pp0_iter7_reg <= m_frac_l_V_reg_1177_pp0_iter6_reg;
                m_frac_l_V_reg_1177_pp0_iter8_reg <= m_frac_l_V_reg_1177_pp0_iter7_reg;
                m_frac_l_V_reg_1177_pp0_iter9_reg <= m_frac_l_V_reg_1177_pp0_iter8_reg;
                r_exp_V_3_reg_1238_pp0_iter10_reg <= r_exp_V_3_reg_1238_pp0_iter9_reg;
                r_exp_V_3_reg_1238_pp0_iter11_reg <= r_exp_V_3_reg_1238_pp0_iter10_reg;
                r_exp_V_3_reg_1238_pp0_iter12_reg <= r_exp_V_3_reg_1238_pp0_iter11_reg;
                r_exp_V_3_reg_1238_pp0_iter13_reg <= r_exp_V_3_reg_1238_pp0_iter12_reg;
                r_exp_V_3_reg_1238_pp0_iter14_reg <= r_exp_V_3_reg_1238_pp0_iter13_reg;
                r_exp_V_3_reg_1238_pp0_iter15_reg <= r_exp_V_3_reg_1238_pp0_iter14_reg;
                r_exp_V_3_reg_1238_pp0_iter16_reg <= r_exp_V_3_reg_1238_pp0_iter15_reg;
                r_exp_V_3_reg_1238_pp0_iter17_reg <= r_exp_V_3_reg_1238_pp0_iter16_reg;
                r_exp_V_3_reg_1238_pp0_iter18_reg <= r_exp_V_3_reg_1238_pp0_iter17_reg;
                r_exp_V_3_reg_1238_pp0_iter19_reg <= r_exp_V_3_reg_1238_pp0_iter18_reg;
                r_exp_V_3_reg_1238_pp0_iter20_reg <= r_exp_V_3_reg_1238_pp0_iter19_reg;
                r_exp_V_3_reg_1238_pp0_iter21_reg <= r_exp_V_3_reg_1238_pp0_iter20_reg;
                r_exp_V_3_reg_1238_pp0_iter22_reg <= r_exp_V_3_reg_1238_pp0_iter21_reg;
                r_exp_V_3_reg_1238_pp0_iter23_reg <= r_exp_V_3_reg_1238_pp0_iter22_reg;
                r_exp_V_3_reg_1238_pp0_iter9_reg <= r_exp_V_3_reg_1238;
                ret_V_4_reg_1287_pp0_iter16_reg <= ret_V_4_reg_1287;
                ret_V_4_reg_1287_pp0_iter17_reg <= ret_V_4_reg_1287_pp0_iter16_reg;
                tmp_V_reg_1145_pp0_iter2_reg <= tmp_V_reg_1145_pp0_iter1_reg;
                tmp_V_reg_1145_pp0_iter3_reg <= tmp_V_reg_1145_pp0_iter2_reg;
                tmp_V_reg_1145_pp0_iter4_reg <= tmp_V_reg_1145_pp0_iter3_reg;
                tmp_V_reg_1145_pp0_iter5_reg <= tmp_V_reg_1145_pp0_iter4_reg;
                    tmp_i_reg_1298_pp0_iter17_reg(25 downto 0) <= tmp_i_reg_1298(25 downto 0);    tmp_i_reg_1298_pp0_iter17_reg(42 downto 35) <= tmp_i_reg_1298(42 downto 35);
                tmp_s_reg_1329_pp0_iter19_reg <= tmp_s_reg_1329;
                tmp_s_reg_1329_pp0_iter20_reg <= tmp_s_reg_1329_pp0_iter19_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter10_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter9_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter10_p_01254_reg_267 <= ap_phi_reg_pp0_iter9_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter11_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter10_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter11_p_01254_reg_267 <= ap_phi_reg_pp0_iter10_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter12_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter11_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter12_p_01254_reg_267 <= ap_phi_reg_pp0_iter11_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter13_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter12_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter13_p_01254_reg_267 <= ap_phi_reg_pp0_iter12_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter14_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter13_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter14_p_01254_reg_267 <= ap_phi_reg_pp0_iter13_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter15_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter14_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter15_p_01254_reg_267 <= ap_phi_reg_pp0_iter14_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter15_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter16_p_01254_reg_267 <= ap_phi_reg_pp0_iter15_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter16_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter17_p_01254_reg_267 <= ap_phi_reg_pp0_iter16_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter18_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter17_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter18_p_01254_reg_267 <= ap_phi_reg_pp0_iter17_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter19_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter18_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter19_p_01254_reg_267 <= ap_phi_reg_pp0_iter18_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter1_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter0_UnifiedRetVal_reg_293;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter20_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter19_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter20_p_01254_reg_267 <= ap_phi_reg_pp0_iter19_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter21_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter20_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter21_p_01254_reg_267 <= ap_phi_reg_pp0_iter20_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter22_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter21_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter22_p_01254_reg_267 <= ap_phi_reg_pp0_iter21_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter23_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter22_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter23_p_01254_reg_267 <= ap_phi_reg_pp0_iter22_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter24_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter23_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter24_p_01254_reg_267 <= ap_phi_reg_pp0_iter23_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter25_p_01254_reg_267 <= ap_phi_reg_pp0_iter24_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter2_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter1_UnifiedRetVal_reg_293;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter3_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter2_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter3_p_01254_reg_267 <= ap_phi_reg_pp0_iter2_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter4_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter3_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter4_p_01254_reg_267 <= ap_phi_reg_pp0_iter3_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter5_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter4_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter5_p_01254_reg_267 <= ap_phi_reg_pp0_iter4_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter6_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter5_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter6_p_01254_reg_267 <= ap_phi_reg_pp0_iter5_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter7_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter6_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter7_p_01254_reg_267 <= ap_phi_reg_pp0_iter6_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter8_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter7_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter8_p_01254_reg_267 <= ap_phi_reg_pp0_iter7_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_phi_reg_pp0_iter9_UnifiedRetVal_reg_293 <= ap_phi_reg_pp0_iter8_UnifiedRetVal_reg_293;
                ap_phi_reg_pp0_iter9_p_01254_reg_267 <= ap_phi_reg_pp0_iter8_p_01254_reg_267;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_fu_434_p2 = ap_const_lv1_1) and (icmp_ln460_fu_420_p2 = ap_const_lv1_1) and (icmp_ln415_fu_388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln833_fu_344_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                e_frac_V_2_reg_1167 <= e_frac_V_2_fu_454_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter20_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter20_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter20_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter20_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_Z1P_m_1_V_reg_1360 <= exp_Z1P_m_1_l_V_fu_935_p2(51 downto 2);
                exp_Z1_V_reg_1355 <= pow_reduce_anonymo_2_q0;
                exp_Z1_hi_V_reg_1365 <= pow_reduce_anonymo_2_q0(57 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter17_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter17_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter17_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter17_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                exp_Z2P_m_1_V_reg_1323 <= exp_Z2P_m_1_V_fu_858_p2;
                tmp_s_reg_1329 <= pow_reduce_anonymo_3_q0(41 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln833_fu_344_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln415_reg_1155 <= icmp_ln415_fu_388_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln415_reg_1155_pp0_iter1_reg <= icmp_ln415_reg_1155;
                icmp_ln460_reg_1159_pp0_iter1_reg <= icmp_ln460_reg_1159;
                icmp_ln467_reg_1163_pp0_iter1_reg <= icmp_ln467_reg_1163;
                icmp_ln833_reg_1151 <= icmp_ln833_fu_344_p2;
                icmp_ln833_reg_1151_pp0_iter1_reg <= icmp_ln833_reg_1151;
                tmp_V_reg_1145 <= p_Val2_s_fu_318_p1(62 downto 52);
                tmp_V_reg_1145_pp0_iter1_reg <= tmp_V_reg_1145;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln415_fu_388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln833_fu_344_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln460_reg_1159 <= icmp_ln460_fu_420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln460_fu_420_p2 = ap_const_lv1_1) and (icmp_ln415_fu_388_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln833_fu_344_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln467_reg_1163 <= icmp_ln467_fu_434_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln657_fu_628_p2 = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln657_1_reg_1233 <= icmp_ln657_1_fu_633_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter6_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln657_reg_1229 <= icmp_ln657_fu_628_p2;
                m_fix_V_reg_1214 <= select_ln581_fu_593_p3(129 downto 59);
                m_fix_hi_V_reg_1219 <= select_ln581_fu_593_p3(129 downto 114);
                p_Result_16_reg_1224 <= select_ln581_fu_593_p3(129 downto 129);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln849_1_reg_1396 <= grp_fu_312_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (or_ln657_fu_1075_p2 = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0)) or ((icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (grp_fu_312_p2 = ap_const_lv1_0) and (icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0))))) then
                icmp_ln853_reg_1404 <= icmp_ln853_fu_1080_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter5_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                isNeg_reg_1192 <= m_exp_fu_474_p2(11 downto 11);
                m_fix_l_V_reg_1207 <= m_fix_l_V_fu_539_p3;
                sext_ln1311_2_reg_1202 <= sext_ln1311_2_fu_508_p1;
                ush_1_reg_1197 <= ush_1_fu_491_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter12_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter12_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                m_fix_a_V_reg_1250 <= grp_fu_703_p2(82 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter4_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                m_frac_l_V_reg_1177 <= grp_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                or_ln657_reg_1400 <= or_ln657_fu_1075_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter14_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter14_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter14_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter15 = ap_const_logic_1) and (icmp_ln833_reg_1151_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                p_Val2_18_reg_1293 <= pow_reduce_anonymo_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter22_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter22_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter22_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter22_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_V_18_reg_1385 <= grp_fu_967_p2;
                ret_V_6_reg_1380 <= ret_V_6_fu_976_p2;
                trunc_ln1146_reg_1391 <= trunc_ln1146_fu_982_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter7_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                r_exp_V_3_reg_1238 <= r_exp_V_3_fu_692_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter14_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter14_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter14_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter14_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ret_V_4_reg_1287 <= ret_V_4_fu_802_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter19_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter19_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter19_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter19_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_2_reg_1350 <= grp_fu_889_p2(92 downto 57);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (((icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln853_fu_1080_p2 = ap_const_lv1_0) and (or_ln657_fu_1075_p2 = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0)) or ((icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln853_fu_1080_p2 = ap_const_lv1_0) and (grp_fu_312_p2 = ap_const_lv1_0) and (icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0))))) then
                tmp_V_1_reg_1408 <= select_ln656_fu_1059_p3(56 downto 5);
                trunc_ln168_reg_1413 <= trunc_ln168_fu_1096_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter15_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter15_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter15_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter15_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    tmp_i_reg_1298(25 downto 0) <= tmp_i_fu_808_p4(25 downto 0);    tmp_i_reg_1298(42 downto 35) <= tmp_i_fu_808_p4(42 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln467_reg_1163_pp0_iter16_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter16_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter16_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter16_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_reg_1313 <= grp_fu_823_p2(78 downto 59);
            end if;
        end if;
    end process;
    tmp_i_reg_1298(34 downto 26) <= "000000000";
    tmp_i_reg_1298_pp0_iter17_reg(34 downto 26) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Z3_V_fu_751_p4 <= ret_V_3_fu_725_p2(42 downto 35);
    Z4_V_fu_761_p1 <= ret_V_3_fu_725_p2(35 - 1 downto 0);
    Z4_ind_V_fu_765_p4 <= ret_V_3_fu_725_p2(34 downto 27);
    add_ln1146_1_fu_1012_p2 <= std_logic_vector(unsigned(zext_ln1146_fu_996_p1) + unsigned(trunc_ln2_fu_999_p3));
    add_ln657_2_fu_926_p2 <= std_logic_vector(unsigned(exp_Z2P_m_1_V_reg_1323_pp0_iter20_reg) + unsigned(zext_ln657_2_fu_923_p1));
    add_ln657_fu_849_p2 <= std_logic_vector(unsigned(ret_V_4_reg_1287_pp0_iter17_reg) + unsigned(zext_ln657_fu_846_p1));
    add_ln805_fu_678_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(tmp_1_fu_653_p4));
    and_ln18_1_fu_374_p2 <= (icmp_ln837_fu_368_p2 and icmp_ln833_1_fu_350_p2);
    and_ln18_fu_362_p2 <= (icmp_ln833_2_fu_356_p2 and icmp_ln833_1_fu_350_p2);
    and_ln_fu_1046_p3 <= (tmp_3_fu_1036_p4 & ap_const_lv1_0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_139_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_139 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_682_assign_proc : process(icmp_ln833_reg_1151_pp0_iter23_reg, icmp_ln415_reg_1155_pp0_iter23_reg, icmp_ln460_reg_1159_pp0_iter23_reg, icmp_ln467_reg_1163_pp0_iter23_reg, icmp_ln657_reg_1229_pp0_iter23_reg, grp_fu_312_p2, or_ln657_fu_1075_p2)
    begin
                ap_condition_682 <= (((or_ln657_fu_1075_p2 = ap_const_lv1_1) and (icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0)) or ((grp_fu_312_p2 = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter23_reg = ap_const_lv1_1) and (icmp_ln657_reg_1229_pp0_iter23_reg = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter23_reg = ap_const_lv1_0)));
    end process;


    ap_condition_711_assign_proc : process(icmp_ln833_reg_1151_pp0_iter24_reg, icmp_ln415_reg_1155_pp0_iter24_reg, icmp_ln460_reg_1159_pp0_iter24_reg, icmp_ln467_reg_1163_pp0_iter24_reg, icmp_ln657_reg_1229_pp0_iter24_reg, icmp_ln849_1_reg_1396, or_ln657_reg_1400, icmp_ln853_reg_1404)
    begin
                ap_condition_711 <= (((icmp_ln467_reg_1163_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln853_reg_1404 = ap_const_lv1_0) and (icmp_ln849_1_reg_1396 = ap_const_lv1_0) and (icmp_ln657_reg_1229_pp0_iter24_reg = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter24_reg = ap_const_lv1_0)) or ((icmp_ln657_reg_1229_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln853_reg_1404 = ap_const_lv1_0) and (or_ln657_reg_1400 = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter24_reg = ap_const_lv1_0)));
    end process;


    ap_condition_721_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_721 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_794_assign_proc : process(icmp_ln833_fu_344_p2, icmp_ln415_fu_388_p2, icmp_ln460_fu_420_p2)
    begin
                ap_condition_794 <= ((icmp_ln460_fu_420_p2 = ap_const_lv1_0) and (icmp_ln415_fu_388_p2 = ap_const_lv1_1) and (icmp_ln833_fu_344_p2 = ap_const_lv1_0));
    end process;


    ap_condition_798_assign_proc : process(icmp_ln833_reg_1151, icmp_ln415_reg_1155, icmp_ln460_reg_1159, icmp_ln467_reg_1163)
    begin
                ap_condition_798 <= ((icmp_ln460_reg_1159 = ap_const_lv1_1) and (icmp_ln467_reg_1163 = ap_const_lv1_0) and (icmp_ln415_reg_1155 = ap_const_lv1_1) and (icmp_ln833_reg_1151 = ap_const_lv1_0));
    end process;


    ap_condition_803_assign_proc : process(icmp_ln833_reg_1151_pp0_iter24_reg, icmp_ln415_reg_1155_pp0_iter24_reg, icmp_ln460_reg_1159_pp0_iter24_reg, icmp_ln467_reg_1163_pp0_iter24_reg, icmp_ln657_reg_1229_pp0_iter24_reg, icmp_ln849_1_reg_1396, or_ln657_reg_1400, icmp_ln853_reg_1404)
    begin
                ap_condition_803 <= (((icmp_ln853_reg_1404 = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln849_1_reg_1396 = ap_const_lv1_0) and (icmp_ln657_reg_1229_pp0_iter24_reg = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter24_reg = ap_const_lv1_0)) or ((icmp_ln853_reg_1404 = ap_const_lv1_1) and (icmp_ln657_reg_1229_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln467_reg_1163_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln460_reg_1159_pp0_iter24_reg = ap_const_lv1_1) and (icmp_ln415_reg_1155_pp0_iter24_reg = ap_const_lv1_1) and (or_ln657_reg_1400 = ap_const_lv1_0) and (icmp_ln833_reg_1151_pp0_iter24_reg = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter25, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp0_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to24_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24)
    begin
        if (((ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to24 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_296_p4_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter25, icmp_ln833_reg_1151_pp0_iter24_reg, icmp_ln415_reg_1155_pp0_iter24_reg, icmp_ln460_reg_1159_pp0_iter24_reg, icmp_ln467_reg_1163_pp0_iter24_reg, icmp_ln657_reg_1229_pp0_iter24_reg, icmp_ln849_1_reg_1396, or_ln657_reg_1400, ap_phi_mux_p_01254_phi_fu_274_p12, ap_phi_reg_pp0_iter25_UnifiedRetVal_reg_293)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1) and ((icmp_ln833_reg_1151_pp0_iter24_reg = ap_const_lv1_1) or ((icmp_ln415_reg_1155_pp0_iter24_reg = ap_const_lv1_0) or ((icmp_ln460_reg_1159_pp0_iter24_reg = ap_const_lv1_0) or ((icmp_ln467_reg_1163_pp0_iter24_reg = ap_const_lv1_0) or (((icmp_ln849_1_reg_1396 = ap_const_lv1_0) and (icmp_ln657_reg_1229_pp0_iter24_reg = ap_const_lv1_0)) or ((icmp_ln657_reg_1229_pp0_iter24_reg = ap_const_lv1_1) and (or_ln657_reg_1400 = ap_const_lv1_0))))))))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_296_p4 <= ap_phi_mux_p_01254_phi_fu_274_p12;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_296_p4 <= ap_phi_reg_pp0_iter25_UnifiedRetVal_reg_293;
        end if; 
    end process;


    ap_phi_mux_p_01254_phi_fu_274_p12_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter25, bitcast_ln512_fu_1129_p1, ap_phi_reg_pp0_iter25_p_01254_reg_267, ap_condition_711, ap_condition_803)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_1))) then
            if ((ap_const_boolean_1 = ap_condition_803)) then 
                ap_phi_mux_p_01254_phi_fu_274_p12 <= ap_const_lv64_0;
            elsif ((ap_const_boolean_1 = ap_condition_711)) then 
                ap_phi_mux_p_01254_phi_fu_274_p12 <= bitcast_ln512_fu_1129_p1;
            else 
                ap_phi_mux_p_01254_phi_fu_274_p12 <= ap_phi_reg_pp0_iter25_p_01254_reg_267;
            end if;
        else 
            ap_phi_mux_p_01254_phi_fu_274_p12 <= ap_phi_reg_pp0_iter25_p_01254_reg_267;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_UnifiedRetVal_reg_293 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_01254_reg_267 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to24)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to24 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_296_p4;
    bitcast_ln512_fu_1129_p1 <= p_Result_17_fu_1120_p4;
    e_frac_V_2_fu_454_p3 <= 
        e_frac_V_fu_448_p2 when (p_Result_s_fu_322_p3(0) = '1') else 
        p_Result_15_fu_440_p3;
    e_frac_V_fu_448_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(p_Result_15_fu_440_p3));
    exp_Z1P_m_1_l_V_fu_935_p2 <= std_logic_vector(unsigned(zext_ln657_3_fu_931_p1) + unsigned(zext_ln682_fu_919_p1));
    exp_Z2P_m_1_V_fu_858_p2 <= std_logic_vector(unsigned(zext_ln657_1_fu_854_p1) + unsigned(ret_V_5_fu_843_p1));
    f_Z4_V_fu_785_p4 <= pow_reduce_anonymo_q0(25 downto 16);
    grp_fu_1134_p0 <= ap_const_lv31_5C55(16 - 1 downto 0);
    grp_fu_303_p4 <= r_exp_V_2_fu_1067_p3(12 downto 10);
    grp_fu_312_p2 <= "1" when (signed(grp_fu_303_p4) > signed(ap_const_lv3_0)) else "0";
    grp_fu_465_p0 <= ap_const_lv122_B17217F7D1CF79ABC(69 - 1 downto 0);
    grp_fu_703_p0 <= ap_const_lv83_58B90BFBE8E7BCD5E4(72 - 1 downto 0);
    grp_fu_823_p0 <= grp_fu_823_p00(43 - 1 downto 0);
    grp_fu_823_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_fu_808_p4),79));
    grp_fu_823_p1 <= grp_fu_823_p10(36 - 1 downto 0);
    grp_fu_823_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_4_reg_1287),79));
    grp_fu_889_p0 <= grp_fu_889_p00(49 - 1 downto 0);
    grp_fu_889_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln662_6_fu_874_p4),93));
    grp_fu_889_p1 <= grp_fu_889_p10(44 - 1 downto 0);
    grp_fu_889_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z2P_m_1_V_reg_1323),93));
    grp_fu_967_p0 <= grp_fu_967_p00(50 - 1 downto 0);
    grp_fu_967_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_hi_V_reg_1365),100));
    grp_fu_967_p1 <= grp_fu_967_p10(50 - 1 downto 0);
    grp_fu_967_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1P_m_1_V_reg_1360),100));
    icmp_ln415_fu_388_p2 <= "1" when (or_ln415_1_fu_380_p3 = ap_const_lv32_0) else "0";
    icmp_ln460_fu_420_p2 <= "1" when (or_ln460_2_fu_412_p3 = ap_const_lv32_0) else "0";
    icmp_ln467_fu_434_p2 <= "1" when (or_ln467_2_fu_426_p3 = ap_const_lv32_0) else "0";
    icmp_ln657_1_fu_633_p2 <= "0" when (r_V_13_fu_566_p3 = sext_ln657_1_fu_547_p1) else "1";
    icmp_ln657_fu_628_p2 <= "1" when (signed(m_exp_reg_1186) > signed(ap_const_lv12_0)) else "0";
    icmp_ln805_fu_672_p2 <= "1" when (trunc_ln805_fu_669_p1 = ap_const_lv18_0) else "0";
    icmp_ln833_1_fu_350_p2 <= "1" when (tmp_V_fu_330_p4 = ap_const_lv11_7FF) else "0";
    icmp_ln833_2_fu_356_p2 <= "1" when (p_Val2_36_fu_340_p1 = ap_const_lv52_0) else "0";
    icmp_ln833_fu_344_p2 <= "1" when (tmp_V_fu_330_p4 = ap_const_lv11_0) else "0";
    icmp_ln837_fu_368_p2 <= "0" when (p_Val2_36_fu_340_p1 = ap_const_lv52_0) else "1";
    icmp_ln853_fu_1080_p2 <= "1" when (signed(r_exp_V_2_fu_1067_p3) < signed(ap_const_lv13_1C02)) else "0";
    isNeg_fu_483_p3 <= m_exp_fu_474_p2(11 downto 11);
    lhs_V_1_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_V_reg_1272),36));
    lhs_V_2_fu_909_p5 <= (((Z2_V_reg_1260_pp0_iter20_reg & ap_const_lv1_0) & tmp_s_reg_1329_pp0_iter20_reg) & ap_const_lv2_0);
    lhs_V_3_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_Z1_V_reg_1355_pp0_iter22_reg),59));
    lhs_V_4_fu_986_p3 <= (ret_V_6_reg_1380 & ap_const_lv49_0);
        lhs_V_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_fix_V_reg_1214_pp0_iter13_reg),72));

    lshr_ln662_6_fu_874_p4 <= ((Z2_V_reg_1260_pp0_iter18_reg & ap_const_lv1_0) & tmp_s_reg_1329);
    m_exp_fu_474_p2 <= std_logic_vector(signed(ap_const_lv12_C01) + signed(zext_ln502_fu_471_p1));
    m_fix_l_V_fu_539_p3 <= 
        sext_ln1312_fu_531_p1 when (isNeg_fu_483_p3(0) = '1') else 
        trunc_ln1312_fu_535_p1;
    or_ln415_1_fu_380_p3 <= (ap_const_lv31_0 & and_ln18_1_fu_374_p2);
    or_ln460_2_fu_412_p3 <= (ap_const_lv31_0 & y_is_pinf_fu_400_p2);
    or_ln467_2_fu_426_p3 <= (ap_const_lv31_0 & y_is_ninf_fu_406_p2);
    or_ln657_fu_1075_p2 <= (icmp_ln657_1_reg_1233_pp0_iter23_reg or grp_fu_312_p2);
    out_exp_V_fu_1115_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) + unsigned(trunc_ln168_reg_1413));
    p_Result_15_fu_440_p3 <= (ap_const_lv2_1 & p_Val2_36_fu_340_p1);
    p_Result_17_fu_1120_p4 <= ((ap_const_lv1_0 & out_exp_V_fu_1115_p2) & tmp_V_1_reg_1408);
    p_Result_8_fu_662_p3 <= grp_fu_1134_p3(30 downto 30);
    p_Result_s_fu_322_p3 <= p_Val2_s_fu_318_p1(63 downto 63);
    p_Val2_36_fu_340_p1 <= p_Val2_s_fu_318_p1(52 - 1 downto 0);
    p_Val2_s_fu_318_p1 <= exp;
    pow_reduce_anonymo_2_address0 <= zext_ln498_1_fu_895_p1(8 - 1 downto 0);

    pow_reduce_anonymo_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter20, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_2_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_3_address0 <= zext_ln498_3_fu_839_p1(8 - 1 downto 0);

    pow_reduce_anonymo_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter17, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_3_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    pow_reduce_anonymo_address0 <= zext_ln498_fu_775_p1(8 - 1 downto 0);
    pow_reduce_anonymo_address1 <= zext_ln498_2_fu_780_p1(8 - 1 downto 0);

    pow_reduce_anonymo_ce0_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_ce0 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pow_reduce_anonymo_ce1_assign_proc : process(ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            pow_reduce_anonymo_ce1 <= ap_const_logic_1;
        else 
            pow_reduce_anonymo_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_13_fu_566_p3 <= 
        r_V_2_fu_556_p2 when (isNeg_reg_1192(0) = '1') else 
        r_V_3_fu_561_p2;
    r_V_1_fu_525_p2 <= std_logic_vector(shift_left(unsigned(sext_ln657_2_fu_480_p1),to_integer(unsigned('0' & zext_ln1287_fu_512_p1(31-1 downto 0)))));
    r_V_2_fu_556_p2 <= std_logic_vector(shift_left(unsigned(m_fix_l_V_reg_1207),to_integer(unsigned('0' & zext_ln1253_fu_553_p1(31-1 downto 0)))));
    r_V_3_fu_561_p2 <= std_logic_vector(shift_right(signed(m_fix_l_V_reg_1207),to_integer(unsigned('0' & zext_ln1253_fu_553_p1(31-1 downto 0)))));
    r_V_5_fu_584_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_reg_1177_pp0_iter6_reg),to_integer(unsigned('0' & zext_ln1285_fu_580_p1(31-1 downto 0)))));
    r_V_fu_520_p2 <= std_logic_vector(shift_right(signed(m_frac_l_V_reg_1177),to_integer(unsigned('0' & zext_ln1287_1_fu_516_p1(31-1 downto 0)))));
    r_exp_V_2_fu_1067_p3 <= 
        r_exp_V_3_reg_1238_pp0_iter23_reg when (tmp_7_fu_1028_p3(0) = '1') else 
        r_exp_V_fu_1054_p2;
    r_exp_V_3_fu_692_p3 <= 
        select_ln805_fu_684_p3 when (p_Result_8_fu_662_p3(0) = '1') else 
        tmp_1_fu_653_p4;
    r_exp_V_fu_1054_p2 <= std_logic_vector(signed(ap_const_lv13_1FFF) + signed(r_exp_V_3_reg_1238_pp0_iter23_reg));
    ret_V_3_fu_725_p2 <= std_logic_vector(signed(lhs_V_fu_719_p1) - signed(rhs_V_1_fu_722_p1));
    ret_V_4_fu_802_p2 <= std_logic_vector(unsigned(lhs_V_1_fu_795_p1) + unsigned(rhs_V_2_fu_798_p1));
    ret_V_5_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_reg_1298_pp0_iter17_reg),44));
    ret_V_6_fu_976_p2 <= std_logic_vector(unsigned(ap_const_lv59_10) + unsigned(lhs_V_3_fu_973_p1));
    ret_V_7_fu_1006_p2 <= std_logic_vector(unsigned(lhs_V_4_fu_986_p3) + unsigned(zext_ln657_5_fu_993_p1));
        rhs_V_1_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_fix_a_V_reg_1250),72));

    rhs_V_2_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(f_Z4_V_fu_785_p4),36));
    rhs_V_fu_642_p3 <= (p_Result_16_reg_1224 & ap_const_lv18_20000);
    select_ln581_fu_593_p3 <= 
        sext_ln581_fu_589_p1 when (tmp_4_fu_573_p3(0) = '1') else 
        m_fix_l_V_reg_1207;
    select_ln656_fu_1059_p3 <= 
        trunc_ln3_fu_1018_p4 when (tmp_7_fu_1028_p3(0) = '1') else 
        and_ln_fu_1046_p3;
    select_ln658_fu_1107_p3 <= 
        ap_const_lv64_0 when (tmp_10_fu_1100_p3(0) = '1') else 
        ap_const_lv64_7FF0000000000000;
    select_ln805_fu_684_p3 <= 
        tmp_1_fu_653_p4 when (icmp_ln805_fu_672_p2(0) = '1') else 
        add_ln805_fu_678_p2;
        sext_ln1311_1_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_fu_491_p2),12));

        sext_ln1311_2_fu_508_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_fu_500_p3),32));

        sext_ln1311_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_1_reg_1197),32));

        sext_ln1312_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_fu_520_p2),130));

        sext_ln581_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_5_fu_584_p2),130));

        sext_ln657_1_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_reg_1177_pp0_iter6_reg),130));

        sext_ln657_2_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_frac_l_V_reg_1177),131));

    tmp_10_fu_1100_p3 <= m_frac_l_V_reg_1177_pp0_iter23_reg(121 downto 121);
    tmp_1_fu_653_p4 <= grp_fu_1134_p3(30 downto 18);
    tmp_3_fu_1036_p4 <= ret_V_7_fu_1006_p2(106 downto 49);
    tmp_4_fu_573_p3 <= m_exp_reg_1186(11 downto 11);
    tmp_7_fu_1028_p3 <= add_ln1146_1_fu_1012_p2(106 downto 106);
    tmp_V_fu_330_p4 <= p_Val2_s_fu_318_p1(62 downto 52);
    tmp_i_fu_808_p4 <= ((Z3_V_reg_1267_pp0_iter15_reg & ap_const_lv9_0) & p_Val2_18_reg_1293);
    trunc_ln1146_fu_982_p1 <= ret_V_6_fu_976_p2(58 - 1 downto 0);
    trunc_ln1312_fu_535_p1 <= r_V_1_fu_525_p2(130 - 1 downto 0);
    trunc_ln168_fu_1096_p1 <= r_exp_V_2_fu_1067_p3(11 - 1 downto 0);
    trunc_ln2_fu_999_p3 <= (trunc_ln1146_reg_1391 & ap_const_lv49_0);
    trunc_ln3_fu_1018_p4 <= ret_V_7_fu_1006_p2(107 downto 49);
    trunc_ln805_fu_669_p1 <= grp_fu_1134_p3(18 - 1 downto 0);
    ush_1_fu_491_p2 <= std_logic_vector(unsigned(ap_const_lv11_3FF) - unsigned(tmp_V_reg_1145_pp0_iter5_reg));
    ush_fu_500_p3 <= 
        sext_ln1311_1_fu_496_p1 when (isNeg_fu_483_p3(0) = '1') else 
        m_exp_fu_474_p2;
    xor_ln936_fu_394_p2 <= (p_Result_s_fu_322_p3 xor ap_const_lv1_1);
    y_is_ninf_fu_406_p2 <= (p_Result_s_fu_322_p3 and and_ln18_fu_362_p2);
    y_is_pinf_fu_400_p2 <= (xor_ln936_fu_394_p2 and and_ln18_fu_362_p2);
    zext_ln1146_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_reg_1385),107));
    zext_ln1253_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_2_reg_1202),130));
    zext_ln1285_fu_580_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_fu_550_p1),122));
    zext_ln1287_1_fu_516_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_2_fu_508_p1),122));
    zext_ln1287_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln1311_2_fu_508_p1),131));
    zext_ln498_1_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_diff_hi_V_reg_1255_pp0_iter19_reg),64));
    zext_ln498_2_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z3_V_fu_751_p4),64));
    zext_ln498_3_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z2_V_reg_1260_pp0_iter16_reg),64));
    zext_ln498_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Z4_ind_V_fu_765_p4),64));
    zext_ln502_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_reg_1145_pp0_iter5_reg),12));
    zext_ln657_1_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_fu_849_p2),44));
    zext_ln657_2_fu_923_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1350),44));
    zext_ln657_3_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln657_2_fu_926_p2),52));
    zext_ln657_5_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_18_reg_1385),108));
    zext_ln657_fu_846_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_1313),36));
    zext_ln682_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_2_fu_909_p5),52));
end behav;
