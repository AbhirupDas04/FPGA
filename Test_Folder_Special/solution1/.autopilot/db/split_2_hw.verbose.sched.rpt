

================================================================
== Vivado HLS Report for 'split_2_hw'
================================================================
* Date:           Mon Jul  3 14:35:01 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        Test_Folder_Special
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.680|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    5|   68|    5|   68|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  |  Trip  |          |
        | Loop Name| min | max |  Latency |  achieved |   target  |  Count | Pipelined|
        +----------+-----+-----+----------+-----------+-----------+--------+----------+
        |- Loop 1  |    3|   66|         3|          1|          1| 1 ~ 64 |    yes   |
        +----------+-----+-----+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 2 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%mode_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %mode)"   --->   Operation 6 'read' 'mode_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%start_read = call i12 @_ssdm_op_Read.ap_auto.i12(i12 %start)"   --->   Operation 7 'read' 'start_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty = trunc i12 %start_read to i11"   --->   Operation 8 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (1.76ns)   --->   "br label %.preheader" [Chacha/chacha.cpp:54]   --->   Operation 9 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 5.16>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%indvar_flatten17 = phi i7 [ 0, %0 ], [ %add_ln54, %hls_label_4_end ]" [Chacha/chacha.cpp:54]   --->   Operation 10 'phi' 'indvar_flatten17' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%i_0 = phi i3 [ 0, %0 ], [ %select_ln59_2, %hls_label_4_end ]" [Chacha/chacha.cpp:59]   --->   Operation 11 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i6 [ 0, %0 ], [ %select_ln55, %hls_label_4_end ]" [Chacha/chacha.cpp:55]   --->   Operation 12 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %0 ], [ %select_ln59_4, %hls_label_4_end ]" [Chacha/chacha.cpp:59]   --->   Operation 13 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%count1_2 = phi i11 [ %empty, %0 ], [ %count1, %hls_label_4_end ]"   --->   Operation 14 'phi' 'count1_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%count2 = phi i8 [ 2, %0 ], [ %add_ln56, %hls_label_4_end ]" [Chacha/chacha.cpp:56]   --->   Operation 15 'phi' 'count2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%k_0 = phi i4 [ 6, %0 ], [ %k, %hls_label_4_end ]"   --->   Operation 16 'phi' 'k_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.48ns)   --->   "%icmp_ln54 = icmp eq i7 %indvar_flatten17, -64" [Chacha/chacha.cpp:54]   --->   Operation 17 'icmp' 'icmp_ln54' <Predicate = true> <Delay = 1.48> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (1.87ns)   --->   "%add_ln54 = add i7 %indvar_flatten17, 1" [Chacha/chacha.cpp:54]   --->   Operation 18 'add' 'add_ln54' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "br i1 %icmp_ln54, label %.loopexit, label %hls_label_4_begin" [Chacha/chacha.cpp:54]   --->   Operation 19 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.65ns)   --->   "%i = add i3 1, %i_0" [Chacha/chacha.cpp:54]   --->   Operation 20 'add' 'i' <Predicate = (!icmp_ln54)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (1.42ns)   --->   "%icmp_ln55 = icmp eq i6 %indvar_flatten, 16" [Chacha/chacha.cpp:55]   --->   Operation 21 'icmp' 'icmp_ln55' <Predicate = (!icmp_ln54)> <Delay = 1.42> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.98ns)   --->   "%select_ln59 = select i1 %icmp_ln55, i3 0, i3 %j_0" [Chacha/chacha.cpp:59]   --->   Operation 22 'select' 'select_ln59' <Predicate = (!icmp_ln54)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node select_ln59_3)   --->   "%select_ln59_1 = select i1 %icmp_ln55, i4 6, i4 %k_0" [Chacha/chacha.cpp:59]   --->   Operation 23 'select' 'select_ln59_1' <Predicate = (!icmp_ln54)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.98ns)   --->   "%select_ln59_2 = select i1 %icmp_ln55, i3 %i, i3 %i_0" [Chacha/chacha.cpp:59]   --->   Operation 24 'select' 'select_ln59_2' <Predicate = (!icmp_ln54)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%tmp_1 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %k_0, i32 3)" [Chacha/chacha.cpp:56]   --->   Operation 25 'bitselect' 'tmp_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node or_ln59)   --->   "%xor_ln56 = xor i1 %tmp_1, true" [Chacha/chacha.cpp:56]   --->   Operation 26 'xor' 'xor_ln56' <Predicate = (!icmp_ln54)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 27 [1/1] (0.97ns) (out node of the LUT)   --->   "%or_ln59 = or i1 %icmp_ln55, %xor_ln56" [Chacha/chacha.cpp:59]   --->   Operation 27 'or' 'or_ln59' <Predicate = (!icmp_ln54)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (1.65ns)   --->   "%j = add i3 1, %select_ln59" [Chacha/chacha.cpp:55]   --->   Operation 28 'add' 'j' <Predicate = (!icmp_ln54)> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (1.02ns) (out node of the LUT)   --->   "%select_ln59_3 = select i1 %or_ln59, i4 %select_ln59_1, i4 6" [Chacha/chacha.cpp:59]   --->   Operation 29 'select' 'select_ln59_3' <Predicate = (!icmp_ln54)> <Delay = 1.02> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.98ns)   --->   "%select_ln59_4 = select i1 %or_ln59, i3 %select_ln59, i3 %j" [Chacha/chacha.cpp:59]   --->   Operation 30 'select' 'select_ln59_4' <Predicate = (!icmp_ln54)> <Delay = 0.98> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 31 [1/1] (1.55ns)   --->   "%icmp_ln62 = icmp eq i8 %count2, 110" [Chacha/chacha.cpp:62]   --->   Operation 31 'icmp' 'icmp_ln62' <Predicate = (!icmp_ln54)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (0.97ns)   --->   "%and_ln62 = and i1 %icmp_ln62, %mode_read" [Chacha/chacha.cpp:62]   --->   Operation 32 'and' 'and_ln62' <Predicate = (!icmp_ln54)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (1.73ns)   --->   "%k = add i4 %select_ln59_3, -2" [Chacha/chacha.cpp:56]   --->   Operation 33 'add' 'k' <Predicate = (!icmp_ln54 & !and_ln62)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (1.82ns)   --->   "%add_ln55_1 = add i6 %indvar_flatten, 1" [Chacha/chacha.cpp:55]   --->   Operation 34 'add' 'add_ln55_1' <Predicate = (!icmp_ln54 & !and_ln62)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (1.18ns)   --->   "%select_ln55 = select i1 %icmp_ln55, i6 1, i6 %add_ln55_1" [Chacha/chacha.cpp:55]   --->   Operation 35 'select' 'select_ln55' <Predicate = (!icmp_ln54 & !and_ln62)> <Delay = 1.18> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 36 [1/1] (1.91ns)   --->   "%add_ln56 = add i8 %count2, 2" [Chacha/chacha.cpp:56]   --->   Operation 36 'add' 'add_ln56' <Predicate = (!icmp_ln54 & !and_ln62)> <Delay = 1.91> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 8.68>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_s = call i5 @_ssdm_op_BitConcatenate.i5.i3.i2(i3 %select_ln59_2, i2 0)" [Chacha/chacha.cpp:59]   --->   Operation 37 'bitconcatenate' 'tmp_s' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i5 %tmp_s to i6" [Chacha/chacha.cpp:59]   --->   Operation 38 'zext' 'zext_ln59' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln59_1 = zext i3 %select_ln59_4 to i6" [Chacha/chacha.cpp:59]   --->   Operation 39 'zext' 'zext_ln59_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (1.78ns)   --->   "%add_ln59 = add i6 %zext_ln59_1, %zext_ln59" [Chacha/chacha.cpp:59]   --->   Operation 40 'add' 'add_ln59' <Predicate = (!icmp_ln54)> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln59_2 = zext i6 %add_ln59 to i9" [Chacha/chacha.cpp:59]   --->   Operation 41 'zext' 'zext_ln59_2' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%p_shl_cast = call i9 @_ssdm_op_BitConcatenate.i9.i6.i3(i6 %add_ln59, i3 0)" [Chacha/chacha.cpp:59]   --->   Operation 42 'bitconcatenate' 'p_shl_cast' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (1.82ns)   --->   "%add_ln59_1 = add i9 %p_shl_cast, %zext_ln59_2" [Chacha/chacha.cpp:59]   --->   Operation 43 'add' 'add_ln59_1' <Predicate = (!icmp_ln54)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node add_ln60_1)   --->   "%trunc_ln56 = trunc i4 %select_ln59_3 to i3" [Chacha/chacha.cpp:56]   --->   Operation 44 'trunc' 'trunc_ln56' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%sext_ln59 = sext i4 %select_ln59_3 to i9" [Chacha/chacha.cpp:59]   --->   Operation 45 'sext' 'sext_ln59' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (1.82ns)   --->   "%add_ln59_2 = add i9 %sext_ln59, %add_ln59_1" [Chacha/chacha.cpp:59]   --->   Operation 46 'add' 'add_ln59_2' <Predicate = (!icmp_ln54)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln59_3 = zext i9 %add_ln59_2 to i64" [Chacha/chacha.cpp:59]   --->   Operation 47 'zext' 'zext_ln59_3' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%state_matrix_addr = getelementptr [144 x i8]* %state_matrix, i64 0, i64 %zext_ln59_3" [Chacha/chacha.cpp:59]   --->   Operation 48 'getelementptr' 'state_matrix_addr' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 49 [2/2] (3.25ns)   --->   "%state_matrix_load = load i8* %state_matrix_addr, align 1" [Chacha/chacha.cpp:59]   --->   Operation 49 'load' 'state_matrix_load' <Predicate = (!icmp_ln54)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 750> <RAM>
ST_3 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node add_ln60_1)   --->   "%or_ln60 = or i3 %trunc_ln56, 1" [Chacha/chacha.cpp:60]   --->   Operation 50 'or' 'or_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node add_ln60_1)   --->   "%zext_ln60 = zext i3 %or_ln60 to i9" [Chacha/chacha.cpp:60]   --->   Operation 51 'zext' 'zext_ln60' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (1.82ns) (out node of the LUT)   --->   "%add_ln60_1 = add i9 %zext_ln60, %add_ln59_1" [Chacha/chacha.cpp:60]   --->   Operation 52 'add' 'add_ln60_1' <Predicate = (!icmp_ln54)> <Delay = 1.82> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln60_2 = zext i9 %add_ln60_1 to i64" [Chacha/chacha.cpp:60]   --->   Operation 53 'zext' 'zext_ln60_2' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%state_matrix_addr_3 = getelementptr [144 x i8]* %state_matrix, i64 0, i64 %zext_ln60_2" [Chacha/chacha.cpp:60]   --->   Operation 54 'getelementptr' 'state_matrix_addr_3' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_3 : Operation 55 [2/2] (3.25ns)   --->   "%state_matrix_load_2 = load i8* %state_matrix_addr_3, align 1" [Chacha/chacha.cpp:60]   --->   Operation 55 'load' 'state_matrix_load_2' <Predicate = (!icmp_ln54)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 750> <RAM>

State 4 <SV = 3> <Delay = 6.50>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%empty_55 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 64, i64 8)"   --->   Operation 56 'speclooptripcount' 'empty_55' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [Chacha/chacha.cpp:56]   --->   Operation 57 'specregionbegin' 'tmp' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [Chacha/chacha.cpp:57]   --->   Operation 58 'specpipeline' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 59 [1/2] (3.25ns)   --->   "%state_matrix_load = load i8* %state_matrix_addr, align 1" [Chacha/chacha.cpp:59]   --->   Operation 59 'load' 'state_matrix_load' <Predicate = (!icmp_ln54)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 750> <RAM>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln59_4 = zext i11 %count1_2 to i64" [Chacha/chacha.cpp:59]   --->   Operation 60 'zext' 'zext_ln59_4' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%key_stream_addr = getelementptr [750 x i8]* %key_stream, i64 0, i64 %zext_ln59_4" [Chacha/chacha.cpp:59]   --->   Operation 61 'getelementptr' 'key_stream_addr' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (3.25ns)   --->   "store i8 %state_matrix_load, i8* %key_stream_addr, align 1" [Chacha/chacha.cpp:59]   --->   Operation 62 'store' <Predicate = (!icmp_ln54)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 750> <RAM>
ST_4 : Operation 63 [1/2] (3.25ns)   --->   "%state_matrix_load_2 = load i8* %state_matrix_addr_3, align 1" [Chacha/chacha.cpp:60]   --->   Operation 63 'load' 'state_matrix_load_2' <Predicate = (!icmp_ln54)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 750> <RAM>
ST_4 : Operation 64 [1/1] (1.63ns)   --->   "%add_ln60 = add i11 1, %count1_2" [Chacha/chacha.cpp:60]   --->   Operation 64 'add' 'add_ln60' <Predicate = (!icmp_ln54)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln60_1 = zext i11 %add_ln60 to i64" [Chacha/chacha.cpp:60]   --->   Operation 65 'zext' 'zext_ln60_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%key_stream_addr_1 = getelementptr [750 x i8]* %key_stream, i64 0, i64 %zext_ln60_1" [Chacha/chacha.cpp:60]   --->   Operation 66 'getelementptr' 'key_stream_addr_1' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (3.25ns)   --->   "store i8 %state_matrix_load_2, i8* %key_stream_addr_1, align 1" [Chacha/chacha.cpp:60]   --->   Operation 67 'store' <Predicate = (!icmp_ln54)> <Delay = 3.25> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 750> <RAM>
ST_4 : Operation 68 [1/1] (1.63ns)   --->   "%count1 = add i11 2, %count1_2" [Chacha/chacha.cpp:61]   --->   Operation 68 'add' 'count1' <Predicate = (!icmp_ln54)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "br i1 %and_ln62, label %.loopexit, label %hls_label_4_end" [Chacha/chacha.cpp:62]   --->   Operation 69 'br' <Predicate = (!icmp_ln54)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%empty_54 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp)" [Chacha/chacha.cpp:65]   --->   Operation 70 'specregionend' 'empty_54' <Predicate = (!icmp_ln54 & !and_ln62)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "br label %.preheader" [Chacha/chacha.cpp:56]   --->   Operation 71 'br' <Predicate = (!icmp_ln54 & !and_ln62)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "ret void" [Chacha/chacha.cpp:68]   --->   Operation 72 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('indvar_flatten17', Chacha/chacha.cpp:54) with incoming values : ('add_ln54', Chacha/chacha.cpp:54) [10]  (1.77 ns)

 <State 2>: 5.16ns
The critical path consists of the following:
	'phi' operation ('indvar_flatten', Chacha/chacha.cpp:55) with incoming values : ('select_ln55', Chacha/chacha.cpp:55) [12]  (0 ns)
	'icmp' operation ('icmp_ln55', Chacha/chacha.cpp:55) [23]  (1.43 ns)
	'or' operation ('or_ln59', Chacha/chacha.cpp:59) [31]  (0.978 ns)
	'select' operation ('select_ln59_3', Chacha/chacha.cpp:59) [33]  (1.02 ns)
	'add' operation ('k', Chacha/chacha.cpp:56) [67]  (1.74 ns)

 <State 3>: 8.68ns
The critical path consists of the following:
	'add' operation ('add_ln59', Chacha/chacha.cpp:59) [36]  (1.78 ns)
	'add' operation ('add_ln59_1', Chacha/chacha.cpp:59) [39]  (1.82 ns)
	'add' operation ('add_ln59_2', Chacha/chacha.cpp:59) [44]  (1.82 ns)
	'getelementptr' operation ('state_matrix_addr', Chacha/chacha.cpp:59) [46]  (0 ns)
	'load' operation ('state_matrix_load', Chacha/chacha.cpp:59) on array 'state_matrix' [47]  (3.25 ns)

 <State 4>: 6.51ns
The critical path consists of the following:
	'load' operation ('state_matrix_load', Chacha/chacha.cpp:59) on array 'state_matrix' [47]  (3.25 ns)
	'store' operation ('store_ln59', Chacha/chacha.cpp:59) of variable 'state_matrix_load', Chacha/chacha.cpp:59 on array 'key_stream' [50]  (3.25 ns)

 <State 5>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
