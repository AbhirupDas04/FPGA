

================================================================
== Vivado HLS Report for 'split_hw_8'
================================================================
* Date:           Mon Jul  3 14:34:46 2023

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        Test_Folder_Special
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     4.644|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  137|  137|  137|  137|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |             |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1     |  136|  136|        17|          -|          -|     8|    no    |
        | + Loop 1.1  |    4|    4|         2|          1|          1|     4|    yes   |
        | + Loop 1.2  |    8|    8|         2|          1|          1|     8|    yes   |
        +-------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 2
  Pipeline-0 : II = 1, D = 2, States = { 3 4 }
  Pipeline-1 : II = 1, D = 2, States = { 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 5 4 
4 --> 3 
5 --> 6 
6 --> 8 7 
7 --> 6 
8 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.76>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%str = alloca [8 x i8], align 1" [Chacha/chacha.cpp:30]   --->   Operation 9 'alloca' 'str' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_1 : Operation 10 [1/1] (1.76ns)   --->   "br label %1" [Chacha/chacha.cpp:32]   --->   Operation 10 'br' <Predicate = true> <Delay = 1.76>

State 2 <SV = 1> <Delay = 1.76>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%count_0 = phi i7 [ 0, %0 ], [ %count, %4 ]"   --->   Operation 11 'phi' 'count_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%i_0 = phi i4 [ 0, %0 ], [ %i, %4 ]"   --->   Operation 12 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (1.30ns)   --->   "%icmp_ln32 = icmp eq i4 %i_0, -8" [Chacha/chacha.cpp:32]   --->   Operation 13 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 14 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.73ns)   --->   "%i = add i4 %i_0, 1" [Chacha/chacha.cpp:32]   --->   Operation 15 'add' 'i' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "br i1 %icmp_ln32, label %5, label %2" [Chacha/chacha.cpp:32]   --->   Operation 16 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln32 = trunc i7 %count_0 to i6" [Chacha/chacha.cpp:32]   --->   Operation 17 'trunc' 'trunc_ln32' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%count2 = or i6 %trunc_ln32, 6" [Chacha/chacha.cpp:34]   --->   Operation 18 'or' 'count2' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i6 %count2 to i7" [Chacha/chacha.cpp:34]   --->   Operation 19 'zext' 'zext_ln34' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.76ns)   --->   "br label %3" [Chacha/chacha.cpp:35]   --->   Operation 20 'br' <Predicate = (!icmp_ln32)> <Delay = 1.76>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "ret void" [Chacha/chacha.cpp:48]   --->   Operation 21 'ret' <Predicate = (icmp_ln32)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 2.32>
ST_3 : Operation 22 [1/1] (0.00ns)   --->   "%count3_0 = phi i4 [ 0, %2 ], [ %count3, %hls_label_2 ]"   --->   Operation 22 'phi' 'count3_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 23 [1/1] (0.00ns)   --->   "%count2_0 = phi i7 [ %zext_ln34, %2 ], [ %count2_1, %hls_label_2 ]"   --->   Operation 23 'phi' 'count2_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%j_0 = phi i3 [ 0, %2 ], [ %j, %hls_label_2 ]"   --->   Operation 24 'phi' 'j_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (1.13ns)   --->   "%icmp_ln35 = icmp eq i3 %j_0, -4" [Chacha/chacha.cpp:35]   --->   Operation 25 'icmp' 'icmp_ln35' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%empty_46 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 4)"   --->   Operation 26 'speclooptripcount' 'empty_46' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (1.65ns)   --->   "%j = add i3 %j_0, 1" [Chacha/chacha.cpp:35]   --->   Operation 27 'add' 'j' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "br i1 %icmp_ln35, label %.preheader.preheader, label %hls_label_2" [Chacha/chacha.cpp:35]   --->   Operation 28 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%sext_ln35 = sext i7 %count2_0 to i8" [Chacha/chacha.cpp:35]   --->   Operation 29 'sext' 'sext_ln35' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%sext_ln37 = sext i7 %count2_0 to i64" [Chacha/chacha.cpp:37]   --->   Operation 30 'sext' 'sext_ln37' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%key_addr = getelementptr [64 x i8]* %key, i64 0, i64 %sext_ln37" [Chacha/chacha.cpp:37]   --->   Operation 31 'getelementptr' 'key_addr' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 32 [2/2] (2.32ns)   --->   "%key_load = load i8* %key_addr, align 1" [Chacha/chacha.cpp:37]   --->   Operation 32 'load' 'key_load' <Predicate = (!icmp_ln35)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%or_ln38_1 = or i8 %sext_ln35, 1" [Chacha/chacha.cpp:38]   --->   Operation 33 'or' 'or_ln38_1' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%sext_ln38 = sext i8 %or_ln38_1 to i64" [Chacha/chacha.cpp:38]   --->   Operation 34 'sext' 'sext_ln38' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%key_addr_1 = getelementptr [64 x i8]* %key, i64 0, i64 %sext_ln38" [Chacha/chacha.cpp:38]   --->   Operation 35 'getelementptr' 'key_addr_1' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (2.32ns)   --->   "%key_load_1 = load i8* %key_addr_1, align 1" [Chacha/chacha.cpp:38]   --->   Operation 36 'load' 'key_load_1' <Predicate = (!icmp_ln35)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_3 : Operation 37 [1/1] (1.87ns)   --->   "%count2_1 = add i7 -2, %count2_0" [Chacha/chacha.cpp:40]   --->   Operation 37 'add' 'count2_1' <Predicate = (!icmp_ln35)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.64>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln35 = trunc i4 %count3_0 to i3" [Chacha/chacha.cpp:35]   --->   Operation 38 'trunc' 'trunc_ln35' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str3)" [Chacha/chacha.cpp:35]   --->   Operation 39 'specregionbegin' 'tmp' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [Chacha/chacha.cpp:36]   --->   Operation 40 'specpipeline' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 41 [1/2] (2.32ns)   --->   "%key_load = load i8* %key_addr, align 1" [Chacha/chacha.cpp:37]   --->   Operation 41 'load' 'key_load' <Predicate = (!icmp_ln35)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln37 = zext i4 %count3_0 to i64" [Chacha/chacha.cpp:37]   --->   Operation 42 'zext' 'zext_ln37' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%str_addr = getelementptr inbounds [8 x i8]* %str, i64 0, i64 %zext_ln37" [Chacha/chacha.cpp:37]   --->   Operation 43 'getelementptr' 'str_addr' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (2.32ns)   --->   "store i8 %key_load, i8* %str_addr, align 1" [Chacha/chacha.cpp:37]   --->   Operation 44 'store' <Predicate = (!icmp_ln35)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 45 [1/2] (2.32ns)   --->   "%key_load_1 = load i8* %key_addr_1, align 1" [Chacha/chacha.cpp:38]   --->   Operation 45 'load' 'key_load_1' <Predicate = (!icmp_ln35)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%or_ln38 = or i3 %trunc_ln35, 1" [Chacha/chacha.cpp:38]   --->   Operation 46 'or' 'or_ln38' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln38 = zext i3 %or_ln38 to i64" [Chacha/chacha.cpp:38]   --->   Operation 47 'zext' 'zext_ln38' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%str_addr_1 = getelementptr inbounds [8 x i8]* %str, i64 0, i64 %zext_ln38" [Chacha/chacha.cpp:38]   --->   Operation 48 'getelementptr' 'str_addr_1' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (2.32ns)   --->   "store i8 %key_load_1, i8* %str_addr_1, align 1" [Chacha/chacha.cpp:38]   --->   Operation 49 'store' <Predicate = (!icmp_ln35)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_4 : Operation 50 [1/1] (1.73ns)   --->   "%count3 = add i4 2, %count3_0" [Chacha/chacha.cpp:39]   --->   Operation 50 'add' 'count3' <Predicate = (!icmp_ln35)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%empty_47 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str3, i32 %tmp)" [Chacha/chacha.cpp:41]   --->   Operation 51 'specregionend' 'empty_47' <Predicate = (!icmp_ln35)> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "br label %3" [Chacha/chacha.cpp:35]   --->   Operation 52 'br' <Predicate = (!icmp_ln35)> <Delay = 0.00>

State 5 <SV = 3> <Delay = 1.76>
ST_5 : Operation 53 [1/1] (0.00ns)   --->   "%tmp_s = call i7 @_ssdm_op_BitConcatenate.i7.i4.i3(i4 %i_0, i3 0)" [Chacha/chacha.cpp:44]   --->   Operation 53 'bitconcatenate' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i7 %tmp_s to i8" [Chacha/chacha.cpp:42]   --->   Operation 54 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 55 [1/1] (1.76ns)   --->   "br label %.preheader" [Chacha/chacha.cpp:42]   --->   Operation 55 'br' <Predicate = true> <Delay = 1.76>

State 6 <SV = 4> <Delay = 2.32>
ST_6 : Operation 56 [1/1] (0.00ns)   --->   "%j1_0 = phi i4 [ %j_1, %hls_label_3 ], [ 0, %.preheader.preheader ]"   --->   Operation 56 'phi' 'j1_0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 57 [1/1] (1.30ns)   --->   "%icmp_ln42 = icmp eq i4 %j1_0, -8" [Chacha/chacha.cpp:42]   --->   Operation 57 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.30> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%empty_48 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 58 'speclooptripcount' 'empty_48' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (1.73ns)   --->   "%j_1 = add i4 %j1_0, 1" [Chacha/chacha.cpp:42]   --->   Operation 59 'add' 'j_1' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "br i1 %icmp_ln42, label %4, label %hls_label_3" [Chacha/chacha.cpp:42]   --->   Operation 60 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln44 = zext i4 %j1_0 to i64" [Chacha/chacha.cpp:44]   --->   Operation 61 'zext' 'zext_ln44' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln44_1 = zext i4 %j1_0 to i8" [Chacha/chacha.cpp:44]   --->   Operation 62 'zext' 'zext_ln44_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 63 [1/1] (1.87ns)   --->   "%add_ln44 = add i8 %zext_ln42, %zext_ln44_1" [Chacha/chacha.cpp:44]   --->   Operation 63 'add' 'add_ln44' <Predicate = (!icmp_ln42)> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 64 [1/1] (0.00ns)   --->   "%str_addr_2 = getelementptr inbounds [8 x i8]* %str, i64 0, i64 %zext_ln44" [Chacha/chacha.cpp:44]   --->   Operation 64 'getelementptr' 'str_addr_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_6 : Operation 65 [2/2] (2.32ns)   --->   "%str_load = load i8* %str_addr_2, align 1" [Chacha/chacha.cpp:44]   --->   Operation 65 'load' 'str_load' <Predicate = (!icmp_ln42)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>

State 7 <SV = 5> <Delay = 4.64>
ST_7 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_4 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str4)" [Chacha/chacha.cpp:42]   --->   Operation 66 'specregionbegin' 'tmp_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1) nounwind" [Chacha/chacha.cpp:43]   --->   Operation 67 'specpipeline' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln44_2 = zext i8 %add_ln44 to i64" [Chacha/chacha.cpp:44]   --->   Operation 68 'zext' 'zext_ln44_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%new_arr_addr = getelementptr [64 x i8]* %new_arr, i64 0, i64 %zext_ln44_2" [Chacha/chacha.cpp:44]   --->   Operation 69 'getelementptr' 'new_arr_addr' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_7 : Operation 70 [1/2] (2.32ns)   --->   "%str_load = load i8* %str_addr_2, align 1" [Chacha/chacha.cpp:44]   --->   Operation 70 'load' 'str_load' <Predicate = (!icmp_ln42)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 71 [1/1] (2.32ns)   --->   "store i8 %str_load, i8* %new_arr_addr, align 1" [Chacha/chacha.cpp:44]   --->   Operation 71 'store' <Predicate = (!icmp_ln42)> <Delay = 2.32> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 64> <RAM>
ST_7 : Operation 72 [1/1] (0.00ns)   --->   "%empty_49 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str4, i32 %tmp_4)" [Chacha/chacha.cpp:45]   --->   Operation 72 'specregionend' 'empty_49' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_7 : Operation 73 [1/1] (0.00ns)   --->   "br label %.preheader" [Chacha/chacha.cpp:42]   --->   Operation 73 'br' <Predicate = (!icmp_ln42)> <Delay = 0.00>

State 8 <SV = 5> <Delay = 1.87>
ST_8 : Operation 74 [1/1] (1.87ns)   --->   "%count = add i7 %count_0, 8" [Chacha/chacha.cpp:46]   --->   Operation 74 'add' 'count' <Predicate = true> <Delay = 1.87> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 75 [1/1] (0.00ns)   --->   "br label %1" [Chacha/chacha.cpp:32]   --->   Operation 75 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('count') with incoming values : ('count', Chacha/chacha.cpp:46) [6]  (1.77 ns)

 <State 2>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('count3') with incoming values : ('count3', Chacha/chacha.cpp:39) [18]  (1.77 ns)

 <State 3>: 2.32ns
The critical path consists of the following:
	'phi' operation ('count2') with incoming values : ('zext_ln34', Chacha/chacha.cpp:34) ('count2', Chacha/chacha.cpp:40) [19]  (0 ns)
	'getelementptr' operation ('key_addr', Chacha/chacha.cpp:37) [31]  (0 ns)
	'load' operation ('key_load', Chacha/chacha.cpp:37) on array 'key' [32]  (2.32 ns)

 <State 4>: 4.64ns
The critical path consists of the following:
	'load' operation ('key_load', Chacha/chacha.cpp:37) on array 'key' [32]  (2.32 ns)
	'store' operation ('store_ln37', Chacha/chacha.cpp:37) of variable 'key_load', Chacha/chacha.cpp:37 on array 'str', Chacha/chacha.cpp:30 [35]  (2.32 ns)

 <State 5>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('j') with incoming values : ('j', Chacha/chacha.cpp:42) [53]  (1.77 ns)

 <State 6>: 2.32ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', Chacha/chacha.cpp:42) [53]  (0 ns)
	'getelementptr' operation ('str_addr_2', Chacha/chacha.cpp:44) [66]  (0 ns)
	'load' operation ('str_load', Chacha/chacha.cpp:44) on array 'str', Chacha/chacha.cpp:30 [67]  (2.32 ns)

 <State 7>: 4.64ns
The critical path consists of the following:
	'load' operation ('str_load', Chacha/chacha.cpp:44) on array 'str', Chacha/chacha.cpp:30 [67]  (2.32 ns)
	'store' operation ('store_ln44', Chacha/chacha.cpp:44) of variable 'str_load', Chacha/chacha.cpp:44 on array 'new_arr' [68]  (2.32 ns)

 <State 8>: 1.87ns
The critical path consists of the following:
	'add' operation ('count', Chacha/chacha.cpp:46) [72]  (1.87 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
