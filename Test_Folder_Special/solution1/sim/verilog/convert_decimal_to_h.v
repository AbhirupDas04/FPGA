// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module convert_decimal_to_h (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        hex_address0,
        hex_ce0,
        hex_we0,
        hex_d0,
        hex_address1,
        hex_ce1,
        hex_we1,
        hex_d1,
        p_read
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state4 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] hex_address0;
output   hex_ce0;
output   hex_we0;
output  [7:0] hex_d0;
output  [2:0] hex_address1;
output   hex_ce1;
output   hex_we1;
output  [7:0] hex_d1;
input  [31:0] p_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg hex_ce0;
reg hex_we0;
reg[2:0] hex_address1;
reg hex_ce1;
reg hex_we1;
reg[7:0] hex_d1;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] quo_0_reg_265;
reg   [3:0] i_0_reg_274;
wire   [0:0] icmp_ln231_fu_292_p2;
reg   [0:0] icmp_ln231_reg_554;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] i_fu_298_p2;
reg   [3:0] i_reg_558;
reg    ap_enable_reg_pp0_iter0;
wire  signed [31:0] sext_ln233_fu_360_p1;
wire   [31:0] rem_fu_376_p2;
reg   [31:0] rem_reg_568;
wire   [0:0] icmp_ln239_fu_382_p2;
reg   [0:0] icmp_ln239_reg_587;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg   [3:0] ap_phi_mux_i_0_phi_fu_278_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln239_fu_394_p1;
wire   [63:0] zext_ln254_fu_474_p1;
wire   [0:0] icmp_ln240_fu_399_p2;
wire   [0:0] icmp_ln241_fu_404_p2;
wire   [0:0] icmp_ln242_fu_409_p2;
wire   [0:0] icmp_ln243_fu_414_p2;
wire   [0:0] icmp_ln244_fu_419_p2;
wire   [0:0] icmp_ln245_fu_424_p2;
wire   [0:0] icmp_ln246_fu_429_p2;
wire   [0:0] icmp_ln247_fu_434_p2;
wire   [0:0] icmp_ln248_fu_439_p2;
wire   [0:0] icmp_ln249_fu_444_p2;
wire   [0:0] icmp_ln250_fu_449_p2;
wire   [0:0] icmp_ln251_fu_454_p2;
wire   [0:0] icmp_ln252_fu_459_p2;
wire   [0:0] icmp_ln253_fu_464_p2;
wire   [0:0] icmp_ln254_fu_469_p2;
wire   [63:0] zext_ln253_fu_479_p1;
wire   [63:0] zext_ln252_fu_484_p1;
wire   [63:0] zext_ln251_fu_489_p1;
wire   [63:0] zext_ln250_fu_494_p1;
wire   [63:0] zext_ln249_fu_499_p1;
wire   [63:0] zext_ln248_fu_504_p1;
wire   [63:0] zext_ln247_fu_509_p1;
wire   [63:0] zext_ln246_fu_514_p1;
wire   [63:0] zext_ln245_fu_519_p1;
wire   [63:0] zext_ln244_fu_524_p1;
wire   [63:0] zext_ln243_fu_529_p1;
wire   [63:0] zext_ln242_fu_534_p1;
wire   [63:0] zext_ln241_fu_539_p1;
wire   [63:0] zext_ln240_fu_544_p1;
wire   [31:0] sub_ln233_fu_312_p2;
wire   [27:0] tmp_s_fu_318_p4;
wire   [28:0] zext_ln233_fu_328_p1;
wire   [27:0] tmp_5_fu_338_p4;
wire   [0:0] tmp_12_fu_304_p3;
wire   [28:0] sub_ln233_1_fu_332_p2;
wire   [28:0] zext_ln233_1_fu_348_p1;
wire  signed [28:0] a_fu_352_p3;
wire   [27:0] trunc_ln236_fu_364_p1;
wire   [31:0] c_fu_368_p3;
wire   [3:0] sub_ln239_fu_388_p2;
wire   [3:0] grp_fu_286_p2;
wire    ap_CS_fsm_state4;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_524;
reg    ap_condition_527;
reg    ap_condition_530;
reg    ap_condition_533;
reg    ap_condition_536;
reg    ap_condition_539;
reg    ap_condition_542;
reg    ap_condition_545;
reg    ap_condition_548;
reg    ap_condition_551;
reg    ap_condition_554;
reg    ap_condition_557;
reg    ap_condition_560;
reg    ap_condition_510;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln231_reg_554 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_274 <= i_reg_558;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_274 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln231_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        quo_0_reg_265 <= sext_ln233_fu_360_p1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        quo_0_reg_265 <= p_read;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_558 <= i_fu_298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln231_reg_554 <= icmp_ln231_fu_292_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln231_fu_292_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln239_reg_587 <= icmp_ln239_fu_382_p2;
        rem_reg_568 <= rem_fu_376_p2;
    end
end

always @ (*) begin
    if ((icmp_ln231_fu_292_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln231_reg_554 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_278_p4 = i_reg_558;
    end else begin
        ap_phi_mux_i_0_phi_fu_278_p4 = i_0_reg_274;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_510)) begin
        if ((icmp_ln240_fu_399_p2 == 1'd1)) begin
            hex_address1 = zext_ln240_fu_544_p1;
        end else if (((icmp_ln241_fu_404_p2 == 1'd1) & (icmp_ln240_fu_399_p2 == 1'd0))) begin
            hex_address1 = zext_ln241_fu_539_p1;
        end else if ((1'b1 == ap_condition_560)) begin
            hex_address1 = zext_ln242_fu_534_p1;
        end else if ((1'b1 == ap_condition_557)) begin
            hex_address1 = zext_ln243_fu_529_p1;
        end else if ((1'b1 == ap_condition_554)) begin
            hex_address1 = zext_ln244_fu_524_p1;
        end else if ((1'b1 == ap_condition_551)) begin
            hex_address1 = zext_ln245_fu_519_p1;
        end else if ((1'b1 == ap_condition_548)) begin
            hex_address1 = zext_ln246_fu_514_p1;
        end else if ((1'b1 == ap_condition_545)) begin
            hex_address1 = zext_ln247_fu_509_p1;
        end else if ((1'b1 == ap_condition_542)) begin
            hex_address1 = zext_ln248_fu_504_p1;
        end else if ((1'b1 == ap_condition_539)) begin
            hex_address1 = zext_ln249_fu_499_p1;
        end else if ((1'b1 == ap_condition_536)) begin
            hex_address1 = zext_ln250_fu_494_p1;
        end else if ((1'b1 == ap_condition_533)) begin
            hex_address1 = zext_ln251_fu_489_p1;
        end else if ((1'b1 == ap_condition_530)) begin
            hex_address1 = zext_ln252_fu_484_p1;
        end else if ((1'b1 == ap_condition_527)) begin
            hex_address1 = zext_ln253_fu_479_p1;
        end else if ((1'b1 == ap_condition_524)) begin
            hex_address1 = zext_ln254_fu_474_p1;
        end else begin
            hex_address1 = 'bx;
        end
    end else begin
        hex_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hex_ce0 = 1'b1;
    end else begin
        hex_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln240_fu_399_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln241_fu_404_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln242_fu_409_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln243_fu_414_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln244_fu_419_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln245_fu_424_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln246_fu_429_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln247_fu_434_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln248_fu_439_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln249_fu_444_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln250_fu_449_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln251_fu_454_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln252_fu_459_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln253_fu_464_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln252_fu_459_p2 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln254_fu_469_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln253_fu_464_p2 == 1'd0) & (icmp_ln252_fu_459_p2 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        hex_ce1 = 1'b1;
    end else begin
        hex_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_510)) begin
        if ((icmp_ln240_fu_399_p2 == 1'd1)) begin
            hex_d1 = 8'd49;
        end else if (((icmp_ln241_fu_404_p2 == 1'd1) & (icmp_ln240_fu_399_p2 == 1'd0))) begin
            hex_d1 = 8'd50;
        end else if ((1'b1 == ap_condition_560)) begin
            hex_d1 = 8'd51;
        end else if ((1'b1 == ap_condition_557)) begin
            hex_d1 = 8'd52;
        end else if ((1'b1 == ap_condition_554)) begin
            hex_d1 = 8'd53;
        end else if ((1'b1 == ap_condition_551)) begin
            hex_d1 = 8'd54;
        end else if ((1'b1 == ap_condition_548)) begin
            hex_d1 = 8'd55;
        end else if ((1'b1 == ap_condition_545)) begin
            hex_d1 = 8'd56;
        end else if ((1'b1 == ap_condition_542)) begin
            hex_d1 = 8'd57;
        end else if ((1'b1 == ap_condition_539)) begin
            hex_d1 = 8'd97;
        end else if ((1'b1 == ap_condition_536)) begin
            hex_d1 = 8'd98;
        end else if ((1'b1 == ap_condition_533)) begin
            hex_d1 = 8'd99;
        end else if ((1'b1 == ap_condition_530)) begin
            hex_d1 = 8'd100;
        end else if ((1'b1 == ap_condition_527)) begin
            hex_d1 = 8'd101;
        end else if ((1'b1 == ap_condition_524)) begin
            hex_d1 = 8'd102;
        end else begin
            hex_d1 = 'bx;
        end
    end else begin
        hex_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln239_fu_382_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln231_fu_292_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hex_we0 = 1'b1;
    end else begin
        hex_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln240_fu_399_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln241_fu_404_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln242_fu_409_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln243_fu_414_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln244_fu_419_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln245_fu_424_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln246_fu_429_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln247_fu_434_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln248_fu_439_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln249_fu_444_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln250_fu_449_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln251_fu_454_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln252_fu_459_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln253_fu_464_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln252_fu_459_p2 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln254_fu_469_p2 == 1'd1) & (icmp_ln239_reg_587 == 1'd0) & (icmp_ln253_fu_464_p2 == 1'd0) & (icmp_ln252_fu_459_p2 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        hex_we1 = 1'b1;
    end else begin
        hex_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln231_fu_292_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln231_fu_292_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_fu_352_p3 = ((tmp_12_fu_304_p3[0:0] === 1'b1) ? sub_ln233_1_fu_332_p2 : zext_ln233_1_fu_348_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_510 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln239_reg_587 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_524 = ((icmp_ln254_fu_469_p2 == 1'd1) & (icmp_ln253_fu_464_p2 == 1'd0) & (icmp_ln252_fu_459_p2 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_527 = ((icmp_ln253_fu_464_p2 == 1'd1) & (icmp_ln252_fu_459_p2 == 1'd0) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_530 = ((icmp_ln252_fu_459_p2 == 1'd1) & (icmp_ln251_fu_454_p2 == 1'd0) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_533 = ((icmp_ln251_fu_454_p2 == 1'd1) & (icmp_ln250_fu_449_p2 == 1'd0) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_536 = ((icmp_ln250_fu_449_p2 == 1'd1) & (icmp_ln249_fu_444_p2 == 1'd0) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_539 = ((icmp_ln249_fu_444_p2 == 1'd1) & (icmp_ln248_fu_439_p2 == 1'd0) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_542 = ((icmp_ln248_fu_439_p2 == 1'd1) & (icmp_ln247_fu_434_p2 == 1'd0) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_545 = ((icmp_ln247_fu_434_p2 == 1'd1) & (icmp_ln246_fu_429_p2 == 1'd0) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_548 = ((icmp_ln246_fu_429_p2 == 1'd1) & (icmp_ln245_fu_424_p2 == 1'd0) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_551 = ((icmp_ln245_fu_424_p2 == 1'd1) & (icmp_ln244_fu_419_p2 == 1'd0) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_554 = ((icmp_ln244_fu_419_p2 == 1'd1) & (icmp_ln243_fu_414_p2 == 1'd0) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_557 = ((icmp_ln243_fu_414_p2 == 1'd1) & (icmp_ln242_fu_409_p2 == 1'd0) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_560 = ((icmp_ln242_fu_409_p2 == 1'd1) & (icmp_ln241_fu_404_p2 == 1'd0) & (icmp_ln240_fu_399_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign c_fu_368_p3 = {{trunc_ln236_fu_364_p1}, {4'd0}};

assign grp_fu_286_p2 = (4'd7 - i_0_reg_274);

assign hex_address0 = zext_ln239_fu_394_p1;

assign hex_d0 = 8'd48;

assign i_fu_298_p2 = (ap_phi_mux_i_0_phi_fu_278_p4 + 4'd1);

assign icmp_ln231_fu_292_p2 = ((ap_phi_mux_i_0_phi_fu_278_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln239_fu_382_p2 = ((quo_0_reg_265 == c_fu_368_p3) ? 1'b1 : 1'b0);

assign icmp_ln240_fu_399_p2 = ((rem_reg_568 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_404_p2 = ((rem_reg_568 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln242_fu_409_p2 = ((rem_reg_568 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln243_fu_414_p2 = ((rem_reg_568 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln244_fu_419_p2 = ((rem_reg_568 == 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln245_fu_424_p2 = ((rem_reg_568 == 32'd6) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_429_p2 = ((rem_reg_568 == 32'd7) ? 1'b1 : 1'b0);

assign icmp_ln247_fu_434_p2 = ((rem_reg_568 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_439_p2 = ((rem_reg_568 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_444_p2 = ((rem_reg_568 == 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln250_fu_449_p2 = ((rem_reg_568 == 32'd11) ? 1'b1 : 1'b0);

assign icmp_ln251_fu_454_p2 = ((rem_reg_568 == 32'd12) ? 1'b1 : 1'b0);

assign icmp_ln252_fu_459_p2 = ((rem_reg_568 == 32'd13) ? 1'b1 : 1'b0);

assign icmp_ln253_fu_464_p2 = ((rem_reg_568 == 32'd14) ? 1'b1 : 1'b0);

assign icmp_ln254_fu_469_p2 = ((rem_reg_568 == 32'd15) ? 1'b1 : 1'b0);

assign rem_fu_376_p2 = (quo_0_reg_265 - c_fu_368_p3);

assign sext_ln233_fu_360_p1 = a_fu_352_p3;

assign sub_ln233_1_fu_332_p2 = (29'd0 - zext_ln233_fu_328_p1);

assign sub_ln233_fu_312_p2 = (32'd0 - quo_0_reg_265);

assign sub_ln239_fu_388_p2 = (4'd7 - ap_phi_mux_i_0_phi_fu_278_p4);

assign tmp_12_fu_304_p3 = quo_0_reg_265[32'd31];

assign tmp_5_fu_338_p4 = {{quo_0_reg_265[31:4]}};

assign tmp_s_fu_318_p4 = {{sub_ln233_fu_312_p2[31:4]}};

assign trunc_ln236_fu_364_p1 = a_fu_352_p3[27:0];

assign zext_ln233_1_fu_348_p1 = tmp_5_fu_338_p4;

assign zext_ln233_fu_328_p1 = tmp_s_fu_318_p4;

assign zext_ln239_fu_394_p1 = sub_ln239_fu_388_p2;

assign zext_ln240_fu_544_p1 = grp_fu_286_p2;

assign zext_ln241_fu_539_p1 = grp_fu_286_p2;

assign zext_ln242_fu_534_p1 = grp_fu_286_p2;

assign zext_ln243_fu_529_p1 = grp_fu_286_p2;

assign zext_ln244_fu_524_p1 = grp_fu_286_p2;

assign zext_ln245_fu_519_p1 = grp_fu_286_p2;

assign zext_ln246_fu_514_p1 = grp_fu_286_p2;

assign zext_ln247_fu_509_p1 = grp_fu_286_p2;

assign zext_ln248_fu_504_p1 = grp_fu_286_p2;

assign zext_ln249_fu_499_p1 = grp_fu_286_p2;

assign zext_ln250_fu_494_p1 = grp_fu_286_p2;

assign zext_ln251_fu_489_p1 = grp_fu_286_p2;

assign zext_ln252_fu_484_p1 = grp_fu_286_p2;

assign zext_ln253_fu_479_p1 = grp_fu_286_p2;

assign zext_ln254_fu_474_p1 = grp_fu_286_p2;

endmodule //convert_decimal_to_h
