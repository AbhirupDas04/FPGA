-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity convert_decimal_to_h is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hex_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    hex_ce0 : OUT STD_LOGIC;
    hex_we0 : OUT STD_LOGIC;
    hex_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    hex_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    hex_ce1 : OUT STD_LOGIC;
    hex_we1 : OUT STD_LOGIC;
    hex_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_read : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of convert_decimal_to_h is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_30 : STD_LOGIC_VECTOR (7 downto 0) := "00110000";
    constant ap_const_lv8_66 : STD_LOGIC_VECTOR (7 downto 0) := "01100110";
    constant ap_const_lv8_65 : STD_LOGIC_VECTOR (7 downto 0) := "01100101";
    constant ap_const_lv8_64 : STD_LOGIC_VECTOR (7 downto 0) := "01100100";
    constant ap_const_lv8_63 : STD_LOGIC_VECTOR (7 downto 0) := "01100011";
    constant ap_const_lv8_62 : STD_LOGIC_VECTOR (7 downto 0) := "01100010";
    constant ap_const_lv8_61 : STD_LOGIC_VECTOR (7 downto 0) := "01100001";
    constant ap_const_lv8_39 : STD_LOGIC_VECTOR (7 downto 0) := "00111001";
    constant ap_const_lv8_38 : STD_LOGIC_VECTOR (7 downto 0) := "00111000";
    constant ap_const_lv8_37 : STD_LOGIC_VECTOR (7 downto 0) := "00110111";
    constant ap_const_lv8_36 : STD_LOGIC_VECTOR (7 downto 0) := "00110110";
    constant ap_const_lv8_35 : STD_LOGIC_VECTOR (7 downto 0) := "00110101";
    constant ap_const_lv8_34 : STD_LOGIC_VECTOR (7 downto 0) := "00110100";
    constant ap_const_lv8_33 : STD_LOGIC_VECTOR (7 downto 0) := "00110011";
    constant ap_const_lv8_32 : STD_LOGIC_VECTOR (7 downto 0) := "00110010";
    constant ap_const_lv8_31 : STD_LOGIC_VECTOR (7 downto 0) := "00110001";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv29_0 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal quo_0_reg_265 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_reg_274 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln231_fu_292_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln231_reg_554 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_298_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_558 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal sext_ln233_fu_360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_fu_376_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rem_reg_568 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln237_fu_382_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln237_reg_587 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_phi_mux_i_0_phi_fu_278_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln237_fu_394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln252_fu_474_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln238_fu_399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln240_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln241_fu_414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln242_fu_419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln243_fu_424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_fu_429_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln245_fu_434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln246_fu_439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln247_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln248_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln249_fu_454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln250_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln251_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln252_fu_469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln251_fu_479_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln250_fu_484_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln249_fu_489_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln248_fu_494_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln247_fu_499_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln246_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln245_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln244_fu_514_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln243_fu_519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln242_fu_524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln241_fu_529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln240_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln239_fu_539_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln238_fu_544_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln233_fu_312_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_318_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln233_fu_328_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_5_fu_338_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_fu_304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln233_1_fu_332_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln233_1_fu_348_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal a_fu_352_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln234_fu_364_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal c_fu_368_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln237_fu_388_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_286_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_524 : BOOLEAN;
    signal ap_condition_527 : BOOLEAN;
    signal ap_condition_530 : BOOLEAN;
    signal ap_condition_533 : BOOLEAN;
    signal ap_condition_536 : BOOLEAN;
    signal ap_condition_539 : BOOLEAN;
    signal ap_condition_542 : BOOLEAN;
    signal ap_condition_545 : BOOLEAN;
    signal ap_condition_548 : BOOLEAN;
    signal ap_condition_551 : BOOLEAN;
    signal ap_condition_554 : BOOLEAN;
    signal ap_condition_557 : BOOLEAN;
    signal ap_condition_560 : BOOLEAN;
    signal ap_condition_510 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln231_reg_554 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                i_0_reg_274 <= i_reg_558;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_274 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    quo_0_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln231_fu_292_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                quo_0_reg_265 <= sext_ln233_fu_360_p1;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                quo_0_reg_265 <= p_read;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_reg_558 <= i_fu_298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln231_reg_554 <= icmp_ln231_fu_292_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln231_fu_292_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln237_reg_587 <= icmp_ln237_fu_382_p2;
                rem_reg_568 <= rem_fu_376_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln231_fu_292_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln231_fu_292_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln231_fu_292_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    a_fu_352_p3 <= 
        sub_ln233_1_fu_332_p2 when (tmp_12_fu_304_p3(0) = '1') else 
        zext_ln233_1_fu_348_p1;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_510_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln237_reg_587, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_510 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_524_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2, icmp_ln248_fu_449_p2, icmp_ln249_fu_454_p2, icmp_ln250_fu_459_p2, icmp_ln251_fu_464_p2, icmp_ln252_fu_469_p2)
    begin
                ap_condition_524 <= ((icmp_ln252_fu_469_p2 = ap_const_lv1_1) and (icmp_ln251_fu_464_p2 = ap_const_lv1_0) and (icmp_ln250_fu_459_p2 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_527_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2, icmp_ln248_fu_449_p2, icmp_ln249_fu_454_p2, icmp_ln250_fu_459_p2, icmp_ln251_fu_464_p2)
    begin
                ap_condition_527 <= ((icmp_ln251_fu_464_p2 = ap_const_lv1_1) and (icmp_ln250_fu_459_p2 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_530_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2, icmp_ln248_fu_449_p2, icmp_ln249_fu_454_p2, icmp_ln250_fu_459_p2)
    begin
                ap_condition_530 <= ((icmp_ln250_fu_459_p2 = ap_const_lv1_1) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_533_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2, icmp_ln248_fu_449_p2, icmp_ln249_fu_454_p2)
    begin
                ap_condition_533 <= ((icmp_ln249_fu_454_p2 = ap_const_lv1_1) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_536_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2, icmp_ln248_fu_449_p2)
    begin
                ap_condition_536 <= ((icmp_ln248_fu_449_p2 = ap_const_lv1_1) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_539_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2)
    begin
                ap_condition_539 <= ((icmp_ln247_fu_444_p2 = ap_const_lv1_1) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_542_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2)
    begin
                ap_condition_542 <= ((icmp_ln246_fu_439_p2 = ap_const_lv1_1) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_545_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2)
    begin
                ap_condition_545 <= ((icmp_ln245_fu_434_p2 = ap_const_lv1_1) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_548_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2)
    begin
                ap_condition_548 <= ((icmp_ln244_fu_429_p2 = ap_const_lv1_1) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_551_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2)
    begin
                ap_condition_551 <= ((icmp_ln243_fu_424_p2 = ap_const_lv1_1) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_554_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2)
    begin
                ap_condition_554 <= ((icmp_ln242_fu_419_p2 = ap_const_lv1_1) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_557_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2)
    begin
                ap_condition_557 <= ((icmp_ln241_fu_414_p2 = ap_const_lv1_1) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_560_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2)
    begin
                ap_condition_560 <= ((icmp_ln240_fu_409_p2 = ap_const_lv1_1) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln231_fu_292_p2)
    begin
        if ((icmp_ln231_fu_292_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i_0_phi_fu_278_p4_assign_proc : process(i_0_reg_274, icmp_ln231_reg_554, ap_CS_fsm_pp0_stage0, i_reg_558, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln231_reg_554 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_i_0_phi_fu_278_p4 <= i_reg_558;
        else 
            ap_phi_mux_i_0_phi_fu_278_p4 <= i_0_reg_274;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_368_p3 <= (trunc_ln234_fu_364_p1 & ap_const_lv4_0);
    grp_fu_286_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(i_0_reg_274));
    hex_address0 <= zext_ln237_fu_394_p1(3 - 1 downto 0);

    hex_address1_assign_proc : process(zext_ln252_fu_474_p1, icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, zext_ln251_fu_479_p1, zext_ln250_fu_484_p1, zext_ln249_fu_489_p1, zext_ln248_fu_494_p1, zext_ln247_fu_499_p1, zext_ln246_fu_504_p1, zext_ln245_fu_509_p1, zext_ln244_fu_514_p1, zext_ln243_fu_519_p1, zext_ln242_fu_524_p1, zext_ln241_fu_529_p1, zext_ln240_fu_534_p1, zext_ln239_fu_539_p1, zext_ln238_fu_544_p1, ap_condition_524, ap_condition_527, ap_condition_530, ap_condition_533, ap_condition_536, ap_condition_539, ap_condition_542, ap_condition_545, ap_condition_548, ap_condition_551, ap_condition_554, ap_condition_557, ap_condition_560, ap_condition_510)
    begin
        if ((ap_const_boolean_1 = ap_condition_510)) then
            if ((icmp_ln238_fu_399_p2 = ap_const_lv1_1)) then 
                hex_address1 <= zext_ln238_fu_544_p1(3 - 1 downto 0);
            elsif (((icmp_ln239_fu_404_p2 = ap_const_lv1_1) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0))) then 
                hex_address1 <= zext_ln239_fu_539_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_560)) then 
                hex_address1 <= zext_ln240_fu_534_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_557)) then 
                hex_address1 <= zext_ln241_fu_529_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_554)) then 
                hex_address1 <= zext_ln242_fu_524_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_551)) then 
                hex_address1 <= zext_ln243_fu_519_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_548)) then 
                hex_address1 <= zext_ln244_fu_514_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_545)) then 
                hex_address1 <= zext_ln245_fu_509_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_542)) then 
                hex_address1 <= zext_ln246_fu_504_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_539)) then 
                hex_address1 <= zext_ln247_fu_499_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_536)) then 
                hex_address1 <= zext_ln248_fu_494_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_533)) then 
                hex_address1 <= zext_ln249_fu_489_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_530)) then 
                hex_address1 <= zext_ln250_fu_484_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_527)) then 
                hex_address1 <= zext_ln251_fu_479_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_524)) then 
                hex_address1 <= zext_ln252_fu_474_p1(3 - 1 downto 0);
            else 
                hex_address1 <= "XXX";
            end if;
        else 
            hex_address1 <= "XXX";
        end if; 
    end process;


    hex_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hex_ce0 <= ap_const_logic_1;
        else 
            hex_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    hex_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln237_reg_587, ap_enable_reg_pp0_iter1, icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2, icmp_ln248_fu_449_p2, icmp_ln249_fu_454_p2, icmp_ln250_fu_459_p2, icmp_ln251_fu_464_p2, icmp_ln252_fu_469_p2)
    begin
        if ((((icmp_ln238_fu_399_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln239_fu_404_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln240_fu_409_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln241_fu_414_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln242_fu_419_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln243_fu_424_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln244_fu_429_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln245_fu_434_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln246_fu_439_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln247_fu_444_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln248_fu_449_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln249_fu_454_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln250_fu_459_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln251_fu_464_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln250_fu_459_p2 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln252_fu_469_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln251_fu_464_p2 = ap_const_lv1_0) and (icmp_ln250_fu_459_p2 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            hex_ce1 <= ap_const_logic_1;
        else 
            hex_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    hex_d0 <= ap_const_lv8_30;

    hex_d1_assign_proc : process(icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, ap_condition_524, ap_condition_527, ap_condition_530, ap_condition_533, ap_condition_536, ap_condition_539, ap_condition_542, ap_condition_545, ap_condition_548, ap_condition_551, ap_condition_554, ap_condition_557, ap_condition_560, ap_condition_510)
    begin
        if ((ap_const_boolean_1 = ap_condition_510)) then
            if ((icmp_ln238_fu_399_p2 = ap_const_lv1_1)) then 
                hex_d1 <= ap_const_lv8_31;
            elsif (((icmp_ln239_fu_404_p2 = ap_const_lv1_1) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0))) then 
                hex_d1 <= ap_const_lv8_32;
            elsif ((ap_const_boolean_1 = ap_condition_560)) then 
                hex_d1 <= ap_const_lv8_33;
            elsif ((ap_const_boolean_1 = ap_condition_557)) then 
                hex_d1 <= ap_const_lv8_34;
            elsif ((ap_const_boolean_1 = ap_condition_554)) then 
                hex_d1 <= ap_const_lv8_35;
            elsif ((ap_const_boolean_1 = ap_condition_551)) then 
                hex_d1 <= ap_const_lv8_36;
            elsif ((ap_const_boolean_1 = ap_condition_548)) then 
                hex_d1 <= ap_const_lv8_37;
            elsif ((ap_const_boolean_1 = ap_condition_545)) then 
                hex_d1 <= ap_const_lv8_38;
            elsif ((ap_const_boolean_1 = ap_condition_542)) then 
                hex_d1 <= ap_const_lv8_39;
            elsif ((ap_const_boolean_1 = ap_condition_539)) then 
                hex_d1 <= ap_const_lv8_61;
            elsif ((ap_const_boolean_1 = ap_condition_536)) then 
                hex_d1 <= ap_const_lv8_62;
            elsif ((ap_const_boolean_1 = ap_condition_533)) then 
                hex_d1 <= ap_const_lv8_63;
            elsif ((ap_const_boolean_1 = ap_condition_530)) then 
                hex_d1 <= ap_const_lv8_64;
            elsif ((ap_const_boolean_1 = ap_condition_527)) then 
                hex_d1 <= ap_const_lv8_65;
            elsif ((ap_const_boolean_1 = ap_condition_524)) then 
                hex_d1 <= ap_const_lv8_66;
            else 
                hex_d1 <= "XXXXXXXX";
            end if;
        else 
            hex_d1 <= "XXXXXXXX";
        end if; 
    end process;


    hex_we0_assign_proc : process(icmp_ln231_fu_292_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, icmp_ln237_fu_382_p2)
    begin
        if (((icmp_ln237_fu_382_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln231_fu_292_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            hex_we0 <= ap_const_logic_1;
        else 
            hex_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hex_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln237_reg_587, ap_enable_reg_pp0_iter1, icmp_ln238_fu_399_p2, icmp_ln239_fu_404_p2, icmp_ln240_fu_409_p2, icmp_ln241_fu_414_p2, icmp_ln242_fu_419_p2, icmp_ln243_fu_424_p2, icmp_ln244_fu_429_p2, icmp_ln245_fu_434_p2, icmp_ln246_fu_439_p2, icmp_ln247_fu_444_p2, icmp_ln248_fu_449_p2, icmp_ln249_fu_454_p2, icmp_ln250_fu_459_p2, icmp_ln251_fu_464_p2, icmp_ln252_fu_469_p2)
    begin
        if ((((icmp_ln238_fu_399_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln239_fu_404_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln240_fu_409_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln241_fu_414_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln242_fu_419_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln243_fu_424_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln244_fu_429_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln245_fu_434_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln246_fu_439_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln247_fu_444_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln248_fu_449_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln249_fu_454_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln250_fu_459_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln251_fu_464_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln250_fu_459_p2 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln252_fu_469_p2 = ap_const_lv1_1) and (icmp_ln237_reg_587 = ap_const_lv1_0) and (icmp_ln251_fu_464_p2 = ap_const_lv1_0) and (icmp_ln250_fu_459_p2 = ap_const_lv1_0) and (icmp_ln249_fu_454_p2 = ap_const_lv1_0) and (icmp_ln248_fu_449_p2 = ap_const_lv1_0) and (icmp_ln247_fu_444_p2 = ap_const_lv1_0) and (icmp_ln246_fu_439_p2 = ap_const_lv1_0) and (icmp_ln245_fu_434_p2 = ap_const_lv1_0) and (icmp_ln244_fu_429_p2 = ap_const_lv1_0) and (icmp_ln243_fu_424_p2 = ap_const_lv1_0) and (icmp_ln242_fu_419_p2 = ap_const_lv1_0) and (icmp_ln241_fu_414_p2 = ap_const_lv1_0) and (icmp_ln240_fu_409_p2 = ap_const_lv1_0) and (icmp_ln239_fu_404_p2 = ap_const_lv1_0) and (icmp_ln238_fu_399_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            hex_we1 <= ap_const_logic_1;
        else 
            hex_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_298_p2 <= std_logic_vector(unsigned(ap_phi_mux_i_0_phi_fu_278_p4) + unsigned(ap_const_lv4_1));
    icmp_ln231_fu_292_p2 <= "1" when (ap_phi_mux_i_0_phi_fu_278_p4 = ap_const_lv4_8) else "0";
    icmp_ln237_fu_382_p2 <= "1" when (quo_0_reg_265 = c_fu_368_p3) else "0";
    icmp_ln238_fu_399_p2 <= "1" when (rem_reg_568 = ap_const_lv32_1) else "0";
    icmp_ln239_fu_404_p2 <= "1" when (rem_reg_568 = ap_const_lv32_2) else "0";
    icmp_ln240_fu_409_p2 <= "1" when (rem_reg_568 = ap_const_lv32_3) else "0";
    icmp_ln241_fu_414_p2 <= "1" when (rem_reg_568 = ap_const_lv32_4) else "0";
    icmp_ln242_fu_419_p2 <= "1" when (rem_reg_568 = ap_const_lv32_5) else "0";
    icmp_ln243_fu_424_p2 <= "1" when (rem_reg_568 = ap_const_lv32_6) else "0";
    icmp_ln244_fu_429_p2 <= "1" when (rem_reg_568 = ap_const_lv32_7) else "0";
    icmp_ln245_fu_434_p2 <= "1" when (rem_reg_568 = ap_const_lv32_8) else "0";
    icmp_ln246_fu_439_p2 <= "1" when (rem_reg_568 = ap_const_lv32_9) else "0";
    icmp_ln247_fu_444_p2 <= "1" when (rem_reg_568 = ap_const_lv32_A) else "0";
    icmp_ln248_fu_449_p2 <= "1" when (rem_reg_568 = ap_const_lv32_B) else "0";
    icmp_ln249_fu_454_p2 <= "1" when (rem_reg_568 = ap_const_lv32_C) else "0";
    icmp_ln250_fu_459_p2 <= "1" when (rem_reg_568 = ap_const_lv32_D) else "0";
    icmp_ln251_fu_464_p2 <= "1" when (rem_reg_568 = ap_const_lv32_E) else "0";
    icmp_ln252_fu_469_p2 <= "1" when (rem_reg_568 = ap_const_lv32_F) else "0";
    rem_fu_376_p2 <= std_logic_vector(unsigned(quo_0_reg_265) - unsigned(c_fu_368_p3));
        sext_ln233_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_fu_352_p3),32));

    sub_ln233_1_fu_332_p2 <= std_logic_vector(unsigned(ap_const_lv29_0) - unsigned(zext_ln233_fu_328_p1));
    sub_ln233_fu_312_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(quo_0_reg_265));
    sub_ln237_fu_388_p2 <= std_logic_vector(unsigned(ap_const_lv4_7) - unsigned(ap_phi_mux_i_0_phi_fu_278_p4));
    tmp_12_fu_304_p3 <= quo_0_reg_265(31 downto 31);
    tmp_5_fu_338_p4 <= quo_0_reg_265(31 downto 4);
    tmp_s_fu_318_p4 <= sub_ln233_fu_312_p2(31 downto 4);
    trunc_ln234_fu_364_p1 <= a_fu_352_p3(28 - 1 downto 0);
    zext_ln233_1_fu_348_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_338_p4),29));
    zext_ln233_fu_328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_318_p4),29));
    zext_ln237_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln237_fu_388_p2),64));
    zext_ln238_fu_544_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln239_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln240_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln241_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln242_fu_524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln243_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln244_fu_514_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln245_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln246_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln247_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln248_fu_494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln249_fu_489_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln250_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln251_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
    zext_ln252_fu_474_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_286_p2),64));
end behav;
