// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "split_hw_8.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic split_hw_8::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic split_hw_8::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> split_hw_8::ap_ST_fsm_state1 = "1";
const sc_lv<6> split_hw_8::ap_ST_fsm_state2 = "10";
const sc_lv<6> split_hw_8::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<6> split_hw_8::ap_ST_fsm_state5 = "1000";
const sc_lv<6> split_hw_8::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<6> split_hw_8::ap_ST_fsm_state8 = "100000";
const bool split_hw_8::ap_const_boolean_1 = true;
const sc_lv<32> split_hw_8::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> split_hw_8::ap_const_lv32_1 = "1";
const sc_lv<1> split_hw_8::ap_const_lv1_0 = "0";
const sc_lv<32> split_hw_8::ap_const_lv32_2 = "10";
const bool split_hw_8::ap_const_boolean_0 = false;
const sc_lv<32> split_hw_8::ap_const_lv32_3 = "11";
const sc_lv<32> split_hw_8::ap_const_lv32_4 = "100";
const sc_lv<32> split_hw_8::ap_const_lv32_5 = "101";
const sc_lv<1> split_hw_8::ap_const_lv1_1 = "1";
const sc_lv<7> split_hw_8::ap_const_lv7_0 = "0000000";
const sc_lv<4> split_hw_8::ap_const_lv4_0 = "0000";
const sc_lv<3> split_hw_8::ap_const_lv3_0 = "000";
const sc_lv<4> split_hw_8::ap_const_lv4_8 = "1000";
const sc_lv<4> split_hw_8::ap_const_lv4_1 = "1";
const sc_lv<6> split_hw_8::ap_const_lv6_6 = "110";
const sc_lv<3> split_hw_8::ap_const_lv3_4 = "100";
const sc_lv<3> split_hw_8::ap_const_lv3_1 = "1";
const sc_lv<8> split_hw_8::ap_const_lv8_1 = "1";
const sc_lv<7> split_hw_8::ap_const_lv7_7E = "1111110";
const sc_lv<4> split_hw_8::ap_const_lv4_2 = "10";
const sc_lv<7> split_hw_8::ap_const_lv7_8 = "1000";

split_hw_8::split_hw_8(sc_module_name name) : sc_module(name), mVcdFile(0) {
    str_U = new split_hw_8_str("str_U");
    str_U->clk(ap_clk);
    str_U->reset(ap_rst);
    str_U->address0(str_address0);
    str_U->ce0(str_ce0);
    str_U->we0(str_we0);
    str_U->d0(key_q0);
    str_U->q0(str_q0);
    str_U->address1(str_address1);
    str_U->ce1(str_ce1);
    str_U->we1(str_we1);
    str_U->d1(key_q1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln44_fu_323_p2);
    sensitive << ( zext_ln42_reg_381 );
    sensitive << ( zext_ln44_1_fu_319_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln35_fu_226_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state6);
    sensitive << ( icmp_ln42_fu_302_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln32_fu_200_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln32_fu_200_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_count2_1_fu_258_p2);
    sensitive << ( count2_0_reg_169 );

    SC_METHOD(thread_count2_fu_216_p2);
    sensitive << ( trunc_ln32_fu_212_p1 );

    SC_METHOD(thread_count3_fu_284_p2);
    sensitive << ( count3_0_reg_157 );

    SC_METHOD(thread_count_fu_332_p2);
    sensitive << ( count_0_reg_133 );

    SC_METHOD(thread_i_fu_206_p2);
    sensitive << ( i_0_reg_145 );

    SC_METHOD(thread_icmp_ln32_fu_200_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_145 );

    SC_METHOD(thread_icmp_ln35_fu_226_p2);
    sensitive << ( j_0_reg_178 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln42_fu_302_p2);
    sensitive << ( j1_0_reg_189 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_j_1_fu_308_p2);
    sensitive << ( j1_0_reg_189 );

    SC_METHOD(thread_j_fu_232_p2);
    sensitive << ( j_0_reg_178 );

    SC_METHOD(thread_key_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( sext_ln37_fu_242_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_key_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln38_fu_253_p1 );

    SC_METHOD(thread_key_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_key_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_new_arr_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln44_2_fu_328_p1 );

    SC_METHOD(thread_new_arr_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_new_arr_d0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( str_q0 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_new_arr_we0);
    sensitive << ( icmp_ln42_reg_386 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_or_ln38_1_fu_247_p2);
    sensitive << ( sext_ln35_fu_238_p1 );

    SC_METHOD(thread_or_ln38_fu_273_p2);
    sensitive << ( trunc_ln35_fu_264_p1 );

    SC_METHOD(thread_sext_ln35_fu_238_p1);
    sensitive << ( count2_0_reg_169 );

    SC_METHOD(thread_sext_ln37_fu_242_p1);
    sensitive << ( count2_0_reg_169 );

    SC_METHOD(thread_sext_ln38_fu_253_p1);
    sensitive << ( or_ln38_1_fu_247_p2 );

    SC_METHOD(thread_str_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln37_fu_268_p1 );
    sensitive << ( zext_ln44_fu_314_p1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_str_address1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln38_fu_279_p1 );

    SC_METHOD(thread_str_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_str_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_str_we0);
    sensitive << ( icmp_ln35_reg_352 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_str_we1);
    sensitive << ( icmp_ln35_reg_352 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_tmp_s_fu_290_p3);
    sensitive << ( i_0_reg_145 );

    SC_METHOD(thread_trunc_ln32_fu_212_p1);
    sensitive << ( count_0_reg_133 );

    SC_METHOD(thread_trunc_ln35_fu_264_p1);
    sensitive << ( count3_0_reg_157 );

    SC_METHOD(thread_zext_ln34_fu_222_p1);
    sensitive << ( count2_fu_216_p2 );

    SC_METHOD(thread_zext_ln37_fu_268_p1);
    sensitive << ( count3_0_reg_157 );

    SC_METHOD(thread_zext_ln38_fu_279_p1);
    sensitive << ( or_ln38_fu_273_p2 );

    SC_METHOD(thread_zext_ln42_fu_298_p1);
    sensitive << ( tmp_s_fu_290_p3 );

    SC_METHOD(thread_zext_ln44_1_fu_319_p1);
    sensitive << ( j1_0_reg_189 );

    SC_METHOD(thread_zext_ln44_2_fu_328_p1);
    sensitive << ( add_ln44_reg_395 );

    SC_METHOD(thread_zext_ln44_fu_314_p1);
    sensitive << ( j1_0_reg_189 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln32_fu_200_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln35_fu_226_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln42_fu_302_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );

    ap_CS_fsm = "000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "split_hw_8_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, key_address0, "(port)key_address0");
    sc_trace(mVcdFile, key_ce0, "(port)key_ce0");
    sc_trace(mVcdFile, key_q0, "(port)key_q0");
    sc_trace(mVcdFile, key_address1, "(port)key_address1");
    sc_trace(mVcdFile, key_ce1, "(port)key_ce1");
    sc_trace(mVcdFile, key_q1, "(port)key_q1");
    sc_trace(mVcdFile, new_arr_address0, "(port)new_arr_address0");
    sc_trace(mVcdFile, new_arr_ce0, "(port)new_arr_ce0");
    sc_trace(mVcdFile, new_arr_we0, "(port)new_arr_we0");
    sc_trace(mVcdFile, new_arr_d0, "(port)new_arr_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, count3_0_reg_157, "count3_0_reg_157");
    sc_trace(mVcdFile, count2_0_reg_169, "count2_0_reg_169");
    sc_trace(mVcdFile, j_0_reg_178, "j_0_reg_178");
    sc_trace(mVcdFile, j1_0_reg_189, "j1_0_reg_189");
    sc_trace(mVcdFile, icmp_ln32_fu_200_p2, "icmp_ln32_fu_200_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_206_p2, "i_fu_206_p2");
    sc_trace(mVcdFile, i_reg_342, "i_reg_342");
    sc_trace(mVcdFile, zext_ln34_fu_222_p1, "zext_ln34_fu_222_p1");
    sc_trace(mVcdFile, icmp_ln35_fu_226_p2, "icmp_ln35_fu_226_p2");
    sc_trace(mVcdFile, icmp_ln35_reg_352, "icmp_ln35_reg_352");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_232_p2, "j_fu_232_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, count2_1_fu_258_p2, "count2_1_fu_258_p2");
    sc_trace(mVcdFile, count3_fu_284_p2, "count3_fu_284_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, zext_ln42_fu_298_p1, "zext_ln42_fu_298_p1");
    sc_trace(mVcdFile, zext_ln42_reg_381, "zext_ln42_reg_381");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln42_fu_302_p2, "icmp_ln42_fu_302_p2");
    sc_trace(mVcdFile, icmp_ln42_reg_386, "icmp_ln42_reg_386");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter0, "ap_block_state6_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter1, "ap_block_state7_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, j_1_fu_308_p2, "j_1_fu_308_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, add_ln44_fu_323_p2, "add_ln44_fu_323_p2");
    sc_trace(mVcdFile, add_ln44_reg_395, "add_ln44_reg_395");
    sc_trace(mVcdFile, count_fu_332_p2, "count_fu_332_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state6, "ap_condition_pp1_exit_iter0_state6");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, str_address0, "str_address0");
    sc_trace(mVcdFile, str_ce0, "str_ce0");
    sc_trace(mVcdFile, str_we0, "str_we0");
    sc_trace(mVcdFile, str_q0, "str_q0");
    sc_trace(mVcdFile, str_address1, "str_address1");
    sc_trace(mVcdFile, str_ce1, "str_ce1");
    sc_trace(mVcdFile, str_we1, "str_we1");
    sc_trace(mVcdFile, count_0_reg_133, "count_0_reg_133");
    sc_trace(mVcdFile, i_0_reg_145, "i_0_reg_145");
    sc_trace(mVcdFile, sext_ln37_fu_242_p1, "sext_ln37_fu_242_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, sext_ln38_fu_253_p1, "sext_ln38_fu_253_p1");
    sc_trace(mVcdFile, zext_ln37_fu_268_p1, "zext_ln37_fu_268_p1");
    sc_trace(mVcdFile, zext_ln38_fu_279_p1, "zext_ln38_fu_279_p1");
    sc_trace(mVcdFile, zext_ln44_fu_314_p1, "zext_ln44_fu_314_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, zext_ln44_2_fu_328_p1, "zext_ln44_2_fu_328_p1");
    sc_trace(mVcdFile, trunc_ln32_fu_212_p1, "trunc_ln32_fu_212_p1");
    sc_trace(mVcdFile, count2_fu_216_p2, "count2_fu_216_p2");
    sc_trace(mVcdFile, sext_ln35_fu_238_p1, "sext_ln35_fu_238_p1");
    sc_trace(mVcdFile, or_ln38_1_fu_247_p2, "or_ln38_1_fu_247_p2");
    sc_trace(mVcdFile, trunc_ln35_fu_264_p1, "trunc_ln35_fu_264_p1");
    sc_trace(mVcdFile, or_ln38_fu_273_p2, "or_ln38_fu_273_p2");
    sc_trace(mVcdFile, tmp_s_fu_290_p3, "tmp_s_fu_290_p3");
    sc_trace(mVcdFile, zext_ln44_1_fu_319_p1, "zext_ln44_1_fu_319_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
#endif

    }
}

split_hw_8::~split_hw_8() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete str_U;
}

void split_hw_8::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state6.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state6.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state6.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_226_p2.read()))) {
        count2_0_reg_169 = count2_1_fu_258_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_0))) {
        count2_0_reg_169 = zext_ln34_fu_222_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_reg_352.read()))) {
        count3_0_reg_157 = count3_fu_284_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_0))) {
        count3_0_reg_157 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        count_0_reg_133 = count_fu_332_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        count_0_reg_133 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_0_reg_145 = i_reg_342.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_145 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j1_0_reg_189 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_fu_302_p2.read()))) {
        j1_0_reg_189 = j_1_fu_308_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_fu_226_p2.read()))) {
        j_0_reg_178 = j_fu_232_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_0))) {
        j_0_reg_178 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_fu_302_p2.read()))) {
        add_ln44_reg_395 = add_ln44_fu_323_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_342 = i_fu_206_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln35_reg_352 = icmp_ln35_fu_226_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln42_reg_386 = icmp_ln42_fu_302_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        zext_ln42_reg_381 = zext_ln42_fu_298_p1.read();
    }
}

void split_hw_8::thread_add_ln44_fu_323_p2() {
    add_ln44_fu_323_p2 = (!zext_ln42_reg_381.read().is_01() || !zext_ln44_1_fu_319_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln42_reg_381.read()) + sc_biguint<8>(zext_ln44_1_fu_319_p1.read()));
}

void split_hw_8::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void split_hw_8::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void split_hw_8::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void split_hw_8::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void split_hw_8::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void split_hw_8::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[5];
}

void split_hw_8::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_state6_pp1_stage0_iter0() {
    ap_block_state6_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_block_state7_pp1_stage0_iter1() {
    ap_block_state7_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void split_hw_8::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln35_fu_226_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void split_hw_8::thread_ap_condition_pp1_exit_iter0_state6() {
    if (esl_seteq<1,1,1>(icmp_ln42_fu_302_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state6 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state6 = ap_const_logic_0;
    }
}

void split_hw_8::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void split_hw_8::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void split_hw_8::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void split_hw_8::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void split_hw_8::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void split_hw_8::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void split_hw_8::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void split_hw_8::thread_count2_1_fu_258_p2() {
    count2_1_fu_258_p2 = (!ap_const_lv7_7E.is_01() || !count2_0_reg_169.read().is_01())? sc_lv<7>(): (sc_bigint<7>(ap_const_lv7_7E) + sc_bigint<7>(count2_0_reg_169.read()));
}

void split_hw_8::thread_count2_fu_216_p2() {
    count2_fu_216_p2 = (trunc_ln32_fu_212_p1.read() | ap_const_lv6_6);
}

void split_hw_8::thread_count3_fu_284_p2() {
    count3_fu_284_p2 = (!ap_const_lv4_2.is_01() || !count3_0_reg_157.read().is_01())? sc_lv<4>(): (sc_biguint<4>(ap_const_lv4_2) + sc_biguint<4>(count3_0_reg_157.read()));
}

void split_hw_8::thread_count_fu_332_p2() {
    count_fu_332_p2 = (!count_0_reg_133.read().is_01() || !ap_const_lv7_8.is_01())? sc_lv<7>(): (sc_biguint<7>(count_0_reg_133.read()) + sc_biguint<7>(ap_const_lv7_8));
}

void split_hw_8::thread_i_fu_206_p2() {
    i_fu_206_p2 = (!i_0_reg_145.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_0_reg_145.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void split_hw_8::thread_icmp_ln32_fu_200_p2() {
    icmp_ln32_fu_200_p2 = (!i_0_reg_145.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_145.read() == ap_const_lv4_8);
}

void split_hw_8::thread_icmp_ln35_fu_226_p2() {
    icmp_ln35_fu_226_p2 = (!j_0_reg_178.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_178.read() == ap_const_lv3_4);
}

void split_hw_8::thread_icmp_ln42_fu_302_p2() {
    icmp_ln42_fu_302_p2 = (!j1_0_reg_189.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j1_0_reg_189.read() == ap_const_lv4_8);
}

void split_hw_8::thread_j_1_fu_308_p2() {
    j_1_fu_308_p2 = (!j1_0_reg_189.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j1_0_reg_189.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void split_hw_8::thread_j_fu_232_p2() {
    j_fu_232_p2 = (!j_0_reg_178.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_178.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void split_hw_8::thread_key_address0() {
    key_address0 =  (sc_lv<6>) (sext_ln37_fu_242_p1.read());
}

void split_hw_8::thread_key_address1() {
    key_address1 =  (sc_lv<6>) (sext_ln38_fu_253_p1.read());
}

void split_hw_8::thread_key_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        key_ce0 = ap_const_logic_1;
    } else {
        key_ce0 = ap_const_logic_0;
    }
}

void split_hw_8::thread_key_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        key_ce1 = ap_const_logic_1;
    } else {
        key_ce1 = ap_const_logic_0;
    }
}

void split_hw_8::thread_new_arr_address0() {
    new_arr_address0 =  (sc_lv<6>) (zext_ln44_2_fu_328_p1.read());
}

void split_hw_8::thread_new_arr_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        new_arr_ce0 = ap_const_logic_1;
    } else {
        new_arr_ce0 = ap_const_logic_0;
    }
}

void split_hw_8::thread_new_arr_d0() {
    new_arr_d0 = str_q0.read();
}

void split_hw_8::thread_new_arr_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln42_reg_386.read()))) {
        new_arr_we0 = ap_const_logic_1;
    } else {
        new_arr_we0 = ap_const_logic_0;
    }
}

void split_hw_8::thread_or_ln38_1_fu_247_p2() {
    or_ln38_1_fu_247_p2 = (sext_ln35_fu_238_p1.read() | ap_const_lv8_1);
}

void split_hw_8::thread_or_ln38_fu_273_p2() {
    or_ln38_fu_273_p2 = (trunc_ln35_fu_264_p1.read() | ap_const_lv3_1);
}

void split_hw_8::thread_sext_ln35_fu_238_p1() {
    sext_ln35_fu_238_p1 = esl_sext<8,7>(count2_0_reg_169.read());
}

void split_hw_8::thread_sext_ln37_fu_242_p1() {
    sext_ln37_fu_242_p1 = esl_sext<64,7>(count2_0_reg_169.read());
}

void split_hw_8::thread_sext_ln38_fu_253_p1() {
    sext_ln38_fu_253_p1 = esl_sext<64,8>(or_ln38_1_fu_247_p2.read());
}

void split_hw_8::thread_str_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        str_address0 =  (sc_lv<3>) (zext_ln44_fu_314_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        str_address0 =  (sc_lv<3>) (zext_ln37_fu_268_p1.read());
    } else {
        str_address0 = "XXX";
    }
}

void split_hw_8::thread_str_address1() {
    str_address1 =  (sc_lv<3>) (zext_ln38_fu_279_p1.read());
}

void split_hw_8::thread_str_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        str_ce0 = ap_const_logic_1;
    } else {
        str_ce0 = ap_const_logic_0;
    }
}

void split_hw_8::thread_str_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        str_ce1 = ap_const_logic_1;
    } else {
        str_ce1 = ap_const_logic_0;
    }
}

void split_hw_8::thread_str_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_reg_352.read()))) {
        str_we0 = ap_const_logic_1;
    } else {
        str_we0 = ap_const_logic_0;
    }
}

void split_hw_8::thread_str_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln35_reg_352.read()))) {
        str_we1 = ap_const_logic_1;
    } else {
        str_we1 = ap_const_logic_0;
    }
}

void split_hw_8::thread_tmp_s_fu_290_p3() {
    tmp_s_fu_290_p3 = esl_concat<4,3>(i_0_reg_145.read(), ap_const_lv3_0);
}

void split_hw_8::thread_trunc_ln32_fu_212_p1() {
    trunc_ln32_fu_212_p1 = count_0_reg_133.read().range(6-1, 0);
}

void split_hw_8::thread_trunc_ln35_fu_264_p1() {
    trunc_ln35_fu_264_p1 = count3_0_reg_157.read().range(3-1, 0);
}

void split_hw_8::thread_zext_ln34_fu_222_p1() {
    zext_ln34_fu_222_p1 = esl_zext<7,6>(count2_fu_216_p2.read());
}

void split_hw_8::thread_zext_ln37_fu_268_p1() {
    zext_ln37_fu_268_p1 = esl_zext<64,4>(count3_0_reg_157.read());
}

void split_hw_8::thread_zext_ln38_fu_279_p1() {
    zext_ln38_fu_279_p1 = esl_zext<64,3>(or_ln38_fu_273_p2.read());
}

void split_hw_8::thread_zext_ln42_fu_298_p1() {
    zext_ln42_fu_298_p1 = esl_zext<8,7>(tmp_s_fu_290_p3.read());
}

void split_hw_8::thread_zext_ln44_1_fu_319_p1() {
    zext_ln44_1_fu_319_p1 = esl_zext<8,4>(j1_0_reg_189.read());
}

void split_hw_8::thread_zext_ln44_2_fu_328_p1() {
    zext_ln44_2_fu_328_p1 = esl_zext<64,8>(add_ln44_reg_395.read());
}

void split_hw_8::thread_zext_ln44_fu_314_p1() {
    zext_ln44_fu_314_p1 = esl_zext<64,4>(j1_0_reg_189.read());
}

void split_hw_8::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln32_fu_200_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln35_fu_226_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln35_fu_226_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln42_fu_302_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln42_fu_302_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

