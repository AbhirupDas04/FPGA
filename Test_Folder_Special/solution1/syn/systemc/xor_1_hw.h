// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _xor_1_hw_HH_
#define _xor_1_hw_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "convert_hex_to_binar.h"

namespace ap_rtl {

struct xor_1_hw : public sc_module {
    // Port declarations 42
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > state_matrix_address0;
    sc_out< sc_logic > state_matrix_ce0;
    sc_out< sc_logic > state_matrix_we0;
    sc_out< sc_lv<8> > state_matrix_d0;
    sc_in< sc_lv<8> > state_matrix_q0;
    sc_in< sc_lv<5> > index1;
    sc_in< sc_lv<6> > index2;
    sc_out< sc_lv<3> > arr1_address0;
    sc_out< sc_logic > arr1_ce0;
    sc_out< sc_logic > arr1_we0;
    sc_out< sc_lv<8> > arr1_d0;
    sc_in< sc_lv<8> > arr1_q0;
    sc_out< sc_lv<3> > arr2_address0;
    sc_out< sc_logic > arr2_ce0;
    sc_out< sc_logic > arr2_we0;
    sc_out< sc_lv<8> > arr2_d0;
    sc_in< sc_lv<8> > arr2_q0;
    sc_out< sc_lv<5> > arr3_address0;
    sc_out< sc_logic > arr3_ce0;
    sc_out< sc_logic > arr3_we0;
    sc_out< sc_lv<8> > arr3_d0;
    sc_in< sc_lv<8> > arr3_q0;
    sc_out< sc_lv<5> > arr3_address1;
    sc_out< sc_logic > arr3_ce1;
    sc_out< sc_logic > arr3_we1;
    sc_out< sc_lv<8> > arr3_d1;
    sc_in< sc_lv<8> > arr3_q1;
    sc_out< sc_lv<5> > arr4_address0;
    sc_out< sc_logic > arr4_ce0;
    sc_out< sc_logic > arr4_we0;
    sc_out< sc_lv<8> > arr4_d0;
    sc_in< sc_lv<8> > arr4_q0;
    sc_out< sc_lv<5> > arr4_address1;
    sc_out< sc_logic > arr4_ce1;
    sc_out< sc_logic > arr4_we1;
    sc_out< sc_lv<8> > arr4_d1;


    // Module declarations
    xor_1_hw(sc_module_name name);
    SC_HAS_PROCESS(xor_1_hw);

    ~xor_1_hw();

    sc_trace_file* mVcdFile;

    convert_hex_to_binar* grp_convert_hex_to_binar_fu_322;
    convert_hex_to_binar* grp_convert_hex_to_binar_fu_330;
    sc_signal< sc_lv<13> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > i_0_reg_264;
    sc_signal< sc_lv<4> > i1_0_reg_276;
    sc_signal< sc_lv<6> > i2_0_reg_288;
    sc_signal< sc_lv<4> > i_0_i_reg_299;
    sc_signal< sc_lv<4> > i_0_i_reg_299_pp3_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage0;
    sc_signal< bool > ap_block_state12_pp3_stage0_iter0;
    sc_signal< bool > ap_block_state14_pp3_stage0_iter1;
    sc_signal< bool > ap_block_pp3_stage0_11001;
    sc_signal< sc_lv<4> > i3_0_reg_311;
    sc_signal< sc_lv<8> > add_ln344_fu_370_p2;
    sc_signal< sc_lv<8> > add_ln344_reg_792;
    sc_signal< sc_lv<1> > icmp_ln342_fu_376_p2;
    sc_signal< sc_lv<1> > icmp_ln342_reg_798;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > i_fu_382_p2;
    sc_signal< sc_lv<4> > i_reg_802;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<8> > add_ln349_fu_426_p2;
    sc_signal< sc_lv<8> > add_ln349_reg_812;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln347_fu_432_p2;
    sc_signal< sc_lv<1> > icmp_ln347_reg_817;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state5_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<4> > i_1_fu_438_p2;
    sc_signal< sc_lv<4> > i_1_reg_821;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > icmp_ln355_fu_463_p2;
    sc_signal< sc_lv<1> > icmp_ln355_reg_831;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< bool > ap_block_state9_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state10_pp2_stage0_iter1;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<6> > i_2_fu_469_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<5> > arr3_addr_reg_840;
    sc_signal< sc_lv<1> > icmp_ln114_fu_496_p2;
    sc_signal< sc_lv<1> > icmp_ln114_reg_851;
    sc_signal< sc_lv<1> > icmp_ln114_reg_851_pp3_iter1_reg;
    sc_signal< sc_lv<4> > i_3_fu_502_p2;
    sc_signal< sc_lv<4> > i_3_reg_855;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter0;
    sc_signal< sc_lv<5> > shl_ln_fu_512_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_860;
    sc_signal< sc_lv<1> > grp_fu_338_p2;
    sc_signal< sc_lv<1> > icmp_ln116_reg_876;
    sc_signal< sc_logic > ap_CS_fsm_pp3_stage1;
    sc_signal< bool > ap_block_state13_pp3_stage1_iter0;
    sc_signal< bool > ap_block_state15_pp3_stage1_iter1;
    sc_signal< bool > ap_block_pp3_stage1_11001;
    sc_signal< sc_lv<1> > grp_fu_344_p2;
    sc_signal< sc_lv<1> > icmp_ln117_reg_884;
    sc_signal< sc_lv<1> > icmp_ln118_reg_902;
    sc_signal< sc_logic > ap_enable_reg_pp3_iter1;
    sc_signal< sc_lv<1> > icmp_ln119_reg_909;
    sc_signal< sc_lv<1> > xor_ln118_fu_598_p2;
    sc_signal< sc_lv<1> > xor_ln118_reg_918;
    sc_signal< sc_lv<7> > select_ln118_1_fu_610_p3;
    sc_signal< sc_lv<7> > select_ln118_1_reg_924;
    sc_signal< sc_lv<1> > icmp_ln367_fu_757_p2;
    sc_signal< sc_lv<1> > icmp_ln367_reg_929;
    sc_signal< sc_logic > ap_CS_fsm_pp4_stage0;
    sc_signal< bool > ap_block_state17_pp4_stage0_iter0;
    sc_signal< bool > ap_block_state18_pp4_stage0_iter1;
    sc_signal< bool > ap_block_pp4_stage0_11001;
    sc_signal< sc_lv<4> > i_4_fu_763_p2;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter0;
    sc_signal< sc_lv<8> > add_ln369_fu_778_p2;
    sc_signal< sc_lv<8> > add_ln369_reg_938;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state5;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_ap_ready;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_ap_done;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_ap_ready;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_ap_done;
    sc_signal< bool > ap_block_state8_on_subcall_done;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state9;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< bool > ap_block_pp3_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp3_exit_iter0_state12;
    sc_signal< bool > ap_block_pp3_stage1_subdone;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< bool > ap_block_pp4_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp4_exit_iter0_state17;
    sc_signal< sc_logic > ap_enable_reg_pp4_iter1;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_ap_start;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_ap_idle;
    sc_signal< sc_lv<3> > grp_convert_hex_to_binar_fu_322_hex_address0;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_hex_ce0;
    sc_signal< sc_lv<5> > grp_convert_hex_to_binar_fu_322_bin_address0;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_bin_ce0;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_bin_we0;
    sc_signal< sc_lv<8> > grp_convert_hex_to_binar_fu_322_bin_d0;
    sc_signal< sc_lv<5> > grp_convert_hex_to_binar_fu_322_bin_address1;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_bin_ce1;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_bin_we1;
    sc_signal< sc_lv<8> > grp_convert_hex_to_binar_fu_322_bin_d1;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_ap_start;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_ap_idle;
    sc_signal< sc_lv<3> > grp_convert_hex_to_binar_fu_330_hex_address0;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_hex_ce0;
    sc_signal< sc_lv<5> > grp_convert_hex_to_binar_fu_330_bin_address0;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_bin_ce0;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_bin_we0;
    sc_signal< sc_lv<8> > grp_convert_hex_to_binar_fu_330_bin_d0;
    sc_signal< sc_lv<5> > grp_convert_hex_to_binar_fu_330_bin_address1;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_bin_ce1;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_bin_we1;
    sc_signal< sc_lv<8> > grp_convert_hex_to_binar_fu_330_bin_d1;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_phi_fu_268_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_i1_0_phi_fu_280_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_i_phi_fu_303_p4;
    sc_signal< bool > ap_block_pp3_stage0;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_322_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_convert_hex_to_binar_fu_330_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln344_4_fu_397_p1;
    sc_signal< sc_lv<64> > zext_ln344_fu_402_p1;
    sc_signal< sc_lv<64> > zext_ln349_4_fu_453_p1;
    sc_signal< sc_lv<64> > zext_ln349_fu_458_p1;
    sc_signal< sc_lv<64> > zext_ln357_fu_475_p1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<64> > zext_ln116_fu_520_p1;
    sc_signal< sc_lv<64> > zext_ln117_fu_531_p1;
    sc_signal< sc_lv<64> > zext_ln118_fu_541_p1;
    sc_signal< bool > ap_block_pp3_stage1;
    sc_signal< sc_lv<64> > zext_ln119_fu_551_p1;
    sc_signal< sc_lv<64> > zext_ln119_1_fu_618_p1;
    sc_signal< sc_lv<64> > zext_ln369_fu_769_p1;
    sc_signal< bool > ap_block_pp4_stage0;
    sc_signal< sc_lv<64> > zext_ln369_2_fu_783_p1;
    sc_signal< sc_lv<8> > zext_ln118_1_fu_752_p1;
    sc_signal< sc_lv<8> > select_ln357_fu_487_p3;
    sc_signal< sc_lv<4> > trunc_ln344_fu_350_p1;
    sc_signal< sc_lv<7> > tmp_6_fu_358_p3;
    sc_signal< sc_lv<8> > zext_ln344_2_fu_366_p1;
    sc_signal< sc_lv<8> > zext_ln344_1_fu_354_p1;
    sc_signal< sc_lv<8> > zext_ln344_3_fu_388_p1;
    sc_signal< sc_lv<8> > add_ln344_1_fu_392_p2;
    sc_signal< sc_lv<4> > trunc_ln349_fu_407_p1;
    sc_signal< sc_lv<7> > tmp_9_fu_414_p3;
    sc_signal< sc_lv<8> > zext_ln349_2_fu_422_p1;
    sc_signal< sc_lv<8> > zext_ln349_1_fu_410_p1;
    sc_signal< sc_lv<8> > zext_ln349_3_fu_444_p1;
    sc_signal< sc_lv<8> > add_ln349_1_fu_448_p2;
    sc_signal< sc_lv<1> > icmp_ln357_fu_481_p2;
    sc_signal< sc_lv<3> > trunc_ln116_fu_508_p1;
    sc_signal< sc_lv<5> > or_ln117_fu_525_p2;
    sc_signal< sc_lv<5> > or_ln118_fu_536_p2;
    sc_signal< sc_lv<5> > or_ln119_fu_546_p2;
    sc_signal< sc_lv<1> > and_ln117_fu_580_p2;
    sc_signal< sc_lv<1> > and_ln118_fu_584_p2;
    sc_signal< sc_lv<7> > select_ln119_fu_556_p3;
    sc_signal< sc_lv<7> > select_ln155_fu_572_p3;
    sc_signal< sc_lv<1> > and_ln118_1_fu_604_p2;
    sc_signal< sc_lv<7> > select_ln123_fu_564_p3;
    sc_signal< sc_lv<7> > select_ln118_fu_590_p3;
    sc_signal< sc_lv<1> > xor_ln117_fu_658_p2;
    sc_signal< sc_lv<1> > and_ln117_1_fu_663_p2;
    sc_signal< sc_lv<1> > and_ln118_2_fu_668_p2;
    sc_signal< sc_lv<7> > select_ln129_fu_623_p3;
    sc_signal< sc_lv<1> > and_ln118_3_fu_680_p2;
    sc_signal< sc_lv<7> > select_ln133_fu_630_p3;
    sc_signal< sc_lv<7> > select_ln118_2_fu_673_p3;
    sc_signal< sc_lv<1> > xor_ln116_fu_693_p2;
    sc_signal< sc_lv<1> > and_ln117_2_fu_698_p2;
    sc_signal< sc_lv<1> > and_ln118_4_fu_703_p2;
    sc_signal< sc_lv<7> > select_ln141_fu_637_p3;
    sc_signal< sc_lv<7> > select_ln118_3_fu_685_p3;
    sc_signal< sc_lv<1> > and_ln118_5_fu_716_p2;
    sc_signal< sc_lv<7> > select_ln145_fu_644_p3;
    sc_signal< sc_lv<7> > select_ln118_4_fu_708_p3;
    sc_signal< sc_lv<1> > or_ln117_1_fu_729_p2;
    sc_signal< sc_lv<1> > xor_ln117_1_fu_733_p2;
    sc_signal< sc_lv<1> > and_ln118_6_fu_739_p2;
    sc_signal< sc_lv<7> > select_ln151_fu_651_p3;
    sc_signal< sc_lv<7> > select_ln118_5_fu_721_p3;
    sc_signal< sc_lv<7> > select_ln118_6_fu_744_p3;
    sc_signal< sc_lv<8> > zext_ln369_1_fu_774_p1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<13> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    sc_signal< sc_logic > ap_idle_pp3;
    sc_signal< sc_logic > ap_enable_pp3;
    sc_signal< sc_logic > ap_idle_pp4;
    sc_signal< sc_logic > ap_enable_pp4;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<13> ap_ST_fsm_state1;
    static const sc_lv<13> ap_ST_fsm_pp0_stage0;
    static const sc_lv<13> ap_ST_fsm_state4;
    static const sc_lv<13> ap_ST_fsm_pp1_stage0;
    static const sc_lv<13> ap_ST_fsm_state7;
    static const sc_lv<13> ap_ST_fsm_state8;
    static const sc_lv<13> ap_ST_fsm_pp2_stage0;
    static const sc_lv<13> ap_ST_fsm_state11;
    static const sc_lv<13> ap_ST_fsm_pp3_stage0;
    static const sc_lv<13> ap_ST_fsm_pp3_stage1;
    static const sc_lv<13> ap_ST_fsm_state16;
    static const sc_lv<13> ap_ST_fsm_pp4_stage0;
    static const sc_lv<13> ap_ST_fsm_state19;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<8> ap_const_lv8_30;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_31;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<7> ap_const_lv7_30;
    static const sc_lv<7> ap_const_lv7_31;
    static const sc_lv<7> ap_const_lv7_32;
    static const sc_lv<7> ap_const_lv7_33;
    static const sc_lv<7> ap_const_lv7_65;
    static const sc_lv<7> ap_const_lv7_66;
    static const sc_lv<7> ap_const_lv7_34;
    static const sc_lv<7> ap_const_lv7_35;
    static const sc_lv<7> ap_const_lv7_36;
    static const sc_lv<7> ap_const_lv7_37;
    static const sc_lv<7> ap_const_lv7_38;
    static const sc_lv<7> ap_const_lv7_39;
    static const sc_lv<7> ap_const_lv7_61;
    static const sc_lv<7> ap_const_lv7_62;
    static const sc_lv<7> ap_const_lv7_63;
    static const sc_lv<7> ap_const_lv7_64;
    static const sc_lv<32> ap_const_lv32_C;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln344_1_fu_392_p2();
    void thread_add_ln344_fu_370_p2();
    void thread_add_ln349_1_fu_448_p2();
    void thread_add_ln349_fu_426_p2();
    void thread_add_ln369_fu_778_p2();
    void thread_and_ln117_1_fu_663_p2();
    void thread_and_ln117_2_fu_698_p2();
    void thread_and_ln117_fu_580_p2();
    void thread_and_ln118_1_fu_604_p2();
    void thread_and_ln118_2_fu_668_p2();
    void thread_and_ln118_3_fu_680_p2();
    void thread_and_ln118_4_fu_703_p2();
    void thread_and_ln118_5_fu_716_p2();
    void thread_and_ln118_6_fu_739_p2();
    void thread_and_ln118_fu_584_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_pp3_stage0();
    void thread_ap_CS_fsm_pp3_stage1();
    void thread_ap_CS_fsm_pp4_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_pp3_stage0();
    void thread_ap_block_pp3_stage0_11001();
    void thread_ap_block_pp3_stage0_subdone();
    void thread_ap_block_pp3_stage1();
    void thread_ap_block_pp3_stage1_11001();
    void thread_ap_block_pp3_stage1_subdone();
    void thread_ap_block_pp4_stage0();
    void thread_ap_block_pp4_stage0_11001();
    void thread_ap_block_pp4_stage0_subdone();
    void thread_ap_block_state10_pp2_stage0_iter1();
    void thread_ap_block_state12_pp3_stage0_iter0();
    void thread_ap_block_state13_pp3_stage1_iter0();
    void thread_ap_block_state14_pp3_stage0_iter1();
    void thread_ap_block_state15_pp3_stage1_iter1();
    void thread_ap_block_state17_pp4_stage0_iter0();
    void thread_ap_block_state18_pp4_stage0_iter1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state5_pp1_stage0_iter0();
    void thread_ap_block_state6_pp1_stage0_iter1();
    void thread_ap_block_state8_on_subcall_done();
    void thread_ap_block_state9_pp2_stage0_iter0();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state5();
    void thread_ap_condition_pp2_exit_iter0_state9();
    void thread_ap_condition_pp3_exit_iter0_state12();
    void thread_ap_condition_pp4_exit_iter0_state17();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_enable_pp3();
    void thread_ap_enable_pp4();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_idle_pp3();
    void thread_ap_idle_pp4();
    void thread_ap_phi_mux_i1_0_phi_fu_280_p4();
    void thread_ap_phi_mux_i_0_i_phi_fu_303_p4();
    void thread_ap_phi_mux_i_0_phi_fu_268_p4();
    void thread_ap_ready();
    void thread_arr1_address0();
    void thread_arr1_ce0();
    void thread_arr1_d0();
    void thread_arr1_we0();
    void thread_arr2_address0();
    void thread_arr2_ce0();
    void thread_arr2_d0();
    void thread_arr2_we0();
    void thread_arr3_address0();
    void thread_arr3_address1();
    void thread_arr3_ce0();
    void thread_arr3_ce1();
    void thread_arr3_d0();
    void thread_arr3_d1();
    void thread_arr3_we0();
    void thread_arr3_we1();
    void thread_arr4_address0();
    void thread_arr4_address1();
    void thread_arr4_ce0();
    void thread_arr4_ce1();
    void thread_arr4_d0();
    void thread_arr4_d1();
    void thread_arr4_we0();
    void thread_arr4_we1();
    void thread_grp_convert_hex_to_binar_fu_322_ap_start();
    void thread_grp_convert_hex_to_binar_fu_330_ap_start();
    void thread_grp_fu_338_p2();
    void thread_grp_fu_344_p2();
    void thread_i_1_fu_438_p2();
    void thread_i_2_fu_469_p2();
    void thread_i_3_fu_502_p2();
    void thread_i_4_fu_763_p2();
    void thread_i_fu_382_p2();
    void thread_icmp_ln114_fu_496_p2();
    void thread_icmp_ln342_fu_376_p2();
    void thread_icmp_ln347_fu_432_p2();
    void thread_icmp_ln355_fu_463_p2();
    void thread_icmp_ln357_fu_481_p2();
    void thread_icmp_ln367_fu_757_p2();
    void thread_or_ln117_1_fu_729_p2();
    void thread_or_ln117_fu_525_p2();
    void thread_or_ln118_fu_536_p2();
    void thread_or_ln119_fu_546_p2();
    void thread_select_ln118_1_fu_610_p3();
    void thread_select_ln118_2_fu_673_p3();
    void thread_select_ln118_3_fu_685_p3();
    void thread_select_ln118_4_fu_708_p3();
    void thread_select_ln118_5_fu_721_p3();
    void thread_select_ln118_6_fu_744_p3();
    void thread_select_ln118_fu_590_p3();
    void thread_select_ln119_fu_556_p3();
    void thread_select_ln123_fu_564_p3();
    void thread_select_ln129_fu_623_p3();
    void thread_select_ln133_fu_630_p3();
    void thread_select_ln141_fu_637_p3();
    void thread_select_ln145_fu_644_p3();
    void thread_select_ln151_fu_651_p3();
    void thread_select_ln155_fu_572_p3();
    void thread_select_ln357_fu_487_p3();
    void thread_shl_ln_fu_512_p3();
    void thread_state_matrix_address0();
    void thread_state_matrix_ce0();
    void thread_state_matrix_d0();
    void thread_state_matrix_we0();
    void thread_tmp_6_fu_358_p3();
    void thread_tmp_9_fu_414_p3();
    void thread_trunc_ln116_fu_508_p1();
    void thread_trunc_ln344_fu_350_p1();
    void thread_trunc_ln349_fu_407_p1();
    void thread_xor_ln116_fu_693_p2();
    void thread_xor_ln117_1_fu_733_p2();
    void thread_xor_ln117_fu_658_p2();
    void thread_xor_ln118_fu_598_p2();
    void thread_zext_ln116_fu_520_p1();
    void thread_zext_ln117_fu_531_p1();
    void thread_zext_ln118_1_fu_752_p1();
    void thread_zext_ln118_fu_541_p1();
    void thread_zext_ln119_1_fu_618_p1();
    void thread_zext_ln119_fu_551_p1();
    void thread_zext_ln344_1_fu_354_p1();
    void thread_zext_ln344_2_fu_366_p1();
    void thread_zext_ln344_3_fu_388_p1();
    void thread_zext_ln344_4_fu_397_p1();
    void thread_zext_ln344_fu_402_p1();
    void thread_zext_ln349_1_fu_410_p1();
    void thread_zext_ln349_2_fu_422_p1();
    void thread_zext_ln349_3_fu_444_p1();
    void thread_zext_ln349_4_fu_453_p1();
    void thread_zext_ln349_fu_458_p1();
    void thread_zext_ln357_fu_475_p1();
    void thread_zext_ln369_1_fu_774_p1();
    void thread_zext_ln369_2_fu_783_p1();
    void thread_zext_ln369_fu_769_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
