// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "xor_1_hw.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xor_1_hw::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xor_1_hw::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> xor_1_hw::ap_ST_fsm_state1 = "1";
const sc_lv<13> xor_1_hw::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<13> xor_1_hw::ap_ST_fsm_state4 = "100";
const sc_lv<13> xor_1_hw::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_state7 = "10000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_state8 = "100000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_pp2_stage0 = "1000000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_state11 = "10000000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_pp3_stage0 = "100000000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_pp3_stage1 = "1000000000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_state16 = "10000000000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_pp4_stage0 = "100000000000";
const sc_lv<13> xor_1_hw::ap_ST_fsm_state19 = "1000000000000";
const bool xor_1_hw::ap_const_boolean_1 = true;
const sc_lv<32> xor_1_hw::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> xor_1_hw::ap_const_lv32_8 = "1000";
const bool xor_1_hw::ap_const_boolean_0 = false;
const sc_lv<32> xor_1_hw::ap_const_lv32_1 = "1";
const sc_lv<1> xor_1_hw::ap_const_lv1_0 = "0";
const sc_lv<32> xor_1_hw::ap_const_lv32_2 = "10";
const sc_lv<32> xor_1_hw::ap_const_lv32_3 = "11";
const sc_lv<32> xor_1_hw::ap_const_lv32_6 = "110";
const sc_lv<32> xor_1_hw::ap_const_lv32_9 = "1001";
const sc_lv<32> xor_1_hw::ap_const_lv32_B = "1011";
const sc_lv<1> xor_1_hw::ap_const_lv1_1 = "1";
const sc_lv<32> xor_1_hw::ap_const_lv32_5 = "101";
const sc_lv<32> xor_1_hw::ap_const_lv32_7 = "111";
const sc_lv<32> xor_1_hw::ap_const_lv32_A = "1010";
const sc_lv<4> xor_1_hw::ap_const_lv4_0 = "0000";
const sc_lv<6> xor_1_hw::ap_const_lv6_0 = "000000";
const sc_lv<32> xor_1_hw::ap_const_lv32_4 = "100";
const sc_lv<8> xor_1_hw::ap_const_lv8_30 = "110000";
const sc_lv<3> xor_1_hw::ap_const_lv3_0 = "000";
const sc_lv<4> xor_1_hw::ap_const_lv4_8 = "1000";
const sc_lv<4> xor_1_hw::ap_const_lv4_1 = "1";
const sc_lv<6> xor_1_hw::ap_const_lv6_20 = "100000";
const sc_lv<6> xor_1_hw::ap_const_lv6_1 = "1";
const sc_lv<8> xor_1_hw::ap_const_lv8_31 = "110001";
const sc_lv<2> xor_1_hw::ap_const_lv2_0 = "00";
const sc_lv<5> xor_1_hw::ap_const_lv5_1 = "1";
const sc_lv<5> xor_1_hw::ap_const_lv5_2 = "10";
const sc_lv<5> xor_1_hw::ap_const_lv5_3 = "11";
const sc_lv<7> xor_1_hw::ap_const_lv7_30 = "110000";
const sc_lv<7> xor_1_hw::ap_const_lv7_31 = "110001";
const sc_lv<7> xor_1_hw::ap_const_lv7_32 = "110010";
const sc_lv<7> xor_1_hw::ap_const_lv7_33 = "110011";
const sc_lv<7> xor_1_hw::ap_const_lv7_65 = "1100101";
const sc_lv<7> xor_1_hw::ap_const_lv7_66 = "1100110";
const sc_lv<7> xor_1_hw::ap_const_lv7_34 = "110100";
const sc_lv<7> xor_1_hw::ap_const_lv7_35 = "110101";
const sc_lv<7> xor_1_hw::ap_const_lv7_36 = "110110";
const sc_lv<7> xor_1_hw::ap_const_lv7_37 = "110111";
const sc_lv<7> xor_1_hw::ap_const_lv7_38 = "111000";
const sc_lv<7> xor_1_hw::ap_const_lv7_39 = "111001";
const sc_lv<7> xor_1_hw::ap_const_lv7_61 = "1100001";
const sc_lv<7> xor_1_hw::ap_const_lv7_62 = "1100010";
const sc_lv<7> xor_1_hw::ap_const_lv7_63 = "1100011";
const sc_lv<7> xor_1_hw::ap_const_lv7_64 = "1100100";
const sc_lv<32> xor_1_hw::ap_const_lv32_C = "1100";

xor_1_hw::xor_1_hw(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_convert_hex_to_binar_fu_322 = new convert_hex_to_binar("grp_convert_hex_to_binar_fu_322");
    grp_convert_hex_to_binar_fu_322->ap_clk(ap_clk);
    grp_convert_hex_to_binar_fu_322->ap_rst(ap_rst);
    grp_convert_hex_to_binar_fu_322->ap_start(grp_convert_hex_to_binar_fu_322_ap_start);
    grp_convert_hex_to_binar_fu_322->ap_done(grp_convert_hex_to_binar_fu_322_ap_done);
    grp_convert_hex_to_binar_fu_322->ap_idle(grp_convert_hex_to_binar_fu_322_ap_idle);
    grp_convert_hex_to_binar_fu_322->ap_ready(grp_convert_hex_to_binar_fu_322_ap_ready);
    grp_convert_hex_to_binar_fu_322->hex_address0(grp_convert_hex_to_binar_fu_322_hex_address0);
    grp_convert_hex_to_binar_fu_322->hex_ce0(grp_convert_hex_to_binar_fu_322_hex_ce0);
    grp_convert_hex_to_binar_fu_322->hex_q0(arr1_q0);
    grp_convert_hex_to_binar_fu_322->bin_address0(grp_convert_hex_to_binar_fu_322_bin_address0);
    grp_convert_hex_to_binar_fu_322->bin_ce0(grp_convert_hex_to_binar_fu_322_bin_ce0);
    grp_convert_hex_to_binar_fu_322->bin_we0(grp_convert_hex_to_binar_fu_322_bin_we0);
    grp_convert_hex_to_binar_fu_322->bin_d0(grp_convert_hex_to_binar_fu_322_bin_d0);
    grp_convert_hex_to_binar_fu_322->bin_address1(grp_convert_hex_to_binar_fu_322_bin_address1);
    grp_convert_hex_to_binar_fu_322->bin_ce1(grp_convert_hex_to_binar_fu_322_bin_ce1);
    grp_convert_hex_to_binar_fu_322->bin_we1(grp_convert_hex_to_binar_fu_322_bin_we1);
    grp_convert_hex_to_binar_fu_322->bin_d1(grp_convert_hex_to_binar_fu_322_bin_d1);
    grp_convert_hex_to_binar_fu_330 = new convert_hex_to_binar("grp_convert_hex_to_binar_fu_330");
    grp_convert_hex_to_binar_fu_330->ap_clk(ap_clk);
    grp_convert_hex_to_binar_fu_330->ap_rst(ap_rst);
    grp_convert_hex_to_binar_fu_330->ap_start(grp_convert_hex_to_binar_fu_330_ap_start);
    grp_convert_hex_to_binar_fu_330->ap_done(grp_convert_hex_to_binar_fu_330_ap_done);
    grp_convert_hex_to_binar_fu_330->ap_idle(grp_convert_hex_to_binar_fu_330_ap_idle);
    grp_convert_hex_to_binar_fu_330->ap_ready(grp_convert_hex_to_binar_fu_330_ap_ready);
    grp_convert_hex_to_binar_fu_330->hex_address0(grp_convert_hex_to_binar_fu_330_hex_address0);
    grp_convert_hex_to_binar_fu_330->hex_ce0(grp_convert_hex_to_binar_fu_330_hex_ce0);
    grp_convert_hex_to_binar_fu_330->hex_q0(arr2_q0);
    grp_convert_hex_to_binar_fu_330->bin_address0(grp_convert_hex_to_binar_fu_330_bin_address0);
    grp_convert_hex_to_binar_fu_330->bin_ce0(grp_convert_hex_to_binar_fu_330_bin_ce0);
    grp_convert_hex_to_binar_fu_330->bin_we0(grp_convert_hex_to_binar_fu_330_bin_we0);
    grp_convert_hex_to_binar_fu_330->bin_d0(grp_convert_hex_to_binar_fu_330_bin_d0);
    grp_convert_hex_to_binar_fu_330->bin_address1(grp_convert_hex_to_binar_fu_330_bin_address1);
    grp_convert_hex_to_binar_fu_330->bin_ce1(grp_convert_hex_to_binar_fu_330_bin_ce1);
    grp_convert_hex_to_binar_fu_330->bin_we1(grp_convert_hex_to_binar_fu_330_bin_we1);
    grp_convert_hex_to_binar_fu_330->bin_d1(grp_convert_hex_to_binar_fu_330_bin_d1);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln344_1_fu_392_p2);
    sensitive << ( add_ln344_reg_792 );
    sensitive << ( zext_ln344_3_fu_388_p1 );

    SC_METHOD(thread_add_ln344_fu_370_p2);
    sensitive << ( zext_ln344_2_fu_366_p1 );
    sensitive << ( zext_ln344_1_fu_354_p1 );

    SC_METHOD(thread_add_ln349_1_fu_448_p2);
    sensitive << ( add_ln349_reg_812 );
    sensitive << ( zext_ln349_3_fu_444_p1 );

    SC_METHOD(thread_add_ln349_fu_426_p2);
    sensitive << ( zext_ln349_2_fu_422_p1 );
    sensitive << ( zext_ln349_1_fu_410_p1 );

    SC_METHOD(thread_add_ln369_fu_778_p2);
    sensitive << ( add_ln344_reg_792 );
    sensitive << ( zext_ln369_1_fu_774_p1 );

    SC_METHOD(thread_and_ln117_1_fu_663_p2);
    sensitive << ( icmp_ln116_reg_876 );
    sensitive << ( xor_ln117_fu_658_p2 );

    SC_METHOD(thread_and_ln117_2_fu_698_p2);
    sensitive << ( icmp_ln117_reg_884 );
    sensitive << ( xor_ln116_fu_693_p2 );

    SC_METHOD(thread_and_ln117_fu_580_p2);
    sensitive << ( icmp_ln116_reg_876 );
    sensitive << ( icmp_ln117_reg_884 );

    SC_METHOD(thread_and_ln118_1_fu_604_p2);
    sensitive << ( xor_ln118_fu_598_p2 );
    sensitive << ( and_ln117_fu_580_p2 );

    SC_METHOD(thread_and_ln118_2_fu_668_p2);
    sensitive << ( icmp_ln118_reg_902 );
    sensitive << ( and_ln117_1_fu_663_p2 );

    SC_METHOD(thread_and_ln118_3_fu_680_p2);
    sensitive << ( xor_ln118_reg_918 );
    sensitive << ( and_ln117_1_fu_663_p2 );

    SC_METHOD(thread_and_ln118_4_fu_703_p2);
    sensitive << ( icmp_ln118_reg_902 );
    sensitive << ( and_ln117_2_fu_698_p2 );

    SC_METHOD(thread_and_ln118_5_fu_716_p2);
    sensitive << ( xor_ln118_reg_918 );
    sensitive << ( and_ln117_2_fu_698_p2 );

    SC_METHOD(thread_and_ln118_6_fu_739_p2);
    sensitive << ( icmp_ln118_reg_902 );
    sensitive << ( xor_ln117_1_fu_733_p2 );

    SC_METHOD(thread_and_ln118_fu_584_p2);
    sensitive << ( grp_fu_338_p2 );
    sensitive << ( and_ln117_fu_580_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp3_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp4_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);

    SC_METHOD(thread_ap_block_pp3_stage0);

    SC_METHOD(thread_ap_block_pp3_stage0_11001);

    SC_METHOD(thread_ap_block_pp3_stage0_subdone);

    SC_METHOD(thread_ap_block_pp3_stage1);

    SC_METHOD(thread_ap_block_pp3_stage1_11001);

    SC_METHOD(thread_ap_block_pp3_stage1_subdone);

    SC_METHOD(thread_ap_block_pp4_stage0);

    SC_METHOD(thread_ap_block_pp4_stage0_11001);

    SC_METHOD(thread_ap_block_pp4_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state12_pp3_stage0_iter0);

    SC_METHOD(thread_ap_block_state13_pp3_stage1_iter0);

    SC_METHOD(thread_ap_block_state14_pp3_stage0_iter1);

    SC_METHOD(thread_ap_block_state15_pp3_stage1_iter1);

    SC_METHOD(thread_ap_block_state17_pp4_stage0_iter0);

    SC_METHOD(thread_ap_block_state18_pp4_stage0_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state8_on_subcall_done);
    sensitive << ( grp_convert_hex_to_binar_fu_322_ap_done );
    sensitive << ( grp_convert_hex_to_binar_fu_330_ap_done );

    SC_METHOD(thread_ap_block_state9_pp2_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln342_fu_376_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state5);
    sensitive << ( icmp_ln347_fu_432_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state9);
    sensitive << ( icmp_ln355_fu_463_p2 );

    SC_METHOD(thread_ap_condition_pp3_exit_iter0_state12);
    sensitive << ( icmp_ln114_fu_496_p2 );

    SC_METHOD(thread_ap_condition_pp4_exit_iter0_state17);
    sensitive << ( icmp_ln367_fu_757_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_pp3);
    sensitive << ( ap_idle_pp3 );

    SC_METHOD(thread_ap_enable_pp4);
    sensitive << ( ap_idle_pp4 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_ap_idle_pp3);
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter1 );

    SC_METHOD(thread_ap_idle_pp4);
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );

    SC_METHOD(thread_ap_phi_mux_i1_0_phi_fu_280_p4);
    sensitive << ( i1_0_reg_276 );
    sensitive << ( icmp_ln347_reg_817 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( i_1_reg_821 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_i_phi_fu_303_p4);
    sensitive << ( i_0_i_reg_299 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( icmp_ln114_reg_851 );
    sensitive << ( i_3_reg_855 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_block_pp3_stage0 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_268_p4);
    sensitive << ( i_0_reg_264 );
    sensitive << ( icmp_ln342_reg_798 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_reg_802 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state19 );

    SC_METHOD(thread_arr1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_hex_address0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln344_fu_402_p1 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( zext_ln119_1_fu_618_p1 );
    sensitive << ( zext_ln369_fu_769_p1 );
    sensitive << ( ap_block_pp4_stage0 );

    SC_METHOD(thread_arr1_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_hex_ce0 );

    SC_METHOD(thread_arr1_d0);
    sensitive << ( state_matrix_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( zext_ln118_1_fu_752_p1 );

    SC_METHOD(thread_arr1_we0);
    sensitive << ( icmp_ln342_reg_798 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln114_reg_851_pp3_iter1_reg );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_arr2_address0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_hex_address0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln349_fu_458_p1 );

    SC_METHOD(thread_arr2_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_hex_ce0 );

    SC_METHOD(thread_arr2_d0);
    sensitive << ( state_matrix_q0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_arr2_we0);
    sensitive << ( icmp_ln347_reg_817 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_arr3_address0);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_address0 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( zext_ln357_fu_475_p1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( zext_ln116_fu_520_p1 );
    sensitive << ( zext_ln118_fu_541_p1 );
    sensitive << ( ap_block_pp3_stage1 );

    SC_METHOD(thread_arr3_address1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( arr3_addr_reg_840 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_address1 );
    sensitive << ( ap_block_pp3_stage0 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( zext_ln117_fu_531_p1 );
    sensitive << ( ap_block_pp3_stage1 );
    sensitive << ( zext_ln119_fu_551_p1 );

    SC_METHOD(thread_arr3_ce0);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_ce0 );

    SC_METHOD(thread_arr3_ce1);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_ce1 );

    SC_METHOD(thread_arr3_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_d0 );

    SC_METHOD(thread_arr3_d1);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_d1 );
    sensitive << ( ap_block_pp2_stage0 );
    sensitive << ( select_ln357_fu_487_p3 );

    SC_METHOD(thread_arr3_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_we0 );

    SC_METHOD(thread_arr3_we1);
    sensitive << ( icmp_ln355_reg_831 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( grp_convert_hex_to_binar_fu_322_bin_we1 );

    SC_METHOD(thread_arr4_address0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_address0 );
    sensitive << ( zext_ln357_fu_475_p1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_arr4_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_address1 );

    SC_METHOD(thread_arr4_ce0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_ce0 );

    SC_METHOD(thread_arr4_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_ce1 );

    SC_METHOD(thread_arr4_d0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_d0 );

    SC_METHOD(thread_arr4_d1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_d1 );

    SC_METHOD(thread_arr4_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_we0 );

    SC_METHOD(thread_arr4_we1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_convert_hex_to_binar_fu_330_bin_we1 );

    SC_METHOD(thread_grp_convert_hex_to_binar_fu_322_ap_start);
    sensitive << ( grp_convert_hex_to_binar_fu_322_ap_start_reg );

    SC_METHOD(thread_grp_convert_hex_to_binar_fu_330_ap_start);
    sensitive << ( grp_convert_hex_to_binar_fu_330_ap_start_reg );

    SC_METHOD(thread_grp_fu_338_p2);
    sensitive << ( arr3_q0 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( icmp_ln114_reg_851 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_enable_reg_pp3_iter1 );

    SC_METHOD(thread_grp_fu_344_p2);
    sensitive << ( arr3_q1 );
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( icmp_ln114_reg_851 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_block_pp3_stage1_11001 );
    sensitive << ( ap_enable_reg_pp3_iter1 );

    SC_METHOD(thread_i_1_fu_438_p2);
    sensitive << ( ap_phi_mux_i1_0_phi_fu_280_p4 );

    SC_METHOD(thread_i_2_fu_469_p2);
    sensitive << ( i2_0_reg_288 );

    SC_METHOD(thread_i_3_fu_502_p2);
    sensitive << ( ap_phi_mux_i_0_i_phi_fu_303_p4 );

    SC_METHOD(thread_i_4_fu_763_p2);
    sensitive << ( i3_0_reg_311 );

    SC_METHOD(thread_i_fu_382_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_268_p4 );

    SC_METHOD(thread_icmp_ln114_fu_496_p2);
    sensitive << ( ap_CS_fsm_pp3_stage0 );
    sensitive << ( ap_block_pp3_stage0_11001 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_phi_mux_i_0_i_phi_fu_303_p4 );

    SC_METHOD(thread_icmp_ln342_fu_376_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_268_p4 );

    SC_METHOD(thread_icmp_ln347_fu_432_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_i1_0_phi_fu_280_p4 );

    SC_METHOD(thread_icmp_ln355_fu_463_p2);
    sensitive << ( i2_0_reg_288 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_icmp_ln357_fu_481_p2);
    sensitive << ( arr3_q0 );
    sensitive << ( arr4_q0 );
    sensitive << ( icmp_ln355_reg_831 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_icmp_ln367_fu_757_p2);
    sensitive << ( i3_0_reg_311 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter0 );

    SC_METHOD(thread_or_ln117_1_fu_729_p2);
    sensitive << ( icmp_ln116_reg_876 );
    sensitive << ( icmp_ln117_reg_884 );

    SC_METHOD(thread_or_ln117_fu_525_p2);
    sensitive << ( shl_ln_fu_512_p3 );

    SC_METHOD(thread_or_ln118_fu_536_p2);
    sensitive << ( shl_ln_reg_860 );

    SC_METHOD(thread_or_ln119_fu_546_p2);
    sensitive << ( shl_ln_reg_860 );

    SC_METHOD(thread_select_ln118_1_fu_610_p3);
    sensitive << ( and_ln118_1_fu_604_p2 );
    sensitive << ( select_ln123_fu_564_p3 );
    sensitive << ( select_ln118_fu_590_p3 );

    SC_METHOD(thread_select_ln118_2_fu_673_p3);
    sensitive << ( select_ln118_1_reg_924 );
    sensitive << ( and_ln118_2_fu_668_p2 );
    sensitive << ( select_ln129_fu_623_p3 );

    SC_METHOD(thread_select_ln118_3_fu_685_p3);
    sensitive << ( and_ln118_3_fu_680_p2 );
    sensitive << ( select_ln133_fu_630_p3 );
    sensitive << ( select_ln118_2_fu_673_p3 );

    SC_METHOD(thread_select_ln118_4_fu_708_p3);
    sensitive << ( and_ln118_4_fu_703_p2 );
    sensitive << ( select_ln141_fu_637_p3 );
    sensitive << ( select_ln118_3_fu_685_p3 );

    SC_METHOD(thread_select_ln118_5_fu_721_p3);
    sensitive << ( and_ln118_5_fu_716_p2 );
    sensitive << ( select_ln145_fu_644_p3 );
    sensitive << ( select_ln118_4_fu_708_p3 );

    SC_METHOD(thread_select_ln118_6_fu_744_p3);
    sensitive << ( and_ln118_6_fu_739_p2 );
    sensitive << ( select_ln151_fu_651_p3 );
    sensitive << ( select_ln118_5_fu_721_p3 );

    SC_METHOD(thread_select_ln118_fu_590_p3);
    sensitive << ( and_ln118_fu_584_p2 );
    sensitive << ( select_ln119_fu_556_p3 );
    sensitive << ( select_ln155_fu_572_p3 );

    SC_METHOD(thread_select_ln119_fu_556_p3);
    sensitive << ( grp_fu_344_p2 );

    SC_METHOD(thread_select_ln123_fu_564_p3);
    sensitive << ( grp_fu_344_p2 );

    SC_METHOD(thread_select_ln129_fu_623_p3);
    sensitive << ( icmp_ln119_reg_909 );

    SC_METHOD(thread_select_ln133_fu_630_p3);
    sensitive << ( icmp_ln119_reg_909 );

    SC_METHOD(thread_select_ln141_fu_637_p3);
    sensitive << ( icmp_ln119_reg_909 );

    SC_METHOD(thread_select_ln145_fu_644_p3);
    sensitive << ( icmp_ln119_reg_909 );

    SC_METHOD(thread_select_ln151_fu_651_p3);
    sensitive << ( icmp_ln119_reg_909 );

    SC_METHOD(thread_select_ln155_fu_572_p3);
    sensitive << ( grp_fu_344_p2 );

    SC_METHOD(thread_select_ln357_fu_487_p3);
    sensitive << ( icmp_ln357_fu_481_p2 );

    SC_METHOD(thread_shl_ln_fu_512_p3);
    sensitive << ( trunc_ln116_fu_508_p1 );

    SC_METHOD(thread_state_matrix_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( zext_ln344_4_fu_397_p1 );
    sensitive << ( zext_ln349_4_fu_453_p1 );
    sensitive << ( ap_block_pp4_stage0 );
    sensitive << ( zext_ln369_2_fu_783_p1 );

    SC_METHOD(thread_state_matrix_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter1 );

    SC_METHOD(thread_state_matrix_d0);
    sensitive << ( arr1_q0 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_enable_reg_pp4_iter1 );
    sensitive << ( ap_block_pp4_stage0 );

    SC_METHOD(thread_state_matrix_we0);
    sensitive << ( icmp_ln367_reg_929 );
    sensitive << ( ap_CS_fsm_pp4_stage0 );
    sensitive << ( ap_block_pp4_stage0_11001 );
    sensitive << ( ap_enable_reg_pp4_iter1 );

    SC_METHOD(thread_tmp_6_fu_358_p3);
    sensitive << ( trunc_ln344_fu_350_p1 );

    SC_METHOD(thread_tmp_9_fu_414_p3);
    sensitive << ( trunc_ln349_fu_407_p1 );

    SC_METHOD(thread_trunc_ln116_fu_508_p1);
    sensitive << ( ap_phi_mux_i_0_i_phi_fu_303_p4 );

    SC_METHOD(thread_trunc_ln344_fu_350_p1);
    sensitive << ( index1 );

    SC_METHOD(thread_trunc_ln349_fu_407_p1);
    sensitive << ( index2 );

    SC_METHOD(thread_xor_ln116_fu_693_p2);
    sensitive << ( icmp_ln116_reg_876 );

    SC_METHOD(thread_xor_ln117_1_fu_733_p2);
    sensitive << ( or_ln117_1_fu_729_p2 );

    SC_METHOD(thread_xor_ln117_fu_658_p2);
    sensitive << ( icmp_ln117_reg_884 );

    SC_METHOD(thread_xor_ln118_fu_598_p2);
    sensitive << ( grp_fu_338_p2 );

    SC_METHOD(thread_zext_ln116_fu_520_p1);
    sensitive << ( shl_ln_fu_512_p3 );

    SC_METHOD(thread_zext_ln117_fu_531_p1);
    sensitive << ( or_ln117_fu_525_p2 );

    SC_METHOD(thread_zext_ln118_1_fu_752_p1);
    sensitive << ( select_ln118_6_fu_744_p3 );

    SC_METHOD(thread_zext_ln118_fu_541_p1);
    sensitive << ( or_ln118_fu_536_p2 );

    SC_METHOD(thread_zext_ln119_1_fu_618_p1);
    sensitive << ( i_0_i_reg_299_pp3_iter1_reg );

    SC_METHOD(thread_zext_ln119_fu_551_p1);
    sensitive << ( or_ln119_fu_546_p2 );

    SC_METHOD(thread_zext_ln344_1_fu_354_p1);
    sensitive << ( trunc_ln344_fu_350_p1 );

    SC_METHOD(thread_zext_ln344_2_fu_366_p1);
    sensitive << ( tmp_6_fu_358_p3 );

    SC_METHOD(thread_zext_ln344_3_fu_388_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_268_p4 );

    SC_METHOD(thread_zext_ln344_4_fu_397_p1);
    sensitive << ( add_ln344_1_fu_392_p2 );

    SC_METHOD(thread_zext_ln344_fu_402_p1);
    sensitive << ( i_0_reg_264 );

    SC_METHOD(thread_zext_ln349_1_fu_410_p1);
    sensitive << ( trunc_ln349_fu_407_p1 );

    SC_METHOD(thread_zext_ln349_2_fu_422_p1);
    sensitive << ( tmp_9_fu_414_p3 );

    SC_METHOD(thread_zext_ln349_3_fu_444_p1);
    sensitive << ( ap_phi_mux_i1_0_phi_fu_280_p4 );

    SC_METHOD(thread_zext_ln349_4_fu_453_p1);
    sensitive << ( add_ln349_1_fu_448_p2 );

    SC_METHOD(thread_zext_ln349_fu_458_p1);
    sensitive << ( i1_0_reg_276 );

    SC_METHOD(thread_zext_ln357_fu_475_p1);
    sensitive << ( i2_0_reg_288 );

    SC_METHOD(thread_zext_ln369_1_fu_774_p1);
    sensitive << ( i3_0_reg_311 );

    SC_METHOD(thread_zext_ln369_2_fu_783_p1);
    sensitive << ( add_ln369_reg_938 );

    SC_METHOD(thread_zext_ln369_fu_769_p1);
    sensitive << ( i3_0_reg_311 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln342_fu_376_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln347_fu_432_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln355_fu_463_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( icmp_ln114_fu_496_p2 );
    sensitive << ( ap_enable_reg_pp3_iter0 );
    sensitive << ( ap_CS_fsm_pp3_stage1 );
    sensitive << ( ap_enable_reg_pp3_iter1 );
    sensitive << ( icmp_ln367_fu_757_p2 );
    sensitive << ( ap_enable_reg_pp4_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_block_state8_on_subcall_done );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( ap_block_pp3_stage0_subdone );
    sensitive << ( ap_block_pp3_stage1_subdone );
    sensitive << ( ap_block_pp4_stage0_subdone );

    ap_CS_fsm = "0000000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp3_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp4_iter1 = SC_LOGIC_0;
    grp_convert_hex_to_binar_fu_322_ap_start_reg = SC_LOGIC_0;
    grp_convert_hex_to_binar_fu_330_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xor_1_hw_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, state_matrix_address0, "(port)state_matrix_address0");
    sc_trace(mVcdFile, state_matrix_ce0, "(port)state_matrix_ce0");
    sc_trace(mVcdFile, state_matrix_we0, "(port)state_matrix_we0");
    sc_trace(mVcdFile, state_matrix_d0, "(port)state_matrix_d0");
    sc_trace(mVcdFile, state_matrix_q0, "(port)state_matrix_q0");
    sc_trace(mVcdFile, index1, "(port)index1");
    sc_trace(mVcdFile, index2, "(port)index2");
    sc_trace(mVcdFile, arr1_address0, "(port)arr1_address0");
    sc_trace(mVcdFile, arr1_ce0, "(port)arr1_ce0");
    sc_trace(mVcdFile, arr1_we0, "(port)arr1_we0");
    sc_trace(mVcdFile, arr1_d0, "(port)arr1_d0");
    sc_trace(mVcdFile, arr1_q0, "(port)arr1_q0");
    sc_trace(mVcdFile, arr2_address0, "(port)arr2_address0");
    sc_trace(mVcdFile, arr2_ce0, "(port)arr2_ce0");
    sc_trace(mVcdFile, arr2_we0, "(port)arr2_we0");
    sc_trace(mVcdFile, arr2_d0, "(port)arr2_d0");
    sc_trace(mVcdFile, arr2_q0, "(port)arr2_q0");
    sc_trace(mVcdFile, arr3_address0, "(port)arr3_address0");
    sc_trace(mVcdFile, arr3_ce0, "(port)arr3_ce0");
    sc_trace(mVcdFile, arr3_we0, "(port)arr3_we0");
    sc_trace(mVcdFile, arr3_d0, "(port)arr3_d0");
    sc_trace(mVcdFile, arr3_q0, "(port)arr3_q0");
    sc_trace(mVcdFile, arr3_address1, "(port)arr3_address1");
    sc_trace(mVcdFile, arr3_ce1, "(port)arr3_ce1");
    sc_trace(mVcdFile, arr3_we1, "(port)arr3_we1");
    sc_trace(mVcdFile, arr3_d1, "(port)arr3_d1");
    sc_trace(mVcdFile, arr3_q1, "(port)arr3_q1");
    sc_trace(mVcdFile, arr4_address0, "(port)arr4_address0");
    sc_trace(mVcdFile, arr4_ce0, "(port)arr4_ce0");
    sc_trace(mVcdFile, arr4_we0, "(port)arr4_we0");
    sc_trace(mVcdFile, arr4_d0, "(port)arr4_d0");
    sc_trace(mVcdFile, arr4_q0, "(port)arr4_q0");
    sc_trace(mVcdFile, arr4_address1, "(port)arr4_address1");
    sc_trace(mVcdFile, arr4_ce1, "(port)arr4_ce1");
    sc_trace(mVcdFile, arr4_we1, "(port)arr4_we1");
    sc_trace(mVcdFile, arr4_d1, "(port)arr4_d1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_264, "i_0_reg_264");
    sc_trace(mVcdFile, i1_0_reg_276, "i1_0_reg_276");
    sc_trace(mVcdFile, i2_0_reg_288, "i2_0_reg_288");
    sc_trace(mVcdFile, i_0_i_reg_299, "i_0_i_reg_299");
    sc_trace(mVcdFile, i_0_i_reg_299_pp3_iter1_reg, "i_0_i_reg_299_pp3_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage0, "ap_CS_fsm_pp3_stage0");
    sc_trace(mVcdFile, ap_block_state12_pp3_stage0_iter0, "ap_block_state12_pp3_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state14_pp3_stage0_iter1, "ap_block_state14_pp3_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage0_11001, "ap_block_pp3_stage0_11001");
    sc_trace(mVcdFile, i3_0_reg_311, "i3_0_reg_311");
    sc_trace(mVcdFile, add_ln344_fu_370_p2, "add_ln344_fu_370_p2");
    sc_trace(mVcdFile, add_ln344_reg_792, "add_ln344_reg_792");
    sc_trace(mVcdFile, icmp_ln342_fu_376_p2, "icmp_ln342_fu_376_p2");
    sc_trace(mVcdFile, icmp_ln342_reg_798, "icmp_ln342_reg_798");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_382_p2, "i_fu_382_p2");
    sc_trace(mVcdFile, i_reg_802, "i_reg_802");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, add_ln349_fu_426_p2, "add_ln349_fu_426_p2");
    sc_trace(mVcdFile, add_ln349_reg_812, "add_ln349_reg_812");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln347_fu_432_p2, "icmp_ln347_fu_432_p2");
    sc_trace(mVcdFile, icmp_ln347_reg_817, "icmp_ln347_reg_817");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_1_fu_438_p2, "i_1_fu_438_p2");
    sc_trace(mVcdFile, i_1_reg_821, "i_1_reg_821");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, icmp_ln355_fu_463_p2, "icmp_ln355_fu_463_p2");
    sc_trace(mVcdFile, icmp_ln355_reg_831, "icmp_ln355_reg_831");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp2_stage0_iter0, "ap_block_state9_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp2_stage0_iter1, "ap_block_state10_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, i_2_fu_469_p2, "i_2_fu_469_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, arr3_addr_reg_840, "arr3_addr_reg_840");
    sc_trace(mVcdFile, icmp_ln114_fu_496_p2, "icmp_ln114_fu_496_p2");
    sc_trace(mVcdFile, icmp_ln114_reg_851, "icmp_ln114_reg_851");
    sc_trace(mVcdFile, icmp_ln114_reg_851_pp3_iter1_reg, "icmp_ln114_reg_851_pp3_iter1_reg");
    sc_trace(mVcdFile, i_3_fu_502_p2, "i_3_fu_502_p2");
    sc_trace(mVcdFile, i_3_reg_855, "i_3_reg_855");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter0, "ap_enable_reg_pp3_iter0");
    sc_trace(mVcdFile, shl_ln_fu_512_p3, "shl_ln_fu_512_p3");
    sc_trace(mVcdFile, shl_ln_reg_860, "shl_ln_reg_860");
    sc_trace(mVcdFile, grp_fu_338_p2, "grp_fu_338_p2");
    sc_trace(mVcdFile, icmp_ln116_reg_876, "icmp_ln116_reg_876");
    sc_trace(mVcdFile, ap_CS_fsm_pp3_stage1, "ap_CS_fsm_pp3_stage1");
    sc_trace(mVcdFile, ap_block_state13_pp3_stage1_iter0, "ap_block_state13_pp3_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp3_stage1_iter1, "ap_block_state15_pp3_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp3_stage1_11001, "ap_block_pp3_stage1_11001");
    sc_trace(mVcdFile, grp_fu_344_p2, "grp_fu_344_p2");
    sc_trace(mVcdFile, icmp_ln117_reg_884, "icmp_ln117_reg_884");
    sc_trace(mVcdFile, icmp_ln118_reg_902, "icmp_ln118_reg_902");
    sc_trace(mVcdFile, ap_enable_reg_pp3_iter1, "ap_enable_reg_pp3_iter1");
    sc_trace(mVcdFile, icmp_ln119_reg_909, "icmp_ln119_reg_909");
    sc_trace(mVcdFile, xor_ln118_fu_598_p2, "xor_ln118_fu_598_p2");
    sc_trace(mVcdFile, xor_ln118_reg_918, "xor_ln118_reg_918");
    sc_trace(mVcdFile, select_ln118_1_fu_610_p3, "select_ln118_1_fu_610_p3");
    sc_trace(mVcdFile, select_ln118_1_reg_924, "select_ln118_1_reg_924");
    sc_trace(mVcdFile, icmp_ln367_fu_757_p2, "icmp_ln367_fu_757_p2");
    sc_trace(mVcdFile, icmp_ln367_reg_929, "icmp_ln367_reg_929");
    sc_trace(mVcdFile, ap_CS_fsm_pp4_stage0, "ap_CS_fsm_pp4_stage0");
    sc_trace(mVcdFile, ap_block_state17_pp4_stage0_iter0, "ap_block_state17_pp4_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state18_pp4_stage0_iter1, "ap_block_state18_pp4_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp4_stage0_11001, "ap_block_pp4_stage0_11001");
    sc_trace(mVcdFile, i_4_fu_763_p2, "i_4_fu_763_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter0, "ap_enable_reg_pp4_iter0");
    sc_trace(mVcdFile, add_ln369_fu_778_p2, "add_ln369_fu_778_p2");
    sc_trace(mVcdFile, add_ln369_reg_938, "add_ln369_reg_938");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state5, "ap_condition_pp1_exit_iter0_state5");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_ap_ready, "grp_convert_hex_to_binar_fu_322_ap_ready");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_ap_done, "grp_convert_hex_to_binar_fu_322_ap_done");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_ap_ready, "grp_convert_hex_to_binar_fu_330_ap_ready");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_ap_done, "grp_convert_hex_to_binar_fu_330_ap_done");
    sc_trace(mVcdFile, ap_block_state8_on_subcall_done, "ap_block_state8_on_subcall_done");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state9, "ap_condition_pp2_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_block_pp3_stage0_subdone, "ap_block_pp3_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp3_exit_iter0_state12, "ap_condition_pp3_exit_iter0_state12");
    sc_trace(mVcdFile, ap_block_pp3_stage1_subdone, "ap_block_pp3_stage1_subdone");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_block_pp4_stage0_subdone, "ap_block_pp4_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp4_exit_iter0_state17, "ap_condition_pp4_exit_iter0_state17");
    sc_trace(mVcdFile, ap_enable_reg_pp4_iter1, "ap_enable_reg_pp4_iter1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_ap_start, "grp_convert_hex_to_binar_fu_322_ap_start");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_ap_idle, "grp_convert_hex_to_binar_fu_322_ap_idle");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_hex_address0, "grp_convert_hex_to_binar_fu_322_hex_address0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_hex_ce0, "grp_convert_hex_to_binar_fu_322_hex_ce0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_address0, "grp_convert_hex_to_binar_fu_322_bin_address0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_ce0, "grp_convert_hex_to_binar_fu_322_bin_ce0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_we0, "grp_convert_hex_to_binar_fu_322_bin_we0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_d0, "grp_convert_hex_to_binar_fu_322_bin_d0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_address1, "grp_convert_hex_to_binar_fu_322_bin_address1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_ce1, "grp_convert_hex_to_binar_fu_322_bin_ce1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_we1, "grp_convert_hex_to_binar_fu_322_bin_we1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_bin_d1, "grp_convert_hex_to_binar_fu_322_bin_d1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_ap_start, "grp_convert_hex_to_binar_fu_330_ap_start");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_ap_idle, "grp_convert_hex_to_binar_fu_330_ap_idle");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_hex_address0, "grp_convert_hex_to_binar_fu_330_hex_address0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_hex_ce0, "grp_convert_hex_to_binar_fu_330_hex_ce0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_address0, "grp_convert_hex_to_binar_fu_330_bin_address0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_ce0, "grp_convert_hex_to_binar_fu_330_bin_ce0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_we0, "grp_convert_hex_to_binar_fu_330_bin_we0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_d0, "grp_convert_hex_to_binar_fu_330_bin_d0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_address1, "grp_convert_hex_to_binar_fu_330_bin_address1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_ce1, "grp_convert_hex_to_binar_fu_330_bin_ce1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_we1, "grp_convert_hex_to_binar_fu_330_bin_we1");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_bin_d1, "grp_convert_hex_to_binar_fu_330_bin_d1");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_268_p4, "ap_phi_mux_i_0_phi_fu_268_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i1_0_phi_fu_280_p4, "ap_phi_mux_i1_0_phi_fu_280_p4");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, ap_phi_mux_i_0_i_phi_fu_303_p4, "ap_phi_mux_i_0_i_phi_fu_303_p4");
    sc_trace(mVcdFile, ap_block_pp3_stage0, "ap_block_pp3_stage0");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_322_ap_start_reg, "grp_convert_hex_to_binar_fu_322_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_convert_hex_to_binar_fu_330_ap_start_reg, "grp_convert_hex_to_binar_fu_330_ap_start_reg");
    sc_trace(mVcdFile, zext_ln344_4_fu_397_p1, "zext_ln344_4_fu_397_p1");
    sc_trace(mVcdFile, zext_ln344_fu_402_p1, "zext_ln344_fu_402_p1");
    sc_trace(mVcdFile, zext_ln349_4_fu_453_p1, "zext_ln349_4_fu_453_p1");
    sc_trace(mVcdFile, zext_ln349_fu_458_p1, "zext_ln349_fu_458_p1");
    sc_trace(mVcdFile, zext_ln357_fu_475_p1, "zext_ln357_fu_475_p1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, zext_ln116_fu_520_p1, "zext_ln116_fu_520_p1");
    sc_trace(mVcdFile, zext_ln117_fu_531_p1, "zext_ln117_fu_531_p1");
    sc_trace(mVcdFile, zext_ln118_fu_541_p1, "zext_ln118_fu_541_p1");
    sc_trace(mVcdFile, ap_block_pp3_stage1, "ap_block_pp3_stage1");
    sc_trace(mVcdFile, zext_ln119_fu_551_p1, "zext_ln119_fu_551_p1");
    sc_trace(mVcdFile, zext_ln119_1_fu_618_p1, "zext_ln119_1_fu_618_p1");
    sc_trace(mVcdFile, zext_ln369_fu_769_p1, "zext_ln369_fu_769_p1");
    sc_trace(mVcdFile, ap_block_pp4_stage0, "ap_block_pp4_stage0");
    sc_trace(mVcdFile, zext_ln369_2_fu_783_p1, "zext_ln369_2_fu_783_p1");
    sc_trace(mVcdFile, zext_ln118_1_fu_752_p1, "zext_ln118_1_fu_752_p1");
    sc_trace(mVcdFile, select_ln357_fu_487_p3, "select_ln357_fu_487_p3");
    sc_trace(mVcdFile, trunc_ln344_fu_350_p1, "trunc_ln344_fu_350_p1");
    sc_trace(mVcdFile, tmp_6_fu_358_p3, "tmp_6_fu_358_p3");
    sc_trace(mVcdFile, zext_ln344_2_fu_366_p1, "zext_ln344_2_fu_366_p1");
    sc_trace(mVcdFile, zext_ln344_1_fu_354_p1, "zext_ln344_1_fu_354_p1");
    sc_trace(mVcdFile, zext_ln344_3_fu_388_p1, "zext_ln344_3_fu_388_p1");
    sc_trace(mVcdFile, add_ln344_1_fu_392_p2, "add_ln344_1_fu_392_p2");
    sc_trace(mVcdFile, trunc_ln349_fu_407_p1, "trunc_ln349_fu_407_p1");
    sc_trace(mVcdFile, tmp_9_fu_414_p3, "tmp_9_fu_414_p3");
    sc_trace(mVcdFile, zext_ln349_2_fu_422_p1, "zext_ln349_2_fu_422_p1");
    sc_trace(mVcdFile, zext_ln349_1_fu_410_p1, "zext_ln349_1_fu_410_p1");
    sc_trace(mVcdFile, zext_ln349_3_fu_444_p1, "zext_ln349_3_fu_444_p1");
    sc_trace(mVcdFile, add_ln349_1_fu_448_p2, "add_ln349_1_fu_448_p2");
    sc_trace(mVcdFile, icmp_ln357_fu_481_p2, "icmp_ln357_fu_481_p2");
    sc_trace(mVcdFile, trunc_ln116_fu_508_p1, "trunc_ln116_fu_508_p1");
    sc_trace(mVcdFile, or_ln117_fu_525_p2, "or_ln117_fu_525_p2");
    sc_trace(mVcdFile, or_ln118_fu_536_p2, "or_ln118_fu_536_p2");
    sc_trace(mVcdFile, or_ln119_fu_546_p2, "or_ln119_fu_546_p2");
    sc_trace(mVcdFile, and_ln117_fu_580_p2, "and_ln117_fu_580_p2");
    sc_trace(mVcdFile, and_ln118_fu_584_p2, "and_ln118_fu_584_p2");
    sc_trace(mVcdFile, select_ln119_fu_556_p3, "select_ln119_fu_556_p3");
    sc_trace(mVcdFile, select_ln155_fu_572_p3, "select_ln155_fu_572_p3");
    sc_trace(mVcdFile, and_ln118_1_fu_604_p2, "and_ln118_1_fu_604_p2");
    sc_trace(mVcdFile, select_ln123_fu_564_p3, "select_ln123_fu_564_p3");
    sc_trace(mVcdFile, select_ln118_fu_590_p3, "select_ln118_fu_590_p3");
    sc_trace(mVcdFile, xor_ln117_fu_658_p2, "xor_ln117_fu_658_p2");
    sc_trace(mVcdFile, and_ln117_1_fu_663_p2, "and_ln117_1_fu_663_p2");
    sc_trace(mVcdFile, and_ln118_2_fu_668_p2, "and_ln118_2_fu_668_p2");
    sc_trace(mVcdFile, select_ln129_fu_623_p3, "select_ln129_fu_623_p3");
    sc_trace(mVcdFile, and_ln118_3_fu_680_p2, "and_ln118_3_fu_680_p2");
    sc_trace(mVcdFile, select_ln133_fu_630_p3, "select_ln133_fu_630_p3");
    sc_trace(mVcdFile, select_ln118_2_fu_673_p3, "select_ln118_2_fu_673_p3");
    sc_trace(mVcdFile, xor_ln116_fu_693_p2, "xor_ln116_fu_693_p2");
    sc_trace(mVcdFile, and_ln117_2_fu_698_p2, "and_ln117_2_fu_698_p2");
    sc_trace(mVcdFile, and_ln118_4_fu_703_p2, "and_ln118_4_fu_703_p2");
    sc_trace(mVcdFile, select_ln141_fu_637_p3, "select_ln141_fu_637_p3");
    sc_trace(mVcdFile, select_ln118_3_fu_685_p3, "select_ln118_3_fu_685_p3");
    sc_trace(mVcdFile, and_ln118_5_fu_716_p2, "and_ln118_5_fu_716_p2");
    sc_trace(mVcdFile, select_ln145_fu_644_p3, "select_ln145_fu_644_p3");
    sc_trace(mVcdFile, select_ln118_4_fu_708_p3, "select_ln118_4_fu_708_p3");
    sc_trace(mVcdFile, or_ln117_1_fu_729_p2, "or_ln117_1_fu_729_p2");
    sc_trace(mVcdFile, xor_ln117_1_fu_733_p2, "xor_ln117_1_fu_733_p2");
    sc_trace(mVcdFile, and_ln118_6_fu_739_p2, "and_ln118_6_fu_739_p2");
    sc_trace(mVcdFile, select_ln151_fu_651_p3, "select_ln151_fu_651_p3");
    sc_trace(mVcdFile, select_ln118_5_fu_721_p3, "select_ln118_5_fu_721_p3");
    sc_trace(mVcdFile, select_ln118_6_fu_744_p3, "select_ln118_6_fu_744_p3");
    sc_trace(mVcdFile, zext_ln369_1_fu_774_p1, "zext_ln369_1_fu_774_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
    sc_trace(mVcdFile, ap_idle_pp3, "ap_idle_pp3");
    sc_trace(mVcdFile, ap_enable_pp3, "ap_enable_pp3");
    sc_trace(mVcdFile, ap_idle_pp4, "ap_idle_pp4");
    sc_trace(mVcdFile, ap_enable_pp4, "ap_enable_pp4");
#endif

    }
}

xor_1_hw::~xor_1_hw() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_convert_hex_to_binar_fu_322;
    delete grp_convert_hex_to_binar_fu_330;
}

void xor_1_hw::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state9.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                    esl_seteq<1,1,1>(ap_block_state8_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state9.read()))) {
            ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state9.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                    esl_seteq<1,1,1>(ap_block_state8_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp3_exit_iter0_state12.read()))) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            ap_enable_reg_pp3_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp3_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp3_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp3_iter1 = ap_enable_reg_pp3_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
            ap_enable_reg_pp3_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp4_exit_iter0_state17.read()))) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            ap_enable_reg_pp4_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp4_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp4_exit_iter0_state17.read()))) {
            ap_enable_reg_pp4_iter1 = (ap_condition_pp4_exit_iter0_state17.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp4_iter1 = ap_enable_reg_pp4_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            ap_enable_reg_pp4_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_convert_hex_to_binar_fu_322_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_convert_hex_to_binar_fu_322_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convert_hex_to_binar_fu_322_ap_ready.read())) {
            grp_convert_hex_to_binar_fu_322_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_convert_hex_to_binar_fu_330_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_convert_hex_to_binar_fu_330_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_convert_hex_to_binar_fu_330_ap_ready.read())) {
            grp_convert_hex_to_binar_fu_330_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i1_0_reg_276 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln347_reg_817.read()))) {
        i1_0_reg_276 = i_1_reg_821.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln355_fu_463_p2.read()))) {
        i2_0_reg_288 = i_2_fu_469_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_block_state8_on_subcall_done.read(), ap_const_boolean_0))) {
        i2_0_reg_288 = ap_const_lv6_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        i3_0_reg_311 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln367_fu_757_p2.read()))) {
        i3_0_reg_311 = i_4_fu_763_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        i_0_i_reg_299 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_reg_851.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()))) {
        i_0_i_reg_299 = i_3_reg_855.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln342_reg_798.read(), ap_const_lv1_0))) {
        i_0_reg_264 = i_reg_802.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_264 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        add_ln344_reg_792 = add_ln344_fu_370_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        add_ln349_reg_812 = add_ln349_fu_426_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln367_fu_757_p2.read()))) {
        add_ln369_reg_938 = add_ln369_fu_778_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln355_fu_463_p2.read()))) {
        arr3_addr_reg_840 =  (sc_lv<5>) (zext_ln357_fu_475_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_i_reg_299_pp3_iter1_reg = i_0_i_reg_299.read();
        icmp_ln114_reg_851 = icmp_ln114_fu_496_p2.read();
        icmp_ln114_reg_851_pp3_iter1_reg = icmp_ln114_reg_851.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        i_1_reg_821 = i_1_fu_438_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()))) {
        i_3_reg_855 = i_3_fu_502_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_802 = i_fu_382_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_reg_851.read()))) {
        icmp_ln116_reg_876 = grp_fu_338_p2.read();
        icmp_ln117_reg_884 = grp_fu_344_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_reg_851.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()))) {
        icmp_ln118_reg_902 = grp_fu_338_p2.read();
        icmp_ln119_reg_909 = grp_fu_344_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln342_reg_798 = icmp_ln342_fu_376_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln347_reg_817 = icmp_ln347_fu_432_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln355_reg_831 = icmp_ln355_fu_463_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln367_reg_929 = icmp_ln367_fu_757_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_reg_851.read()))) {
        select_ln118_1_reg_924 = select_ln118_1_fu_610_p3.read();
        xor_ln118_reg_918 = xor_ln118_fu_598_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_fu_496_p2.read()))) {
        shl_ln_reg_860 = shl_ln_fu_512_p3.read();
    }
}

void xor_1_hw::thread_add_ln344_1_fu_392_p2() {
    add_ln344_1_fu_392_p2 = (!add_ln344_reg_792.read().is_01() || !zext_ln344_3_fu_388_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln344_reg_792.read()) + sc_biguint<8>(zext_ln344_3_fu_388_p1.read()));
}

void xor_1_hw::thread_add_ln344_fu_370_p2() {
    add_ln344_fu_370_p2 = (!zext_ln344_2_fu_366_p1.read().is_01() || !zext_ln344_1_fu_354_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln344_2_fu_366_p1.read()) + sc_biguint<8>(zext_ln344_1_fu_354_p1.read()));
}

void xor_1_hw::thread_add_ln349_1_fu_448_p2() {
    add_ln349_1_fu_448_p2 = (!add_ln349_reg_812.read().is_01() || !zext_ln349_3_fu_444_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln349_reg_812.read()) + sc_biguint<8>(zext_ln349_3_fu_444_p1.read()));
}

void xor_1_hw::thread_add_ln349_fu_426_p2() {
    add_ln349_fu_426_p2 = (!zext_ln349_2_fu_422_p1.read().is_01() || !zext_ln349_1_fu_410_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln349_2_fu_422_p1.read()) + sc_biguint<8>(zext_ln349_1_fu_410_p1.read()));
}

void xor_1_hw::thread_add_ln369_fu_778_p2() {
    add_ln369_fu_778_p2 = (!add_ln344_reg_792.read().is_01() || !zext_ln369_1_fu_774_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(add_ln344_reg_792.read()) + sc_biguint<8>(zext_ln369_1_fu_774_p1.read()));
}

void xor_1_hw::thread_and_ln117_1_fu_663_p2() {
    and_ln117_1_fu_663_p2 = (icmp_ln116_reg_876.read() & xor_ln117_fu_658_p2.read());
}

void xor_1_hw::thread_and_ln117_2_fu_698_p2() {
    and_ln117_2_fu_698_p2 = (icmp_ln117_reg_884.read() & xor_ln116_fu_693_p2.read());
}

void xor_1_hw::thread_and_ln117_fu_580_p2() {
    and_ln117_fu_580_p2 = (icmp_ln116_reg_876.read() & icmp_ln117_reg_884.read());
}

void xor_1_hw::thread_and_ln118_1_fu_604_p2() {
    and_ln118_1_fu_604_p2 = (and_ln117_fu_580_p2.read() & xor_ln118_fu_598_p2.read());
}

void xor_1_hw::thread_and_ln118_2_fu_668_p2() {
    and_ln118_2_fu_668_p2 = (and_ln117_1_fu_663_p2.read() & icmp_ln118_reg_902.read());
}

void xor_1_hw::thread_and_ln118_3_fu_680_p2() {
    and_ln118_3_fu_680_p2 = (and_ln117_1_fu_663_p2.read() & xor_ln118_reg_918.read());
}

void xor_1_hw::thread_and_ln118_4_fu_703_p2() {
    and_ln118_4_fu_703_p2 = (and_ln117_2_fu_698_p2.read() & icmp_ln118_reg_902.read());
}

void xor_1_hw::thread_and_ln118_5_fu_716_p2() {
    and_ln118_5_fu_716_p2 = (and_ln117_2_fu_698_p2.read() & xor_ln118_reg_918.read());
}

void xor_1_hw::thread_and_ln118_6_fu_739_p2() {
    and_ln118_6_fu_739_p2 = (icmp_ln118_reg_902.read() & xor_ln117_1_fu_733_p2.read());
}

void xor_1_hw::thread_and_ln118_fu_584_p2() {
    and_ln118_fu_584_p2 = (and_ln117_fu_580_p2.read() & grp_fu_338_p2.read());
}

void xor_1_hw::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void xor_1_hw::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void xor_1_hw::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[6];
}

void xor_1_hw::thread_ap_CS_fsm_pp3_stage0() {
    ap_CS_fsm_pp3_stage0 = ap_CS_fsm.read()[8];
}

void xor_1_hw::thread_ap_CS_fsm_pp3_stage1() {
    ap_CS_fsm_pp3_stage1 = ap_CS_fsm.read()[9];
}

void xor_1_hw::thread_ap_CS_fsm_pp4_stage0() {
    ap_CS_fsm_pp4_stage0 = ap_CS_fsm.read()[11];
}

void xor_1_hw::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void xor_1_hw::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[7];
}

void xor_1_hw::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[10];
}

void xor_1_hw::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[12];
}

void xor_1_hw::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[2];
}

void xor_1_hw::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void xor_1_hw::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[5];
}

void xor_1_hw::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp3_stage0() {
    ap_block_pp3_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp3_stage0_11001() {
    ap_block_pp3_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp3_stage0_subdone() {
    ap_block_pp3_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp3_stage1() {
    ap_block_pp3_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp3_stage1_11001() {
    ap_block_pp3_stage1_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp3_stage1_subdone() {
    ap_block_pp3_stage1_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp4_stage0() {
    ap_block_pp4_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp4_stage0_11001() {
    ap_block_pp4_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_pp4_stage0_subdone() {
    ap_block_pp4_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state10_pp2_stage0_iter1() {
    ap_block_state10_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state12_pp3_stage0_iter0() {
    ap_block_state12_pp3_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state13_pp3_stage1_iter0() {
    ap_block_state13_pp3_stage1_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state14_pp3_stage0_iter1() {
    ap_block_state14_pp3_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state15_pp3_stage1_iter1() {
    ap_block_state15_pp3_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state17_pp4_stage0_iter0() {
    ap_block_state17_pp4_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state18_pp4_stage0_iter1() {
    ap_block_state18_pp4_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_block_state8_on_subcall_done() {
    ap_block_state8_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_convert_hex_to_binar_fu_322_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_convert_hex_to_binar_fu_330_ap_done.read()));
}

void xor_1_hw::thread_ap_block_state9_pp2_stage0_iter0() {
    ap_block_state9_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xor_1_hw::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln342_fu_376_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_condition_pp1_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(icmp_ln347_fu_432_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_condition_pp2_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(icmp_ln355_fu_463_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state9 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_condition_pp3_exit_iter0_state12() {
    if (esl_seteq<1,1,1>(icmp_ln114_fu_496_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp3_exit_iter0_state12 = ap_const_logic_1;
    } else {
        ap_condition_pp3_exit_iter0_state12 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_condition_pp4_exit_iter0_state17() {
    if (esl_seteq<1,1,1>(icmp_ln367_fu_757_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp4_exit_iter0_state17 = ap_const_logic_1;
    } else {
        ap_condition_pp4_exit_iter0_state17 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void xor_1_hw::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void xor_1_hw::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void xor_1_hw::thread_ap_enable_pp3() {
    ap_enable_pp3 = (ap_idle_pp3.read() ^ ap_const_logic_1);
}

void xor_1_hw::thread_ap_enable_pp4() {
    ap_enable_pp4 = (ap_idle_pp4.read() ^ ap_const_logic_1);
}

void xor_1_hw::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_idle_pp3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp3_iter1.read()))) {
        ap_idle_pp3 = ap_const_logic_1;
    } else {
        ap_idle_pp3 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_idle_pp4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp4_iter1.read()))) {
        ap_idle_pp4 = ap_const_logic_1;
    } else {
        ap_idle_pp4 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_ap_phi_mux_i1_0_phi_fu_280_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln347_reg_817.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i1_0_phi_fu_280_p4 = i_1_reg_821.read();
    } else {
        ap_phi_mux_i1_0_phi_fu_280_p4 = i1_0_reg_276.read();
    }
}

void xor_1_hw::thread_ap_phi_mux_i_0_i_phi_fu_303_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_reg_851.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_i_phi_fu_303_p4 = i_3_reg_855.read();
    } else {
        ap_phi_mux_i_0_i_phi_fu_303_p4 = i_0_i_reg_299.read();
    }
}

void xor_1_hw::thread_ap_phi_mux_i_0_phi_fu_268_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln342_reg_798.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_268_p4 = i_reg_802.read();
    } else {
        ap_phi_mux_i_0_phi_fu_268_p4 = i_0_reg_264.read();
    }
}

void xor_1_hw::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0))) {
        arr1_address0 =  (sc_lv<3>) (zext_ln369_fu_769_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0))) {
        arr1_address0 =  (sc_lv<3>) (zext_ln119_1_fu_618_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        arr1_address0 =  (sc_lv<3>) (zext_ln344_fu_402_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr1_address0 = grp_convert_hex_to_binar_fu_322_hex_address0.read();
    } else {
        arr1_address0 = "XXX";
    }
}

void xor_1_hw::thread_arr1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read())))) {
        arr1_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr1_ce0 = grp_convert_hex_to_binar_fu_322_hex_ce0.read();
    } else {
        arr1_ce0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr1_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0))) {
        arr1_d0 = zext_ln118_1_fu_752_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        arr1_d0 = state_matrix_q0.read();
    } else {
        arr1_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void xor_1_hw::thread_arr1_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
          esl_seteq<1,1,1>(icmp_ln342_reg_798.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln114_reg_851_pp3_iter1_reg.read())))) {
        arr1_we0 = ap_const_logic_1;
    } else {
        arr1_we0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        arr2_address0 =  (sc_lv<3>) (zext_ln349_fu_458_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr2_address0 = grp_convert_hex_to_binar_fu_330_hex_address0.read();
    } else {
        arr2_address0 = "XXX";
    }
}

void xor_1_hw::thread_arr2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        arr2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr2_ce0 = grp_convert_hex_to_binar_fu_330_hex_ce0.read();
    } else {
        arr2_ce0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr2_d0() {
    arr2_d0 = state_matrix_q0.read();
}

void xor_1_hw::thread_arr2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln347_reg_817.read()))) {
        arr2_we0 = ap_const_logic_1;
    } else {
        arr2_we0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0))) {
        arr3_address0 =  (sc_lv<5>) (zext_ln118_fu_541_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0))) {
        arr3_address0 =  (sc_lv<5>) (zext_ln116_fu_520_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        arr3_address0 =  (sc_lv<5>) (zext_ln357_fu_475_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr3_address0 = grp_convert_hex_to_binar_fu_322_bin_address0.read();
    } else {
        arr3_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void xor_1_hw::thread_arr3_address1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp3_stage1.read(), ap_const_boolean_0))) {
        arr3_address1 =  (sc_lv<5>) (zext_ln119_fu_551_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp3_stage0.read(), ap_const_boolean_0))) {
        arr3_address1 =  (sc_lv<5>) (zext_ln117_fu_531_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()))) {
        arr3_address1 = arr3_addr_reg_840.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr3_address1 = grp_convert_hex_to_binar_fu_322_bin_address1.read();
    } else {
        arr3_address1 =  (sc_lv<5>) ("XXXXX");
    }
}

void xor_1_hw::thread_arr3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0)))) {
        arr3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr3_ce0 = grp_convert_hex_to_binar_fu_322_bin_ce0.read();
    } else {
        arr3_ce0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr3_ce1() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp3_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read())))) {
        arr3_ce1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr3_ce1 = grp_convert_hex_to_binar_fu_322_bin_ce1.read();
    } else {
        arr3_ce1 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr3_d0() {
    arr3_d0 = grp_convert_hex_to_binar_fu_322_bin_d0.read();
}

void xor_1_hw::thread_arr3_d1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()))) {
        arr3_d1 = select_ln357_fu_487_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr3_d1 = grp_convert_hex_to_binar_fu_322_bin_d1.read();
    } else {
        arr3_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void xor_1_hw::thread_arr3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr3_we0 = grp_convert_hex_to_binar_fu_322_bin_we0.read();
    } else {
        arr3_we0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr3_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln355_reg_831.read()))) {
        arr3_we1 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr3_we1 = grp_convert_hex_to_binar_fu_322_bin_we1.read();
    } else {
        arr3_we1 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr4_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        arr4_address0 =  (sc_lv<5>) (zext_ln357_fu_475_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr4_address0 = grp_convert_hex_to_binar_fu_330_bin_address0.read();
    } else {
        arr4_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void xor_1_hw::thread_arr4_address1() {
    arr4_address1 = grp_convert_hex_to_binar_fu_330_bin_address1.read();
}

void xor_1_hw::thread_arr4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()))) {
        arr4_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr4_ce0 = grp_convert_hex_to_binar_fu_330_bin_ce0.read();
    } else {
        arr4_ce0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr4_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr4_ce1 = grp_convert_hex_to_binar_fu_330_bin_ce1.read();
    } else {
        arr4_ce1 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr4_d0() {
    arr4_d0 = grp_convert_hex_to_binar_fu_330_bin_d0.read();
}

void xor_1_hw::thread_arr4_d1() {
    arr4_d1 = grp_convert_hex_to_binar_fu_330_bin_d1.read();
}

void xor_1_hw::thread_arr4_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr4_we0 = grp_convert_hex_to_binar_fu_330_bin_we0.read();
    } else {
        arr4_we0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_arr4_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        arr4_we1 = grp_convert_hex_to_binar_fu_330_bin_we1.read();
    } else {
        arr4_we1 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_grp_convert_hex_to_binar_fu_322_ap_start() {
    grp_convert_hex_to_binar_fu_322_ap_start = grp_convert_hex_to_binar_fu_322_ap_start_reg.read();
}

void xor_1_hw::thread_grp_convert_hex_to_binar_fu_330_ap_start() {
    grp_convert_hex_to_binar_fu_330_ap_start = grp_convert_hex_to_binar_fu_330_ap_start_reg.read();
}

void xor_1_hw::thread_grp_fu_338_p2() {
    grp_fu_338_p2 = (!arr3_q0.read().is_01() || !ap_const_lv8_30.is_01())? sc_lv<1>(): sc_lv<1>(arr3_q0.read() == ap_const_lv8_30);
}

void xor_1_hw::thread_grp_fu_344_p2() {
    grp_fu_344_p2 = (!arr3_q1.read().is_01() || !ap_const_lv8_30.is_01())? sc_lv<1>(): sc_lv<1>(arr3_q1.read() == ap_const_lv8_30);
}

void xor_1_hw::thread_i_1_fu_438_p2() {
    i_1_fu_438_p2 = (!ap_phi_mux_i1_0_phi_fu_280_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i1_0_phi_fu_280_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void xor_1_hw::thread_i_2_fu_469_p2() {
    i_2_fu_469_p2 = (!i2_0_reg_288.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i2_0_reg_288.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void xor_1_hw::thread_i_3_fu_502_p2() {
    i_3_fu_502_p2 = (!ap_phi_mux_i_0_i_phi_fu_303_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i_0_i_phi_fu_303_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void xor_1_hw::thread_i_4_fu_763_p2() {
    i_4_fu_763_p2 = (!i3_0_reg_311.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i3_0_reg_311.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void xor_1_hw::thread_i_fu_382_p2() {
    i_fu_382_p2 = (!ap_phi_mux_i_0_phi_fu_268_p4.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(ap_phi_mux_i_0_phi_fu_268_p4.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void xor_1_hw::thread_icmp_ln114_fu_496_p2() {
    icmp_ln114_fu_496_p2 = (!ap_phi_mux_i_0_i_phi_fu_303_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_i_phi_fu_303_p4.read() == ap_const_lv4_8);
}

void xor_1_hw::thread_icmp_ln342_fu_376_p2() {
    icmp_ln342_fu_376_p2 = (!ap_phi_mux_i_0_phi_fu_268_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_268_p4.read() == ap_const_lv4_8);
}

void xor_1_hw::thread_icmp_ln347_fu_432_p2() {
    icmp_ln347_fu_432_p2 = (!ap_phi_mux_i1_0_phi_fu_280_p4.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i1_0_phi_fu_280_p4.read() == ap_const_lv4_8);
}

void xor_1_hw::thread_icmp_ln355_fu_463_p2() {
    icmp_ln355_fu_463_p2 = (!i2_0_reg_288.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_288.read() == ap_const_lv6_20);
}

void xor_1_hw::thread_icmp_ln357_fu_481_p2() {
    icmp_ln357_fu_481_p2 = (!arr3_q0.read().is_01() || !arr4_q0.read().is_01())? sc_lv<1>(): sc_lv<1>(arr3_q0.read() == arr4_q0.read());
}

void xor_1_hw::thread_icmp_ln367_fu_757_p2() {
    icmp_ln367_fu_757_p2 = (!i3_0_reg_311.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(i3_0_reg_311.read() == ap_const_lv4_8);
}

void xor_1_hw::thread_or_ln117_1_fu_729_p2() {
    or_ln117_1_fu_729_p2 = (icmp_ln116_reg_876.read() | icmp_ln117_reg_884.read());
}

void xor_1_hw::thread_or_ln117_fu_525_p2() {
    or_ln117_fu_525_p2 = (shl_ln_fu_512_p3.read() | ap_const_lv5_1);
}

void xor_1_hw::thread_or_ln118_fu_536_p2() {
    or_ln118_fu_536_p2 = (shl_ln_reg_860.read() | ap_const_lv5_2);
}

void xor_1_hw::thread_or_ln119_fu_546_p2() {
    or_ln119_fu_546_p2 = (shl_ln_reg_860.read() | ap_const_lv5_3);
}

void xor_1_hw::thread_select_ln118_1_fu_610_p3() {
    select_ln118_1_fu_610_p3 = (!and_ln118_1_fu_604_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln118_1_fu_604_p2.read()[0].to_bool())? select_ln123_fu_564_p3.read(): select_ln118_fu_590_p3.read());
}

void xor_1_hw::thread_select_ln118_2_fu_673_p3() {
    select_ln118_2_fu_673_p3 = (!and_ln118_2_fu_668_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln118_2_fu_668_p2.read()[0].to_bool())? select_ln129_fu_623_p3.read(): select_ln118_1_reg_924.read());
}

void xor_1_hw::thread_select_ln118_3_fu_685_p3() {
    select_ln118_3_fu_685_p3 = (!and_ln118_3_fu_680_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln118_3_fu_680_p2.read()[0].to_bool())? select_ln133_fu_630_p3.read(): select_ln118_2_fu_673_p3.read());
}

void xor_1_hw::thread_select_ln118_4_fu_708_p3() {
    select_ln118_4_fu_708_p3 = (!and_ln118_4_fu_703_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln118_4_fu_703_p2.read()[0].to_bool())? select_ln141_fu_637_p3.read(): select_ln118_3_fu_685_p3.read());
}

void xor_1_hw::thread_select_ln118_5_fu_721_p3() {
    select_ln118_5_fu_721_p3 = (!and_ln118_5_fu_716_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln118_5_fu_716_p2.read()[0].to_bool())? select_ln145_fu_644_p3.read(): select_ln118_4_fu_708_p3.read());
}

void xor_1_hw::thread_select_ln118_6_fu_744_p3() {
    select_ln118_6_fu_744_p3 = (!and_ln118_6_fu_739_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln118_6_fu_739_p2.read()[0].to_bool())? select_ln151_fu_651_p3.read(): select_ln118_5_fu_721_p3.read());
}

void xor_1_hw::thread_select_ln118_fu_590_p3() {
    select_ln118_fu_590_p3 = (!and_ln118_fu_584_p2.read()[0].is_01())? sc_lv<7>(): ((and_ln118_fu_584_p2.read()[0].to_bool())? select_ln119_fu_556_p3.read(): select_ln155_fu_572_p3.read());
}

void xor_1_hw::thread_select_ln119_fu_556_p3() {
    select_ln119_fu_556_p3 = (!grp_fu_344_p2.read()[0].is_01())? sc_lv<7>(): ((grp_fu_344_p2.read()[0].to_bool())? ap_const_lv7_30: ap_const_lv7_31);
}

void xor_1_hw::thread_select_ln123_fu_564_p3() {
    select_ln123_fu_564_p3 = (!grp_fu_344_p2.read()[0].is_01())? sc_lv<7>(): ((grp_fu_344_p2.read()[0].to_bool())? ap_const_lv7_32: ap_const_lv7_33);
}

void xor_1_hw::thread_select_ln129_fu_623_p3() {
    select_ln129_fu_623_p3 = (!icmp_ln119_reg_909.read()[0].is_01())? sc_lv<7>(): ((icmp_ln119_reg_909.read()[0].to_bool())? ap_const_lv7_34: ap_const_lv7_35);
}

void xor_1_hw::thread_select_ln133_fu_630_p3() {
    select_ln133_fu_630_p3 = (!icmp_ln119_reg_909.read()[0].is_01())? sc_lv<7>(): ((icmp_ln119_reg_909.read()[0].to_bool())? ap_const_lv7_36: ap_const_lv7_37);
}

void xor_1_hw::thread_select_ln141_fu_637_p3() {
    select_ln141_fu_637_p3 = (!icmp_ln119_reg_909.read()[0].is_01())? sc_lv<7>(): ((icmp_ln119_reg_909.read()[0].to_bool())? ap_const_lv7_38: ap_const_lv7_39);
}

void xor_1_hw::thread_select_ln145_fu_644_p3() {
    select_ln145_fu_644_p3 = (!icmp_ln119_reg_909.read()[0].is_01())? sc_lv<7>(): ((icmp_ln119_reg_909.read()[0].to_bool())? ap_const_lv7_61: ap_const_lv7_62);
}

void xor_1_hw::thread_select_ln151_fu_651_p3() {
    select_ln151_fu_651_p3 = (!icmp_ln119_reg_909.read()[0].is_01())? sc_lv<7>(): ((icmp_ln119_reg_909.read()[0].to_bool())? ap_const_lv7_63: ap_const_lv7_64);
}

void xor_1_hw::thread_select_ln155_fu_572_p3() {
    select_ln155_fu_572_p3 = (!grp_fu_344_p2.read()[0].is_01())? sc_lv<7>(): ((grp_fu_344_p2.read()[0].to_bool())? ap_const_lv7_65: ap_const_lv7_66);
}

void xor_1_hw::thread_select_ln357_fu_487_p3() {
    select_ln357_fu_487_p3 = (!icmp_ln357_fu_481_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln357_fu_481_p2.read()[0].to_bool())? ap_const_lv8_30: ap_const_lv8_31);
}

void xor_1_hw::thread_shl_ln_fu_512_p3() {
    shl_ln_fu_512_p3 = esl_concat<3,2>(trunc_ln116_fu_508_p1.read(), ap_const_lv2_0);
}

void xor_1_hw::thread_state_matrix_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()))) {
        state_matrix_address0 =  (sc_lv<8>) (zext_ln369_2_fu_783_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        state_matrix_address0 =  (sc_lv<8>) (zext_ln349_4_fu_453_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        state_matrix_address0 =  (sc_lv<8>) (zext_ln344_4_fu_397_p1.read());
    } else {
        state_matrix_address0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void xor_1_hw::thread_state_matrix_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read())))) {
        state_matrix_ce0 = ap_const_logic_1;
    } else {
        state_matrix_ce0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_state_matrix_d0() {
    state_matrix_d0 = arr1_q0.read();
}

void xor_1_hw::thread_state_matrix_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp4_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp4_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln367_reg_929.read()))) {
        state_matrix_we0 = ap_const_logic_1;
    } else {
        state_matrix_we0 = ap_const_logic_0;
    }
}

void xor_1_hw::thread_tmp_6_fu_358_p3() {
    tmp_6_fu_358_p3 = esl_concat<4,3>(trunc_ln344_fu_350_p1.read(), ap_const_lv3_0);
}

void xor_1_hw::thread_tmp_9_fu_414_p3() {
    tmp_9_fu_414_p3 = esl_concat<4,3>(trunc_ln349_fu_407_p1.read(), ap_const_lv3_0);
}

void xor_1_hw::thread_trunc_ln116_fu_508_p1() {
    trunc_ln116_fu_508_p1 = ap_phi_mux_i_0_i_phi_fu_303_p4.read().range(3-1, 0);
}

void xor_1_hw::thread_trunc_ln344_fu_350_p1() {
    trunc_ln344_fu_350_p1 = index1.read().range(4-1, 0);
}

void xor_1_hw::thread_trunc_ln349_fu_407_p1() {
    trunc_ln349_fu_407_p1 = index2.read().range(4-1, 0);
}

void xor_1_hw::thread_xor_ln116_fu_693_p2() {
    xor_ln116_fu_693_p2 = (icmp_ln116_reg_876.read() ^ ap_const_lv1_1);
}

void xor_1_hw::thread_xor_ln117_1_fu_733_p2() {
    xor_ln117_1_fu_733_p2 = (or_ln117_1_fu_729_p2.read() ^ ap_const_lv1_1);
}

void xor_1_hw::thread_xor_ln117_fu_658_p2() {
    xor_ln117_fu_658_p2 = (icmp_ln117_reg_884.read() ^ ap_const_lv1_1);
}

void xor_1_hw::thread_xor_ln118_fu_598_p2() {
    xor_ln118_fu_598_p2 = (grp_fu_338_p2.read() ^ ap_const_lv1_1);
}

void xor_1_hw::thread_zext_ln116_fu_520_p1() {
    zext_ln116_fu_520_p1 = esl_zext<64,5>(shl_ln_fu_512_p3.read());
}

void xor_1_hw::thread_zext_ln117_fu_531_p1() {
    zext_ln117_fu_531_p1 = esl_zext<64,5>(or_ln117_fu_525_p2.read());
}

void xor_1_hw::thread_zext_ln118_1_fu_752_p1() {
    zext_ln118_1_fu_752_p1 = esl_zext<8,7>(select_ln118_6_fu_744_p3.read());
}

void xor_1_hw::thread_zext_ln118_fu_541_p1() {
    zext_ln118_fu_541_p1 = esl_zext<64,5>(or_ln118_fu_536_p2.read());
}

void xor_1_hw::thread_zext_ln119_1_fu_618_p1() {
    zext_ln119_1_fu_618_p1 = esl_zext<64,4>(i_0_i_reg_299_pp3_iter1_reg.read());
}

void xor_1_hw::thread_zext_ln119_fu_551_p1() {
    zext_ln119_fu_551_p1 = esl_zext<64,5>(or_ln119_fu_546_p2.read());
}

void xor_1_hw::thread_zext_ln344_1_fu_354_p1() {
    zext_ln344_1_fu_354_p1 = esl_zext<8,4>(trunc_ln344_fu_350_p1.read());
}

void xor_1_hw::thread_zext_ln344_2_fu_366_p1() {
    zext_ln344_2_fu_366_p1 = esl_zext<8,7>(tmp_6_fu_358_p3.read());
}

void xor_1_hw::thread_zext_ln344_3_fu_388_p1() {
    zext_ln344_3_fu_388_p1 = esl_zext<8,4>(ap_phi_mux_i_0_phi_fu_268_p4.read());
}

void xor_1_hw::thread_zext_ln344_4_fu_397_p1() {
    zext_ln344_4_fu_397_p1 = esl_zext<64,8>(add_ln344_1_fu_392_p2.read());
}

void xor_1_hw::thread_zext_ln344_fu_402_p1() {
    zext_ln344_fu_402_p1 = esl_zext<64,4>(i_0_reg_264.read());
}

void xor_1_hw::thread_zext_ln349_1_fu_410_p1() {
    zext_ln349_1_fu_410_p1 = esl_zext<8,4>(trunc_ln349_fu_407_p1.read());
}

void xor_1_hw::thread_zext_ln349_2_fu_422_p1() {
    zext_ln349_2_fu_422_p1 = esl_zext<8,7>(tmp_9_fu_414_p3.read());
}

void xor_1_hw::thread_zext_ln349_3_fu_444_p1() {
    zext_ln349_3_fu_444_p1 = esl_zext<8,4>(ap_phi_mux_i1_0_phi_fu_280_p4.read());
}

void xor_1_hw::thread_zext_ln349_4_fu_453_p1() {
    zext_ln349_4_fu_453_p1 = esl_zext<64,8>(add_ln349_1_fu_448_p2.read());
}

void xor_1_hw::thread_zext_ln349_fu_458_p1() {
    zext_ln349_fu_458_p1 = esl_zext<64,4>(i1_0_reg_276.read());
}

void xor_1_hw::thread_zext_ln357_fu_475_p1() {
    zext_ln357_fu_475_p1 = esl_zext<64,6>(i2_0_reg_288.read());
}

void xor_1_hw::thread_zext_ln369_1_fu_774_p1() {
    zext_ln369_1_fu_774_p1 = esl_zext<8,4>(i3_0_reg_311.read());
}

void xor_1_hw::thread_zext_ln369_2_fu_783_p1() {
    zext_ln369_2_fu_783_p1 = esl_zext<64,8>(add_ln369_reg_938.read());
}

void xor_1_hw::thread_zext_ln369_fu_769_p1() {
    zext_ln369_fu_769_p1 = esl_zext<64,4>(i3_0_reg_311.read());
}

void xor_1_hw::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln342_fu_376_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln342_fu_376_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln347_fu_432_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln347_fu_432_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_block_state8_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 64 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln355_fu_463_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln355_fu_463_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            break;
        case 256 : 
            if ((esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln114_fu_496_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln114_fu_496_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            }
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_block_pp3_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp3_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp3_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp3_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp3_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            break;
        case 2048 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln367_fu_757_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp4_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp4_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln367_fu_757_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state19;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

}

